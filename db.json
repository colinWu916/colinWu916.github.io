{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/matery/source/css/barrager.css","path":"css/barrager.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/bb.css","path":"css/bb.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/dark.css","path":"css/dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/gallery.css","path":"css/gallery.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/indexcover.css","path":"css/indexcover.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/reward.css","path":"css/reward.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/post.css","path":"css/post.css","modified":0,"renderable":1},{"_id":"themes/matery/source/images/tbkwPage.png","path":"images/tbkwPage.png","modified":0,"renderable":1},{"_id":"themes/matery/source/js/crypto-js.js","path":"js/crypto-js.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/gallery-encrypt.js","path":"js/gallery-encrypt.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/jquery.barrager.js","path":"js/jquery.barrager.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/Meting.min.js","path":"libs/aplayer/Meting.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/fancybox/fancybox.js","path":"libs/fancybox/fancybox.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/fancybox/jquery.fancybox.css","path":"libs/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jquery/jquery-3.6.0.min.js","path":"libs/jquery/jquery-3.6.0.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/justifiedGallery/justifiedGallery.min.css","path":"libs/justifiedGallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/justifiedGallery/justifiedGallery.min.js","path":"libs/justifiedGallery/justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/mermaid/mermaid.js","path":"libs/mermaid/mermaid.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/mermaid/mermaid.min.js","path":"libs/mermaid/mermaid.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/mermaid/mermaid.min.css","path":"libs/mermaid/mermaid.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prism/prism.min.js","path":"libs/prism/prism.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prism/prism.min.css","path":"libs/prism/prism.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/TencentCaptcha.js","path":"libs/others/TencentCaptcha.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/sakura-half.js","path":"libs/others/sakura-half.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/sakura-small.js","path":"libs/others/sakura-small.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/sakura-reduce.js","path":"libs/others/sakura-reduce.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/sakura.js","path":"libs/others/sakura.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/star.js","path":"libs/others/star.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/typed/typed.js","path":"libs/typed/typed.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/waline/Waline.min.js","path":"libs/waline/Waline.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/barrager/0.png","path":"medias/barrager/0.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/barrager/1.png","path":"medias/barrager/1.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/barrager/close.png","path":"medias/barrager/close.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/barrager/2.png","path":"medias/barrager/2.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/9.jpg","path":"medias/banner/9.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/7.jpg","path":"medias/banner/7.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/8.jpg","path":"medias/banner/8.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/images/01.jpg","path":"medias/images/01.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/images/03.jpg","path":"medias/images/03.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/images/02.jpg","path":"medias/images/02.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/css/all.min.css","path":"libs/awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","path":"libs/awesome/webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","path":"libs/awesome/webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"73390bdde1f0d07811a10c5e0db32db87543b20e","modified":1730790792583},{"_id":"source/contact/index.md","hash":"df200366f9e2c014b2b7957eed4ab9eb02cdde41","modified":1665234341558},{"_id":"source/about/index.md","hash":"a6af6b4554f3b1eb8bd952f734ba135fead32316","modified":1665234318888},{"_id":"source/_data/friends.json","hash":"0e00a93d02871b8b4bab4ae7f04c0f0b1c851a49","modified":1730819098498},{"_id":"source/categories/index.md","hash":"b6a1b59dcaef01581000cc999346b88a37cee6b2","modified":1665234243368},{"_id":"source/friends/index.md","hash":"2be114a59665f3f4e39e39e1db1173e98d7b84c4","modified":1665234369419},{"_id":"source/tags/index.md","hash":"559af4a536f3f78c29a5743444905912844e0d92","modified":1665234285334},{"_id":"source/_posts/工作记录/工作记录-2：pdf.js的使用.md","hash":"e17fb1bc67f356a54abf41c5f5378ce4a1ef146d","modified":1733123490414},{"_id":"source/_posts/工作记录/工作记录-1：资源制作性能优化方案.md","hash":"9c1f3f57daa2f8798f93b13ddf30ff952fcae126","modified":1733123256383},{"_id":"source/_posts/工作记录/工作记录-3、多audio标签的协调.md","hash":"fef855f2a777a28c0013a44f50f69eb7fb44a682","modified":1733123611303},{"_id":"source/_posts/组件封装/组件封装-2：iview-Table之动态合并单元格.md","hash":"ec358ac3230bb34828c6ef4ccf46ffa81faf85e4","modified":1733123883718},{"_id":"source/_posts/组件封装/组件封装-1：复制execl批量搜索.md","hash":"b1d266475ad7485f0740f2b02c0540fcdd1e8332","modified":1733123784846},{"_id":"source/_posts/组件封装/组件封装-3：基于wavesurfer封装可视化音标标注组件.md","hash":"428881cb992a91c3eebbaba4ab001dfbf59b8bc6","modified":1733123981240},{"_id":"themes/matery/.gitignore","hash":"727607929a51db7ea10968f547c26041eee9cfff","modified":1683615228000},{"_id":"themes/matery/CHANGELOG.md","hash":"084ec8b110a20170d08a0aa5fd8accf601051835","modified":1683615228000},{"_id":"themes/matery/_config.yml","hash":"712f335744e0e0fa68630df1737cd5cb338afdcf","modified":1733121344908},{"_id":"themes/matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1683615228000},{"_id":"themes/matery/README.md","hash":"9d98fe84a60bd6b222740f238d83f0999eaa77a3","modified":1683615228000},{"_id":"themes/matery/languages/jp.yml","hash":"a811cec0b6d91f405e8c7386a57039cd8c3448bb","modified":1683615228000},{"_id":"themes/matery/README_CN.md","hash":"497c6645c55dce9f190ec7625de76083262e1707","modified":1683615228000},{"_id":"themes/matery/languages/default.yml","hash":"2ed57824573d7bed71e56023ed92500734a8886d","modified":1683615228000},{"_id":"themes/matery/languages/zh-HK.yml","hash":"51c06005927e8bde5b3e23353d2bf2c32ed855f3","modified":1683615228000},{"_id":"themes/matery/languages/zh-CN.yml","hash":"a2695fdb7579a77daec7773a9bb8e71b9edbf16b","modified":1683615228000},{"_id":"themes/matery/layout/404.ejs","hash":"36f8d3e530e8144bf80d0772284edd9b0da362fe","modified":1683615228000},{"_id":"themes/matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1683615228000},{"_id":"themes/matery/layout/about.ejs","hash":"99a74316aed478efb0db823c4460ee2e660f101c","modified":1683615228000},{"_id":"themes/matery/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1683615228000},{"_id":"themes/matery/layout/contact.ejs","hash":"71ef2540fa586cd0c3b1f216f59fa9ec85fc6a38","modified":1683615228000},{"_id":"themes/matery/layout/friends.ejs","hash":"534511d9f38f281b531e24c19d9c1526cc7e5e27","modified":1683615228000},{"_id":"themes/matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1683615228000},{"_id":"themes/matery/layout/galleries.ejs","hash":"85b8b9e583ffa7a4ee6d0c2be4779cb2f7d91777","modified":1683615228000},{"_id":"themes/matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1683615228000},{"_id":"themes/matery/layout/index.ejs","hash":"1656c2db90e24a360282d15c71144b4f14edb43d","modified":1683615228000},{"_id":"themes/matery/layout/gallery.ejs","hash":"fcc7364b03329148ba4920cddb0d34d5b7410788","modified":1683615228000},{"_id":"themes/matery/layout/musics.ejs","hash":"9ac6053e09ed2c8a844d7e93c3fdce4ded95248a","modified":1683615228000},{"_id":"themes/matery/layout/layout.ejs","hash":"94c2fee85418370ca8f7d54050c852267e924eb7","modified":1683615228000},{"_id":"themes/matery/layout/movies.ejs","hash":"abce85ffdd99e787e3652fbd466447e032b626bd","modified":1683615228000},{"_id":"themes/matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1683615228000},{"_id":"themes/matery/layout/post.ejs","hash":"3d4f40121dbb75bcb71837c35ec5ee17cdffae31","modified":1683615228000},{"_id":"themes/matery/layout/_partial/background.ejs","hash":"12350c0d366141b5c27792bb414d4adc303b0a9f","modified":1683615228000},{"_id":"themes/matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1683615228000},{"_id":"themes/matery/source/favicon.png","hash":"ef8cda37226e9404029cc8b1f3fb2071a1a74436","modified":1730810481650},{"_id":"themes/matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1683615228000},{"_id":"themes/matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1683615228000},{"_id":"themes/matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1683615228000},{"_id":"themes/matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1683615228000},{"_id":"themes/matery/layout/_partial/bg-cover-content.ejs","hash":"9e6b10d5cf4b5faf0d851f4777f75a7297ce68b9","modified":1683615228000},{"_id":"themes/matery/layout/_partial/codeblock.ejs","hash":"086a06863a0f88888707409936aa06a09ff50e3a","modified":1683615228000},{"_id":"themes/matery/layout/_partial/cover-style.ejs","hash":"4288b9d91b2d71404e7a509a81a5d7f7a4b8b5e8","modified":1683615228000},{"_id":"themes/matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1683615228000},{"_id":"themes/matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1683615228000},{"_id":"themes/matery/layout/_partial/footer.ejs","hash":"41f9f9f558eb43423102f56ccb1bfa4bc1b3d3d5","modified":1733121265785},{"_id":"themes/matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1683615228000},{"_id":"themes/matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1683615228000},{"_id":"themes/matery/layout/_partial/head.ejs","hash":"f5c00f21af281a09dc7de89e82a3b442903451a7","modified":1683615228000},{"_id":"themes/matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1683615228000},{"_id":"themes/matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1683615228000},{"_id":"themes/matery/layout/_partial/index-cover.ejs","hash":"e8b44268b59add61af44b7338527523d10d9d742","modified":1683615228000},{"_id":"themes/matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1683615228000},{"_id":"themes/matery/layout/_partial/main-style.ejs","hash":"8819b334509682355a5e53fa0f307f90166d175c","modified":1683615228000},{"_id":"themes/matery/layout/_partial/mobile-nav.ejs","hash":"52de0cf3ce13a3477b0a1659d2b8aa41db1f622d","modified":1683615228000},{"_id":"themes/matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1683615228000},{"_id":"themes/matery/layout/_partial/navigation.ejs","hash":"0953217f4e19a51dfc5a0ffc7d066406df18060b","modified":1683615228000},{"_id":"themes/matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1683615228000},{"_id":"themes/matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1683615228000},{"_id":"themes/matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1683615228000},{"_id":"themes/matery/layout/_partial/post-detail-toc.ejs","hash":"70fccaea75ce48364222c4e5de0496e556b01cb1","modified":1683615228000},{"_id":"themes/matery/layout/_partial/post-detail.ejs","hash":"6261f8191c3c1159f63ec7f9293bb93f7d2a3dbb","modified":1683615228000},{"_id":"themes/matery/layout/_partial/post-style.ejs","hash":"243c3ba783553f25955d524fd47a5bb59a5e732b","modified":1683615228000},{"_id":"themes/matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1683615228000},{"_id":"themes/matery/layout/_partial/reward-style.ejs","hash":"8256ed940c0185ccf01890d59fb4262f196e2323","modified":1683615228000},{"_id":"themes/matery/layout/_partial/reward.ejs","hash":"236668e72b01db91f5bf29eec4c79e34e2746d98","modified":1683615228000},{"_id":"themes/matery/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1683615228000},{"_id":"themes/matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1683615228000},{"_id":"themes/matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1683615228000},{"_id":"themes/matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1683615228000},{"_id":"themes/matery/layout/_partial/valine.ejs","hash":"2ac48566bb806336f1e5bc5c66fc816a580d63c3","modified":1683615228000},{"_id":"themes/matery/layout/_partial/waline.ejs","hash":"2658cb73ef984a30b248351d7858ee15596a6e7a","modified":1683615228000},{"_id":"themes/matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1683615228000},{"_id":"themes/matery/layout/_partial/twikoo.ejs","hash":"f9cb8c82b9d2a7cdb644e10718f1cdeb9400414c","modified":1683615228000},{"_id":"themes/matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1683615228000},{"_id":"themes/matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1683615228000},{"_id":"themes/matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1683615228000},{"_id":"themes/matery/layout/_widget/day-night.ejs","hash":"ff21dd5e49e1fc9a9ab8c7d164fd4b32a8265ea2","modified":1683615228000},{"_id":"themes/matery/layout/_widget/music.ejs","hash":"bb25a6fa51eb5ebfba687b2cbadff6c7a4b4bfef","modified":1683615228000},{"_id":"themes/matery/layout/_widget/musics.ejs","hash":"bfebdf0731fee0cd4fd51efa0da1d0184565ae25","modified":1683615228000},{"_id":"themes/matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1683615228000},{"_id":"themes/matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1683615228000},{"_id":"themes/matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1683615228000},{"_id":"themes/matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1683615228000},{"_id":"themes/matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1683615228000},{"_id":"themes/matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1683615228000},{"_id":"themes/matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1683615228000},{"_id":"themes/matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1683615228000},{"_id":"themes/matery/layout/_widget/video.ejs","hash":"5e5ec78f8ab229d54786ef2e0ea2864af2dc459f","modified":1683615228000},{"_id":"themes/matery/scripts/tags/note.js","hash":"84b0122b92342834540f69b19600cb54c50ab69e","modified":1683615228000},{"_id":"themes/matery/scripts/tags/button.js","hash":"ab02fb2da648f4f7afa0c2381aaca334bdeb54e6","modified":1683615228000},{"_id":"themes/matery/scripts/tags/index.js","hash":"223a31ea3aa4a689d45a033c7d680cb4fff8d8af","modified":1683615228000},{"_id":"themes/matery/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1683615228000},{"_id":"themes/matery/source/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1683615228000},{"_id":"themes/matery/source/css/gallery.css","hash":"015097ca1271dd44e6d663332587dbe58ae2ade8","modified":1683615228000},{"_id":"themes/matery/source/css/dark.css","hash":"be4ef08494f3c965d513d9413685c0e723f671cd","modified":1683615228000},{"_id":"themes/matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1683615228000},{"_id":"themes/matery/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1683615228000},{"_id":"themes/matery/source/css/matery.css","hash":"a9a4c44ca241a0b468cc503d358ab6ab7629be0c","modified":1732878512357},{"_id":"themes/matery/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1683615228000},{"_id":"themes/matery/source/css/reward.css","hash":"56f8d21c3bb1dc57c762a63d13b08161d8260738","modified":1683615228000},{"_id":"themes/matery/source/css/indexcover.css","hash":"00f4f498ae8514022004f2281cab8ff304cd0f37","modified":1683615228000},{"_id":"themes/matery/source/css/post.css","hash":"1ebbf9ddee7db4b3039d8d4e25f2605072ab6e24","modified":1683615228000},{"_id":"themes/matery/source/images/tbkwPage.png","hash":"d97628ea2d018b14ff6248368250f72279bfcc81","modified":1732871001226},{"_id":"themes/matery/source/js/search.js","hash":"5caa2d6e3d34c334ac68dfaafc81a583d6123382","modified":1683615228000},{"_id":"themes/matery/source/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1683615228000},{"_id":"themes/matery/source/js/matery.js","hash":"aa957ea8cf6787f0ed6095fedc6cb9d7d1bf3522","modified":1683615228000},{"_id":"themes/matery/source/js/gallery-encrypt.js","hash":"f611a391d62da17b71f75577a72ad246ef6c5a71","modified":1683615228000},{"_id":"themes/matery/source/js/tw_cn.js","hash":"29157cdfa87aec28e56d3d5717d486bf4de07db6","modified":1683615228000},{"_id":"themes/matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1683615228000},{"_id":"themes/matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1683615228000},{"_id":"themes/matery/layout/_partial/bg-video.ejs","hash":"963422029eb5158eb5f5bc97ce19b66e5399db97","modified":1683615228000},{"_id":"themes/matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1683615228000},{"_id":"themes/matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1683615228000},{"_id":"themes/matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1683615228000},{"_id":"themes/matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1683615228000},{"_id":"themes/matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1683615228000},{"_id":"themes/matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1683615228000},{"_id":"themes/matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1683615228000},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1683615228000},{"_id":"themes/matery/source/libs/aplayer/Meting.min.js","hash":"f2b3d20b8bd64ccd031c64628f2b1323078ae324","modified":1683615228000},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1683615228000},{"_id":"themes/matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1683615228000},{"_id":"themes/matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1683615228000},{"_id":"themes/matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1683615228000},{"_id":"themes/matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1683615228000},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1683615228000},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1683615228000},{"_id":"themes/matery/source/libs/fancybox/jquery.fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1683615228000},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1683615228000},{"_id":"themes/matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1683615228000},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1683615228000},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1683615228000},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1683615228000},{"_id":"themes/matery/source/libs/justifiedGallery/justifiedGallery.min.css","hash":"b9323091d50785ad6c617d7cae76a41a89eb44b3","modified":1683615228000},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","hash":"d20252cf76c3be8af37a8415d13ad368c762b4d8","modified":1683615228000},{"_id":"themes/matery/source/libs/justifiedGallery/justifiedGallery.min.js","hash":"6f5433cc9f19ce2403e903e5d01a4c7b38f0969b","modified":1683615228000},{"_id":"themes/matery/source/libs/mermaid/mermaid.min.css","hash":"1dbcd9312e57f2a0b569451d0028d88316614481","modified":1683615228000},{"_id":"themes/matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1683615228000},{"_id":"themes/matery/source/libs/prism/prism.min.css","hash":"ed3896649670cf142e514685da2b060cca5fd43a","modified":1683615228000},{"_id":"themes/matery/source/libs/others/TencentCaptcha.js","hash":"fb4d34c48567b7b992aac1c75f0d24c3eb2cc3fa","modified":1683615228000},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1683615228000},{"_id":"themes/matery/source/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1683615228000},{"_id":"themes/matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1683615228000},{"_id":"themes/matery/source/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1683615228000},{"_id":"themes/matery/source/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1683615228000},{"_id":"themes/matery/source/libs/others/star.js","hash":"cf32f8ce2a1a51ba65d3b6063fe2ee1482550190","modified":1683615228000},{"_id":"themes/matery/source/libs/others/sakura.js","hash":"b6ebe8f040c84f067300996a5f377846f01605fa","modified":1683615228000},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1683615228000},{"_id":"themes/matery/source/libs/others/snow.js","hash":"02b1eeaca737c47be637b304feb3d36d792ee0c4","modified":1683615228000},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1683615228000},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","hash":"39055053a477e7d54b46cfb46591f84cc3818eeb","modified":1683615228000},{"_id":"themes/matery/source/libs/typed/typed.js","hash":"eaf2798298790ec3fad17f6c68b5d3b02dfd069c","modified":1683615228000},{"_id":"themes/matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1683615228000},{"_id":"themes/matery/source/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1683615228000},{"_id":"themes/matery/source/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1683615228000},{"_id":"themes/matery/source/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1683615228000},{"_id":"themes/matery/source/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1683615228000},{"_id":"themes/matery/source/medias/banner/3.jpg","hash":"71c3cb31ac7fbc295f386f77d54740fa00ad44d4","modified":1732527871024},{"_id":"themes/matery/source/medias/banner/9.jpg","hash":"bf837fbaa1d5185cd25cb06989d9e7f1dbd52f08","modified":1732527981667},{"_id":"themes/matery/source/medias/banner/8.jpg","hash":"8f42f6c6501bed487139a7dd9a41aad61dc1314d","modified":1732527947493},{"_id":"themes/matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1683615228000},{"_id":"themes/matery/source/medias/reward/alipay.jpg","hash":"d06a9d5d26992156bc39530eadf2bf91e7773566","modified":1731058052054},{"_id":"themes/matery/source/medias/reward/wechat.png","hash":"1be8beb1e9267d8ccb05a43992f58d8fb9ae39e1","modified":1731058029098},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"9b26d745a1e69b23d71b7ea36d5de1209c997901","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","hash":"3fc15c8154f8bd2d7bd1dfe55ae5ab1c33e5e40f","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f7a09bcbd996fd634045d4e79b6504c945730686","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","hash":"37ab2a6a0810d5a6c10a355fe1d7af0042bd6a2a","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","hash":"509c56c80732a1cd80df8f2b4b0ac1128c31999f","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","hash":"49693fa946534a56d7e5d4274e1ce55b05d782c3","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","hash":"04f09ad797ced119d6608909d06e500f16a03bbb","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"7873d80020ae04955bb57521bd249a6974d1180f","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"aab2633f69581c2e26e22a23712f1501d7fcec18","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1683615228000},{"_id":"themes/matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1683615228000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1683615228000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1683615228000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1683615228000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1683615228000},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1683615228000},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1683615228000},{"_id":"themes/matery/source/libs/fancybox/fancybox.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1683615228000},{"_id":"themes/matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1683615228000},{"_id":"themes/matery/source/libs/jquery/jquery-3.6.0.min.js","hash":"b82d238d4e31fdf618bae8ac11a6c812c03dd0d4","modified":1683615228000},{"_id":"themes/matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1683615228000},{"_id":"themes/matery/source/medias/banner/1.jpg","hash":"0fbb515925fa6b417b9cabc789f1927ba6f1fe12","modified":1732527504401},{"_id":"themes/matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1683615228000},{"_id":"themes/matery/source/medias/banner/6.jpg","hash":"c64397d94bad8cc34592ae814e8d80e2327f4197","modified":1732527605786},{"_id":"themes/matery/source/medias/banner/7.jpg","hash":"518e4a74f479c030efb5c91164fbd9566fac42f9","modified":1732527912802},{"_id":"themes/matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/css/all.min.css","hash":"0ae47fa834fb55de7b50c79021aeabecfae50c9c","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"e219af1e3bbc2219359d3d0916e263b279c4abfd","modified":1683615228000},{"_id":"themes/matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1683615228000},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","hash":"490148a22ab2b03a880495cc733ecd1840c02ed6","modified":1683615228000},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","hash":"52b4dd0ef20cff2a6b77f4164270d4d1c8d16faa","modified":1730810074851},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","hash":"8eee32acbfac59744b4053a7290f503ef623d3ab","modified":1683615228000},{"_id":"themes/matery/source/libs/valine/Valine.min.js","hash":"d081a412c63411a75a3a880ddece65335d1c3ee8","modified":1683615228000},{"_id":"themes/matery/source/libs/waline/Waline.min.js","hash":"94f70e622e2a1ab05adb205033a9ddf371c61534","modified":1683615228000},{"_id":"themes/matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1683615228000},{"_id":"themes/matery/source/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/css/all.css","hash":"8d63fa8b0f60a50b07ac0f7e751f6f5e02ecdc44","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"fa5745d421c0fc90928626be98e9f8cf7580b327","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"1979128e8ba1517d85f5e4ee505abf486c51557c","modified":1683615228000},{"_id":"themes/matery/source/js/crypto-js.js","hash":"ddacd177f23f65ff97b93b0417048f51928ee17e","modified":1683615228000},{"_id":"themes/matery/source/libs/valine/av-min.js","hash":"db56ef6acb789da00d39bd6b97c1b09c2d429195","modified":1683615228000},{"_id":"themes/matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1683615228000},{"_id":"themes/matery/source/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"e3339400ef6214cfa077d003daed2bfa659e2956","modified":1683615228000},{"_id":"themes/matery/source/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1683615228000},{"_id":"themes/matery/source/libs/prism/prism.min.js","hash":"6fc9b7be93e51b4017a61483c13187af0149f194","modified":1683615228000},{"_id":"themes/matery/source/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1683615228000},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1683615228000},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1683615228000},{"_id":"themes/matery/source/libs/mermaid/mermaid.min.js","hash":"6bee48c26c32b90f50519f125890fcbb04779da6","modified":1683615228000},{"_id":"themes/matery/source/libs/mermaid/mermaid.js","hash":"a7933bef8aba190825ba7716497209187ac1de5d","modified":1683615228000},{"_id":"themes/matery/source/medias/logo.png","hash":"f3d0e7e1ccaff37594ccf5655704404f1a40d597","modified":1730436884848},{"_id":"themes/matery/source/medias/avatar.jpg","hash":"c0a757dbc8cc1382f8cc04ccc47d61b7e3a8f2e9","modified":1730437080126}],"Category":[{"name":"工作记录","_id":"cm46orms800040cnn4i1pb0ax"},{"name":"组件封装","_id":"cm46ormsz000q0cnn7ad61yvt"}],"Data":[{"_id":"friends","data":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"},{"avatar":"https://www.lixl.cn/medias/avatar.jpg","name":"悟尘记","introduction":"人生就是一场修行，上善若水，厚德载物。","url":"https://www.lixl.cn/","title":"前去参观"},{"avatar":"https://wiki.hyperledger.org/download/attachments/2392069/fabric?version=1&modificationDate=1540928132000&api=v2","name":"Fabric","introduction":"A Blockchain Platform for the Enterprise","url":"https://hyperledger-fabric.readthedocs.io/en/master/","title":"前去学习"},{"avatar":"https://www.bootcdn.cn/assets/img/maoyun.svg","name":"BootCDN","introduction":"稳定、快速、免费的前端开源项目 CDN 加速服务。","url":"https://www.bootcdn.cn/","title":"前去加速"}]}],"Page":[{"title":"contact","date":"2018-09-30T09:25:30.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2018-09-30 17:25:30\ntype: \"contact\"\nlayout: \"contact\"\n---","updated":"2022-10-08T13:05:41.558Z","path":"contact/index.html","comments":1,"_id":"cm46ormrx00000cnnezww52s7","content":"","excerpt":"","more":""},{"title":"about","date":"2018-09-30T09:25:30.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-09-30 17:25:30\ntype: \"about\"\nlayout: \"about\"\n---","updated":"2022-10-08T13:05:18.888Z","path":"about/index.html","comments":1,"_id":"cm46orms500020cnn3sx38ug8","content":"","excerpt":"","more":""},{"title":"friends","date":"2018-12-12T13:25:30.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2018-12-12 21:25:30\ntype: \"friends\"\nlayout: \"friends\"\n---","updated":"2022-10-08T13:06:09.419Z","path":"friends/index.html","comments":1,"_id":"cm46ormsa00060cnnb0xp0ycq","content":"","excerpt":"","more":""},{"title":"分类（开发中）","date":"2018-09-30T09:25:30.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类（开发中）\ndate: 2018-09-30 17:25:30\ntype: \"categories\"\nlayout: \"categories\"\n---","updated":"2022-10-08T13:04:03.368Z","path":"categories/index.html","comments":1,"_id":"cm46ormsb00080cnn5dricw7h","content":"","excerpt":"","more":""},{"title":"标签页（开发中）","date":"2018-09-30T10:23:38.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签页（开发中）\ndate: 2018-09-30 18:23:38\ntype: \"tags\"\nlayout: \"tags\"\n---","updated":"2022-10-08T13:04:45.334Z","path":"tags/index.html","comments":1,"_id":"cm46ormsc00090cnn115p7qih","content":"","excerpt":"","more":""}],"Post":[{"title":"二、pdf.js的使用","date":"2024-10-01T02:26:54.000Z","author":"吴俊杰","top":false,"keywords":["pdf.js"],"summary":"刚入职还是个小白，要做个需求，在线预览pdf，组内的小伙伴推荐了这个第三方库，然后就去看了一下，发现好用又简单......","_content":"\n# 一、PDF.js的使用\n\n## 1、简单介绍\n<p>&emsp;&emsp;最近做了个事，工作中遇到一个需求，就是要在线显示pdf，那咋办，我这垃圾小白也没做过。于是乎问了老大，老大说用pdf.js。然后乎我就去看了一下，发现好用又简单。既然这么实用那就给记下来吧！！！！！</p>\n\n## 2、使用PDF.js\n\n### 2.1、下载pdf.js\n<p>&emsp;&emsp;首先啊，我们不需要额外下载插件，而是直接去官网，下载pdf.js的文件。下面附上下载链接</p>\n\n[pdf.js官网](http://mozilla.github.io/pdf.js)\n\n![](/images/pdfjs.jpg)\n\n### 2.2、在项目中添加pdf.js\n\n<p>&emsp;&emsp;下载后的文件结构是这样的，三个子文件，build、web、license。这个license是可以直接删除的，没啥用。</p>\n\n![](/images/jiegou.png)\n\n<p>&emsp;&emsp;那么我们呢直接把整个文件夹放进我们项目中的public文件夹下面就好啦！这样就可以用啦</p>\n\n![](/images/mulu.jpg)\n\n### 2.3、在项目中使用pdf.js\n\n<p>&emsp;&emsp;那么怎么使用呢？首先啊，我们还是得用到upload组件，因为我们要上传pdf文件给后台，upload组件在音频那块已经说过了，这里简单说一下吧。。。那个那个回调函数就不写了啊，大家可以去看audio音频的那个文章，也是这个系列的。那么我们上传过pdf之后啊，后台会返回这个文件的标识：xxxxxxxxx.pdf</p>\n\n<p>&emsp;&emsp;有了这个标识后我们应该怎么办呢，当然是调用接口啦，比如说这个接口叫：getPdfData,假装引用一下。接口是后端写的，我们以上传返回后的文件标识为参数调用改接口，然后接口会返回一个地址，这就是文件的地址了。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <Upload ref=\"uploadStandardWord\" style=\"display:inline-block\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"exceededSizeFun\" :on-format-error=\"formatError\" :on-success=\"(response)=>handleSuccess(response)\" :on-error=\"handleError\">\n    </Upload>\n    <button @click=\"openPDF\">在新窗口打开pdf</button>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\nimport { getPdfData } from '@/assets/js/utils';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  uploadObj: {\n    action: string;\n    accept: string;\n    maxSize: number;\n    format: Array<string>;\n    data: any;\n  } = {\n      action: '/graphApi/api/v1/common/source/file/upload',\n      accept: '.pdf',\n      format: ['pdf'],\n      maxSize: 1024 * 1024, //1个G\n      data: {}\n    }\n\n  public async openPDF() {\n    //params是接口参数，问后端\n    const res = awiat getPdfData(params);\n    if(res) {\n      //window.open就是在新窗口打开网页，然后引用pdf.js的文件，并且把地址传进去就好了，是不是很简单\n      window.open(`/pdf/web/viewer.html?file=${encodeURIComponent(res.pdfUrl)}`);\n    }\n  }\n}\n<script>\n```","source":"_posts/工作记录/工作记录-2：pdf.js的使用.md","raw":"---\ntitle: 二、pdf.js的使用\ndate: 2024-10-01 10:26:54\nauthor: 吴俊杰\ntop: false\nkeywords:\n  - pdf.js\nsummary: 刚入职还是个小白，要做个需求，在线预览pdf，组内的小伙伴推荐了这个第三方库，然后就去看了一下，发现好用又简单......\ncategories: \n  - 工作记录\ntags:\n  - 第三方库\n  - pdf.js\n---\n\n# 一、PDF.js的使用\n\n## 1、简单介绍\n<p>&emsp;&emsp;最近做了个事，工作中遇到一个需求，就是要在线显示pdf，那咋办，我这垃圾小白也没做过。于是乎问了老大，老大说用pdf.js。然后乎我就去看了一下，发现好用又简单。既然这么实用那就给记下来吧！！！！！</p>\n\n## 2、使用PDF.js\n\n### 2.1、下载pdf.js\n<p>&emsp;&emsp;首先啊，我们不需要额外下载插件，而是直接去官网，下载pdf.js的文件。下面附上下载链接</p>\n\n[pdf.js官网](http://mozilla.github.io/pdf.js)\n\n![](/images/pdfjs.jpg)\n\n### 2.2、在项目中添加pdf.js\n\n<p>&emsp;&emsp;下载后的文件结构是这样的，三个子文件，build、web、license。这个license是可以直接删除的，没啥用。</p>\n\n![](/images/jiegou.png)\n\n<p>&emsp;&emsp;那么我们呢直接把整个文件夹放进我们项目中的public文件夹下面就好啦！这样就可以用啦</p>\n\n![](/images/mulu.jpg)\n\n### 2.3、在项目中使用pdf.js\n\n<p>&emsp;&emsp;那么怎么使用呢？首先啊，我们还是得用到upload组件，因为我们要上传pdf文件给后台，upload组件在音频那块已经说过了，这里简单说一下吧。。。那个那个回调函数就不写了啊，大家可以去看audio音频的那个文章，也是这个系列的。那么我们上传过pdf之后啊，后台会返回这个文件的标识：xxxxxxxxx.pdf</p>\n\n<p>&emsp;&emsp;有了这个标识后我们应该怎么办呢，当然是调用接口啦，比如说这个接口叫：getPdfData,假装引用一下。接口是后端写的，我们以上传返回后的文件标识为参数调用改接口，然后接口会返回一个地址，这就是文件的地址了。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <Upload ref=\"uploadStandardWord\" style=\"display:inline-block\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"exceededSizeFun\" :on-format-error=\"formatError\" :on-success=\"(response)=>handleSuccess(response)\" :on-error=\"handleError\">\n    </Upload>\n    <button @click=\"openPDF\">在新窗口打开pdf</button>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\nimport { getPdfData } from '@/assets/js/utils';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  uploadObj: {\n    action: string;\n    accept: string;\n    maxSize: number;\n    format: Array<string>;\n    data: any;\n  } = {\n      action: '/graphApi/api/v1/common/source/file/upload',\n      accept: '.pdf',\n      format: ['pdf'],\n      maxSize: 1024 * 1024, //1个G\n      data: {}\n    }\n\n  public async openPDF() {\n    //params是接口参数，问后端\n    const res = awiat getPdfData(params);\n    if(res) {\n      //window.open就是在新窗口打开网页，然后引用pdf.js的文件，并且把地址传进去就好了，是不是很简单\n      window.open(`/pdf/web/viewer.html?file=${encodeURIComponent(res.pdfUrl)}`);\n    }\n  }\n}\n<script>\n```","slug":"工作记录/工作记录-2：pdf.js的使用","published":1,"updated":"2024-12-02T07:11:30.414Z","_id":"cm46orms000010cnng4yc6vke","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"一、PDF-js的使用\"><a href=\"#一、PDF-js的使用\" class=\"headerlink\" title=\"一、PDF.js的使用\"></a>一、PDF.js的使用</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>  最近做了个事，工作中遇到一个需求，就是要在线显示pdf，那咋办，我这垃圾小白也没做过。于是乎问了老大，老大说用pdf.js。然后乎我就去看了一下，发现好用又简单。既然这么实用那就给记下来吧！！！！！</p>\n\n<h2 id=\"2、使用PDF-js\"><a href=\"#2、使用PDF-js\" class=\"headerlink\" title=\"2、使用PDF.js\"></a>2、使用PDF.js</h2><h3 id=\"2-1、下载pdf-js\"><a href=\"#2-1、下载pdf-js\" class=\"headerlink\" title=\"2.1、下载pdf.js\"></a>2.1、下载pdf.js</h3><p>  首先啊，我们不需要额外下载插件，而是直接去官网，下载pdf.js的文件。下面附上下载链接</p>\n\n<p><a href=\"http://mozilla.github.io/pdf.js\">pdf.js官网</a></p>\n<p><img src=\"/images/pdfjs.jpg\"></p>\n<h3 id=\"2-2、在项目中添加pdf-js\"><a href=\"#2-2、在项目中添加pdf-js\" class=\"headerlink\" title=\"2.2、在项目中添加pdf.js\"></a>2.2、在项目中添加pdf.js</h3><p>  下载后的文件结构是这样的，三个子文件，build、web、license。这个license是可以直接删除的，没啥用。</p>\n\n<p><img src=\"/images/jiegou.png\"></p>\n<p>  那么我们呢直接把整个文件夹放进我们项目中的public文件夹下面就好啦！这样就可以用啦</p>\n\n<p><img src=\"/images/mulu.jpg\"></p>\n<h3 id=\"2-3、在项目中使用pdf-js\"><a href=\"#2-3、在项目中使用pdf-js\" class=\"headerlink\" title=\"2.3、在项目中使用pdf.js\"></a>2.3、在项目中使用pdf.js</h3><p>  那么怎么使用呢？首先啊，我们还是得用到upload组件，因为我们要上传pdf文件给后台，upload组件在音频那块已经说过了，这里简单说一下吧。。。那个那个回调函数就不写了啊，大家可以去看audio音频的那个文章，也是这个系列的。那么我们上传过pdf之后啊，后台会返回这个文件的标识：xxxxxxxxx.pdf</p>\n\n<p>  有了这个标识后我们应该怎么办呢，当然是调用接口啦，比如说这个接口叫：getPdfData,假装引用一下。接口是后端写的，我们以上传返回后的文件标识为参数调用改接口，然后接口会返回一个地址，这就是文件的地址了。</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"uploadStandardWord\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"display:inline-block\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"exceededSizeFun\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"formatError\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=&gt;handleSuccess(response)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"openPDF\"</span><span class=\"token operator\">&gt;</span>在新窗口打开pdf<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getPdfData <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/assets/js/utils'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">uploadObj</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token string\">'/graphApi/api/v1/common/source/file/upload'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> <span class=\"token string\">'.pdf'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'pdf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//1个G</span>\n      <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">openPDF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//params是接口参数，问后端</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> awiat <span class=\"token function\">getPdfData</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">//window.open就是在新窗口打开网页，然后引用pdf.js的文件，并且把地址传进去就好了，是不是很简单</span>\n      window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/pdf/web/viewer.html?file=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>pdfUrl<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","excerpt":"","more":"<h1 id=\"一、PDF-js的使用\"><a href=\"#一、PDF-js的使用\" class=\"headerlink\" title=\"一、PDF.js的使用\"></a>一、PDF.js的使用</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;最近做了个事，工作中遇到一个需求，就是要在线显示pdf，那咋办，我这垃圾小白也没做过。于是乎问了老大，老大说用pdf.js。然后乎我就去看了一下，发现好用又简单。既然这么实用那就给记下来吧！！！！！</p>\n\n<h2 id=\"2、使用PDF-js\"><a href=\"#2、使用PDF-js\" class=\"headerlink\" title=\"2、使用PDF.js\"></a>2、使用PDF.js</h2><h3 id=\"2-1、下载pdf-js\"><a href=\"#2-1、下载pdf-js\" class=\"headerlink\" title=\"2.1、下载pdf.js\"></a>2.1、下载pdf.js</h3><p>&emsp;&emsp;首先啊，我们不需要额外下载插件，而是直接去官网，下载pdf.js的文件。下面附上下载链接</p>\n\n<p><a href=\"http://mozilla.github.io/pdf.js\">pdf.js官网</a></p>\n<p><img src=\"/images/pdfjs.jpg\"></p>\n<h3 id=\"2-2、在项目中添加pdf-js\"><a href=\"#2-2、在项目中添加pdf-js\" class=\"headerlink\" title=\"2.2、在项目中添加pdf.js\"></a>2.2、在项目中添加pdf.js</h3><p>&emsp;&emsp;下载后的文件结构是这样的，三个子文件，build、web、license。这个license是可以直接删除的，没啥用。</p>\n\n<p><img src=\"/images/jiegou.png\"></p>\n<p>&emsp;&emsp;那么我们呢直接把整个文件夹放进我们项目中的public文件夹下面就好啦！这样就可以用啦</p>\n\n<p><img src=\"/images/mulu.jpg\"></p>\n<h3 id=\"2-3、在项目中使用pdf-js\"><a href=\"#2-3、在项目中使用pdf-js\" class=\"headerlink\" title=\"2.3、在项目中使用pdf.js\"></a>2.3、在项目中使用pdf.js</h3><p>&emsp;&emsp;那么怎么使用呢？首先啊，我们还是得用到upload组件，因为我们要上传pdf文件给后台，upload组件在音频那块已经说过了，这里简单说一下吧。。。那个那个回调函数就不写了啊，大家可以去看audio音频的那个文章，也是这个系列的。那么我们上传过pdf之后啊，后台会返回这个文件的标识：xxxxxxxxx.pdf</p>\n\n<p>&emsp;&emsp;有了这个标识后我们应该怎么办呢，当然是调用接口啦，比如说这个接口叫：getPdfData,假装引用一下。接口是后端写的，我们以上传返回后的文件标识为参数调用改接口，然后接口会返回一个地址，这就是文件的地址了。</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"uploadStandardWord\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"display:inline-block\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"exceededSizeFun\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"formatError\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"openPDF\"</span><span class=\"token operator\">></span>在新窗口打开pdf<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getPdfData <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/assets/js/utils'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">uploadObj</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token string\">'/graphApi/api/v1/common/source/file/upload'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> <span class=\"token string\">'.pdf'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'pdf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//1个G</span>\n      <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">openPDF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//params是接口参数，问后端</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> awiat <span class=\"token function\">getPdfData</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//window.open就是在新窗口打开网页，然后引用pdf.js的文件，并且把地址传进去就好了，是不是很简单</span>\n      window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/pdf/web/viewer.html?file=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>pdfUrl<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"一、资源制作性能优化","date":"2024-10-01T01:25:23.000Z","author":"吴俊杰","top":true,"keywords":["性能优化","打包优化"],"summary":"资源制作流程卡顿，竟然连文本输入都卡，出手解决它，利用谷歌开发者工具的performance选项卡和summary选项卡排查问题......","_content":"\n# 1、性能优化\n### 1.1、富文本框的事件监听问题\n&emsp;&emsp;滚动页面时，:smile:发现页面卡顿，通过浏览器开发者工具的performance分析，发现鼠标在页面滑动的时候在不断的执行一个方法，找到对应的代码位置后发现这里写了一个mousemove。这种事件的触发频率非常之高，会导致使用不流畅，卡帧的现象。\n\n解决办法：\n+ 防抖节流，可以设置500ms执行一次\n+ 使用webAPI，IntersectionObserverAPI，元素与视口交叉执行\n+ 直接将mousemove替换成mouseenter，鼠标进入时触发\n\n```javascript\n<template>\n  <div  @mousemove.stop=\"changeToEdit\">\n    //....\n  </div>\n</template>\n\npublic changeToEdit (e) {\n  if (!this.isEdit) {\n    this.isEdit = true;\n    this.setAudio();\n    if (this.type === 'richText') {\n      this.$nextTick(() => {\n        this.createEditorFun();\n      });\n    } else if (this.type === 'textarea' || this.type === 'text') {\n      this.$nextTick(() => {\n        this.createTextareaEditorFun();\n      });\n    }\n  }\n}\n```\n\n\n\n### 1.2、js执行时间过长导致的页面书写卡顿问题（已完成）\n![](/images/tbkwPage.png)\n\n&emsp;&emsp;我们在使用的时候有着很明显的卡顿和卡帧问题，通过浏览器开发者工具的performance分析，发现我们在输入内容时在不断的执行一个函数watchMenuInfo，并且这个js函数执行周期比较长，那么一定是会影响页面渲染的。定位到代码位置分析，代码的逻辑是我们右边展示的数据都是存在左边侧边栏的，当我们输入内容或者做其他事情的时候，需要同步更新侧边栏。\n\n如下截取的一部分代码\n\n```javascript\n  @Watch('menuInfo', {\n    deep: true,\n    immediate: true\n  })\n  public watchMenuInfo (newValue, oldValue) {\n    this.menuList = deepClone(newValue);\n    this.total = this.menuList.length;\n  }\n\n  @Watch('menuList', {\n    deep: true,\n    immediate: true\n  })\n  public menuListChane (newValue, oldValue) {\n    if (JSON.stringify(newValue) === JSON.stringify(oldValue)) return\n    this.showList = this.setCurrentShowList()\n  }\n```\n\n代码中存在的两个问题\n\n+ 不必要的监听：vue组件之间传值，对与引用类型的数据是双向的，我们在更改右侧内容的时候侧边的数据是直接同步的，不需要做额外的监听操作。\n+ 大数据的深拷贝：侧边栏的数据一般是很大的，大体积的数据做深拷贝是很耗时的，这里实际上是不需要做深拷贝的，直接用即可\n\n解决以上两个问题，性能会有很大提升。\n\n但是以前这样的写法可能是出于一些其它考虑，所以在做更改的时候，需要小心谨慎，避免引出其它问题。\n\n### 1.3、完成后的效果对比\n**优化前后的对比**\n\n**图表：**\n\n![优化前](https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090778820-8218125c-701a-482c-ab45-c684c78f961a.png)\n\n优化前：由图可以看出，当素材数量在5以下时，看不出明显的时间变化，此时平台性能基本稳定。但是随着素材数量的增加，耗时情况越严重，平台的素材上限是15，此时首次进入到渲染完成需要接近20秒。\n\n![优化后](https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090552375-7178f62f-958d-4306-824f-f894fa256e78.png)\n\n优化后：由图可以看出，随着素材数量的增加，时间上的损耗无明显变化，平台性能基本稳定，始终维持在5秒左右，无论是首次进入的渲染还是切换素材以及输入内容，都比较平稳流畅。\n\n![前后对比](https://cdn.nlark.com/yuque/0/2024/png/35329855/1730091311242-51d3b08c-5fcd-4841-8caa-55343379b8ef.png)\n\n优化前后对比：由上图可以看出，随着素材数量的增加，优化效果会显著提升。当数量控制在5以下时，效果整体差别不大，但是数量为10、15的时候，优化前会变得异常卡顿，严重影响制作流程。优化后会有一个明显的性能提升的效果。\n\n**优化前（gif见附件）：**\n\n![](https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084678840-31894cd3-2ff9-4ce3-a421-ddff20e1d9f8.gif)\n\n**优化后（gif见附件）：**\n\n![](https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084697597-d049e30e-e02b-41fa-9c96-288c3ccb5e21.gif)\n\n### 1.4、同步课文设计存在的缺陷（未开始）\n+ 请求当前页的所有课文\n\n```javascript\n  public async getResouceQuestionList (reset = false) {\n    const postData = {...}\n    const res = await getWordList(postData);\n    if (res) {\n      this.getBatchStInfo(list, 'mounted');\n    }\n  }\n\n\n```\n\n+ 便利请求过来的数据，按顺序执行编译过程getBatchStInfo -->getTemplateData-->parseContent，说白了就是准备好所有的右侧需要展示的数据，这一步是一个极其耗时的过程，有着很长的数据处理流程，带来的体验就是首次进入课文包，首次加载很慢，同时涉及到请求侧边栏数据的操作都会耗时卡顿，比如切换页码，批量标签，批量标注后返回的主页面都会卡顿。\n\n\n\n解决办法：不需要一次性处理侧边栏所有的数据，而是只处理第一条数据，后续切换素材的时候切换的哪个素材就做哪个素材的数据处理，可以大大优化卡顿问题。\n\n```javascript\n  public getBatchStInfo (data, type?, reset?) {\n    data.forEach((item, index) => {\n      if (template) {\n        getTemplateData(template, this.$route.query.identifier as string, (returnObj) => {\n          this.setTempObj(tempObj, !reset ? length + index : index, type);\n        })\n      }\n    })\n  }\n\n\n  public setTempObj (newVlaue: any, index?, type?) {\n    const parseTempObj = parseContent(newVlaue, newVlaue.isMultPaper);\n  }\n\n```\n\n### 1.5、依赖分析（未开始）\nnpm包：depCheck\n\ndepcheck 是一款用于检测项目中未使用依赖项的工具，特别适用于前端和Node.js项目。它的主要目的是帮助开发者识别并移除那些在项目中未被实际引用的依赖，从而优化项目结构，减少不必要的依赖，提高项目的运行效率和安全性。\n\n```javascript\nnpm install -g depcheck\n// 根目录\ndepcheck\n```\n\n执行后，depcheck会输出三个主要部分的结果：\n\n未使用的依赖：列出项目中未使用的依赖项。\n\n缺失的依赖：列出项目中实际使用但未在`package.json`中声明的依赖项。\n\n无用的文件：列出项目中未使用的文件。\n\n![](https://cdn.nlark.com/yuque/0/2024/png/35329855/1728961532523-b1d9c875-b2c8-4105-96f6-a04e70b75a97.png)\n\n这个不可以完全相信，但是可以作为分析依赖的依据，基本可以排查荣誉的依赖，这些依赖的存在占用体积，去除这些无用的包，或者利用率比较小的包可以加快打包速度，减小打包体积，以获得更好的体验。\n\n### 1.6、打包优化（未开始）\n插件：webpack-bundle-analyzer\n\nwebpack-bundle-analyzer 是一个用于分析和可视化Webpack打包结果的工具。它能够生成一个交互式的可缩放树状图，展示每个模块在打包文件中的大小，帮助开发者识别和优化不必要的依赖和代码，从而减小最终打包文件的体积。\n\n```javascript\nnpm install --save-dev webpack-bundle-analyzer\n\nconst BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\n\nconfig.plugins = [\n  new BundleAnalyzerPlugin()\n]\n```\n\n资源平台项目打包后的视图如下\n\n![](https://cdn.nlark.com/yuque/0/2024/png/35329855/1728972087296-19131b20-4999-424d-9509-651434ec8909.png)\n\n从这里可以看出平台的打包分的还是比较细致的，而且第三方库和业务代码是分开的，这样的好处就是第三方代码可以完全利用http缓存，不需要多次请求资源，只需要请求变更后的业务代码即可。\n\n在第三方模块里发现了很多可以改进的地方，比如第三方库中的monaco-editor占用了很大的体积，我们查看后发现这个包并没有被使用，这个是可以删除的，此外向jquery这种落后的第三方完全可以删掉，不再使用。除此之外像其它第三方库比如e-charts，element-ui可以用按需导入，减小体积。\n\n在业务模块里，发现很多没有用上的大体积的文件，比如stJson.ts引入了根本用不上。这张是完全可以删除的，以此类推可以排查出很多大体积打包文件，提升构建速度和用户体验。\n\n\n\n\n\n\n\n\n","source":"_posts/工作记录/工作记录-1：资源制作性能优化方案.md","raw":"---\ntitle: 一、资源制作性能优化\ndate: 2024-10-01 09:25:23\nauthor: 吴俊杰\ntop: true\nkeywords:\n  - 性能优化\n  - 打包优化\nsummary: 资源制作流程卡顿，竟然连文本输入都卡，出手解决它，利用谷歌开发者工具的performance选项卡和summary选项卡排查问题......\ncategories: \n  - 工作记录\ntags:\n  - 性能优化\n  - chrome\n  - devtool\n---\n\n# 1、性能优化\n### 1.1、富文本框的事件监听问题\n&emsp;&emsp;滚动页面时，:smile:发现页面卡顿，通过浏览器开发者工具的performance分析，发现鼠标在页面滑动的时候在不断的执行一个方法，找到对应的代码位置后发现这里写了一个mousemove。这种事件的触发频率非常之高，会导致使用不流畅，卡帧的现象。\n\n解决办法：\n+ 防抖节流，可以设置500ms执行一次\n+ 使用webAPI，IntersectionObserverAPI，元素与视口交叉执行\n+ 直接将mousemove替换成mouseenter，鼠标进入时触发\n\n```javascript\n<template>\n  <div  @mousemove.stop=\"changeToEdit\">\n    //....\n  </div>\n</template>\n\npublic changeToEdit (e) {\n  if (!this.isEdit) {\n    this.isEdit = true;\n    this.setAudio();\n    if (this.type === 'richText') {\n      this.$nextTick(() => {\n        this.createEditorFun();\n      });\n    } else if (this.type === 'textarea' || this.type === 'text') {\n      this.$nextTick(() => {\n        this.createTextareaEditorFun();\n      });\n    }\n  }\n}\n```\n\n\n\n### 1.2、js执行时间过长导致的页面书写卡顿问题（已完成）\n![](/images/tbkwPage.png)\n\n&emsp;&emsp;我们在使用的时候有着很明显的卡顿和卡帧问题，通过浏览器开发者工具的performance分析，发现我们在输入内容时在不断的执行一个函数watchMenuInfo，并且这个js函数执行周期比较长，那么一定是会影响页面渲染的。定位到代码位置分析，代码的逻辑是我们右边展示的数据都是存在左边侧边栏的，当我们输入内容或者做其他事情的时候，需要同步更新侧边栏。\n\n如下截取的一部分代码\n\n```javascript\n  @Watch('menuInfo', {\n    deep: true,\n    immediate: true\n  })\n  public watchMenuInfo (newValue, oldValue) {\n    this.menuList = deepClone(newValue);\n    this.total = this.menuList.length;\n  }\n\n  @Watch('menuList', {\n    deep: true,\n    immediate: true\n  })\n  public menuListChane (newValue, oldValue) {\n    if (JSON.stringify(newValue) === JSON.stringify(oldValue)) return\n    this.showList = this.setCurrentShowList()\n  }\n```\n\n代码中存在的两个问题\n\n+ 不必要的监听：vue组件之间传值，对与引用类型的数据是双向的，我们在更改右侧内容的时候侧边的数据是直接同步的，不需要做额外的监听操作。\n+ 大数据的深拷贝：侧边栏的数据一般是很大的，大体积的数据做深拷贝是很耗时的，这里实际上是不需要做深拷贝的，直接用即可\n\n解决以上两个问题，性能会有很大提升。\n\n但是以前这样的写法可能是出于一些其它考虑，所以在做更改的时候，需要小心谨慎，避免引出其它问题。\n\n### 1.3、完成后的效果对比\n**优化前后的对比**\n\n**图表：**\n\n![优化前](https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090778820-8218125c-701a-482c-ab45-c684c78f961a.png)\n\n优化前：由图可以看出，当素材数量在5以下时，看不出明显的时间变化，此时平台性能基本稳定。但是随着素材数量的增加，耗时情况越严重，平台的素材上限是15，此时首次进入到渲染完成需要接近20秒。\n\n![优化后](https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090552375-7178f62f-958d-4306-824f-f894fa256e78.png)\n\n优化后：由图可以看出，随着素材数量的增加，时间上的损耗无明显变化，平台性能基本稳定，始终维持在5秒左右，无论是首次进入的渲染还是切换素材以及输入内容，都比较平稳流畅。\n\n![前后对比](https://cdn.nlark.com/yuque/0/2024/png/35329855/1730091311242-51d3b08c-5fcd-4841-8caa-55343379b8ef.png)\n\n优化前后对比：由上图可以看出，随着素材数量的增加，优化效果会显著提升。当数量控制在5以下时，效果整体差别不大，但是数量为10、15的时候，优化前会变得异常卡顿，严重影响制作流程。优化后会有一个明显的性能提升的效果。\n\n**优化前（gif见附件）：**\n\n![](https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084678840-31894cd3-2ff9-4ce3-a421-ddff20e1d9f8.gif)\n\n**优化后（gif见附件）：**\n\n![](https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084697597-d049e30e-e02b-41fa-9c96-288c3ccb5e21.gif)\n\n### 1.4、同步课文设计存在的缺陷（未开始）\n+ 请求当前页的所有课文\n\n```javascript\n  public async getResouceQuestionList (reset = false) {\n    const postData = {...}\n    const res = await getWordList(postData);\n    if (res) {\n      this.getBatchStInfo(list, 'mounted');\n    }\n  }\n\n\n```\n\n+ 便利请求过来的数据，按顺序执行编译过程getBatchStInfo -->getTemplateData-->parseContent，说白了就是准备好所有的右侧需要展示的数据，这一步是一个极其耗时的过程，有着很长的数据处理流程，带来的体验就是首次进入课文包，首次加载很慢，同时涉及到请求侧边栏数据的操作都会耗时卡顿，比如切换页码，批量标签，批量标注后返回的主页面都会卡顿。\n\n\n\n解决办法：不需要一次性处理侧边栏所有的数据，而是只处理第一条数据，后续切换素材的时候切换的哪个素材就做哪个素材的数据处理，可以大大优化卡顿问题。\n\n```javascript\n  public getBatchStInfo (data, type?, reset?) {\n    data.forEach((item, index) => {\n      if (template) {\n        getTemplateData(template, this.$route.query.identifier as string, (returnObj) => {\n          this.setTempObj(tempObj, !reset ? length + index : index, type);\n        })\n      }\n    })\n  }\n\n\n  public setTempObj (newVlaue: any, index?, type?) {\n    const parseTempObj = parseContent(newVlaue, newVlaue.isMultPaper);\n  }\n\n```\n\n### 1.5、依赖分析（未开始）\nnpm包：depCheck\n\ndepcheck 是一款用于检测项目中未使用依赖项的工具，特别适用于前端和Node.js项目。它的主要目的是帮助开发者识别并移除那些在项目中未被实际引用的依赖，从而优化项目结构，减少不必要的依赖，提高项目的运行效率和安全性。\n\n```javascript\nnpm install -g depcheck\n// 根目录\ndepcheck\n```\n\n执行后，depcheck会输出三个主要部分的结果：\n\n未使用的依赖：列出项目中未使用的依赖项。\n\n缺失的依赖：列出项目中实际使用但未在`package.json`中声明的依赖项。\n\n无用的文件：列出项目中未使用的文件。\n\n![](https://cdn.nlark.com/yuque/0/2024/png/35329855/1728961532523-b1d9c875-b2c8-4105-96f6-a04e70b75a97.png)\n\n这个不可以完全相信，但是可以作为分析依赖的依据，基本可以排查荣誉的依赖，这些依赖的存在占用体积，去除这些无用的包，或者利用率比较小的包可以加快打包速度，减小打包体积，以获得更好的体验。\n\n### 1.6、打包优化（未开始）\n插件：webpack-bundle-analyzer\n\nwebpack-bundle-analyzer 是一个用于分析和可视化Webpack打包结果的工具。它能够生成一个交互式的可缩放树状图，展示每个模块在打包文件中的大小，帮助开发者识别和优化不必要的依赖和代码，从而减小最终打包文件的体积。\n\n```javascript\nnpm install --save-dev webpack-bundle-analyzer\n\nconst BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\n\nconfig.plugins = [\n  new BundleAnalyzerPlugin()\n]\n```\n\n资源平台项目打包后的视图如下\n\n![](https://cdn.nlark.com/yuque/0/2024/png/35329855/1728972087296-19131b20-4999-424d-9509-651434ec8909.png)\n\n从这里可以看出平台的打包分的还是比较细致的，而且第三方库和业务代码是分开的，这样的好处就是第三方代码可以完全利用http缓存，不需要多次请求资源，只需要请求变更后的业务代码即可。\n\n在第三方模块里发现了很多可以改进的地方，比如第三方库中的monaco-editor占用了很大的体积，我们查看后发现这个包并没有被使用，这个是可以删除的，此外向jquery这种落后的第三方完全可以删掉，不再使用。除此之外像其它第三方库比如e-charts，element-ui可以用按需导入，减小体积。\n\n在业务模块里，发现很多没有用上的大体积的文件，比如stJson.ts引入了根本用不上。这张是完全可以删除的，以此类推可以排查出很多大体积打包文件，提升构建速度和用户体验。\n\n\n\n\n\n\n\n\n","slug":"工作记录/工作记录-1：资源制作性能优化方案","published":1,"updated":"2024-12-02T07:07:36.383Z","_id":"cm46orms500030cnn3dv02ddo","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"1、性能优化\"><a href=\"#1、性能优化\" class=\"headerlink\" title=\"1、性能优化\"></a>1、性能优化</h1><h3 id=\"1-1、富文本框的事件监听问题\"><a href=\"#1-1、富文本框的事件监听问题\" class=\"headerlink\" title=\"1.1、富文本框的事件监听问题\"></a>1.1、富文本框的事件监听问题</h3><p>  滚动页面时，<span class=\"github-emoji\"><span>😄</span><img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8\" aria-hidden=\"true\" onerror=\"this.parent.classList.add('github-emoji-fallback')\"></span>发现页面卡顿，通过浏览器开发者工具的performance分析，发现鼠标在页面滑动的时候在不断的执行一个方法，找到对应的代码位置后发现这里写了一个mousemove。这种事件的触发频率非常之高，会导致使用不流畅，卡帧的现象。</p>\n<p>解决办法：</p>\n<ul>\n<li>防抖节流，可以设置500ms执行一次</li>\n<li>使用webAPI，IntersectionObserverAPI，元素与视口交叉执行</li>\n<li>直接将mousemove替换成mouseenter，鼠标进入时触发</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div  @mousemove<span class=\"token punctuation\">.</span>stop<span class=\"token operator\">=</span><span class=\"token string\">\"changeToEdit\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token comment\">//....</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token function\">changeToEdit</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isEdit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isEdit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAudio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'richText'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createEditorFun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'textarea'</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTextareaEditorFun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"1-2、js执行时间过长导致的页面书写卡顿问题（已完成）\"><a href=\"#1-2、js执行时间过长导致的页面书写卡顿问题（已完成）\" class=\"headerlink\" title=\"1.2、js执行时间过长导致的页面书写卡顿问题（已完成）\"></a>1.2、js执行时间过长导致的页面书写卡顿问题（已完成）</h3><p><img src=\"/images/tbkwPage.png\"></p>\n<p>  我们在使用的时候有着很明显的卡顿和卡帧问题，通过浏览器开发者工具的performance分析，发现我们在输入内容时在不断的执行一个函数watchMenuInfo，并且这个js函数执行周期比较长，那么一定是会影响页面渲染的。定位到代码位置分析，代码的逻辑是我们右边展示的数据都是存在左边侧边栏的，当我们输入内容或者做其他事情的时候，需要同步更新侧边栏。</p>\n<p>如下截取的一部分代码</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">@<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menuInfo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token function\">watchMenuInfo</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span> oldValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>menuList <span class=\"token operator\">=</span> <span class=\"token function\">deepClone</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>total <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>menuList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menuList'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token function\">menuListChane</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span> oldValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>oldValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>showList <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCurrentShowList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>代码中存在的两个问题</p>\n<ul>\n<li>不必要的监听：vue组件之间传值，对与引用类型的数据是双向的，我们在更改右侧内容的时候侧边的数据是直接同步的，不需要做额外的监听操作。</li>\n<li>大数据的深拷贝：侧边栏的数据一般是很大的，大体积的数据做深拷贝是很耗时的，这里实际上是不需要做深拷贝的，直接用即可</li>\n</ul>\n<p>解决以上两个问题，性能会有很大提升。</p>\n<p>但是以前这样的写法可能是出于一些其它考虑，所以在做更改的时候，需要小心谨慎，避免引出其它问题。</p>\n<h3 id=\"1-3、完成后的效果对比\"><a href=\"#1-3、完成后的效果对比\" class=\"headerlink\" title=\"1.3、完成后的效果对比\"></a>1.3、完成后的效果对比</h3><p><strong>优化前后的对比</strong></p>\n<p><strong>图表：</strong></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090778820-8218125c-701a-482c-ab45-c684c78f961a.png\" alt=\"优化前\"></p>\n<p>优化前：由图可以看出，当素材数量在5以下时，看不出明显的时间变化，此时平台性能基本稳定。但是随着素材数量的增加，耗时情况越严重，平台的素材上限是15，此时首次进入到渲染完成需要接近20秒。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090552375-7178f62f-958d-4306-824f-f894fa256e78.png\" alt=\"优化后\"></p>\n<p>优化后：由图可以看出，随着素材数量的增加，时间上的损耗无明显变化，平台性能基本稳定，始终维持在5秒左右，无论是首次进入的渲染还是切换素材以及输入内容，都比较平稳流畅。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1730091311242-51d3b08c-5fcd-4841-8caa-55343379b8ef.png\" alt=\"前后对比\"></p>\n<p>优化前后对比：由上图可以看出，随着素材数量的增加，优化效果会显著提升。当数量控制在5以下时，效果整体差别不大，但是数量为10、15的时候，优化前会变得异常卡顿，严重影响制作流程。优化后会有一个明显的性能提升的效果。</p>\n<p><strong>优化前（gif见附件）：</strong></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084678840-31894cd3-2ff9-4ce3-a421-ddff20e1d9f8.gif\"></p>\n<p><strong>优化后（gif见附件）：</strong></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084697597-d049e30e-e02b-41fa-9c96-288c3ccb5e21.gif\"></p>\n<h3 id=\"1-4、同步课文设计存在的缺陷（未开始）\"><a href=\"#1-4、同步课文设计存在的缺陷（未开始）\" class=\"headerlink\" title=\"1.4、同步课文设计存在的缺陷（未开始）\"></a>1.4、同步课文设计存在的缺陷（未开始）</h3><ul>\n<li>请求当前页的所有课文</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">getResouceQuestionList</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">reset <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> postData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getWordList</span><span class=\"token punctuation\">(</span>postData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBatchStInfo</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> <span class=\"token string\">'mounted'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>便利请求过来的数据，按顺序执行编译过程getBatchStInfo –&gt;getTemplateData–&gt;parseContent，说白了就是准备好所有的右侧需要展示的数据，这一步是一个极其耗时的过程，有着很长的数据处理流程，带来的体验就是首次进入课文包，首次加载很慢，同时涉及到请求侧边栏数据的操作都会耗时卡顿，比如切换页码，批量标签，批量标注后返回的主页面都会卡顿。</li>\n</ul>\n<p>解决办法：不需要一次性处理侧边栏所有的数据，而是只处理第一条数据，后续切换素材的时候切换的哪个素材就做哪个素材的数据处理，可以大大优化卡顿问题。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">public</span> <span class=\"token function\">getBatchStInfo</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span> type<span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> reset<span class=\"token operator\">?</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  data<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">getTemplateData</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>identifier <span class=\"token keyword\">as</span> string<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">returnObj</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setTempObj</span><span class=\"token punctuation\">(</span>tempObj<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span>reset <span class=\"token operator\">?</span> length <span class=\"token operator\">+</span> index <span class=\"token operator\">:</span> index<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token function\">setTempObj</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">newVlaue</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> index<span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">?</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> parseTempObj <span class=\"token operator\">=</span> <span class=\"token function\">parseContent</span><span class=\"token punctuation\">(</span>newVlaue<span class=\"token punctuation\">,</span> newVlaue<span class=\"token punctuation\">.</span>isMultPaper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-5、依赖分析（未开始）\"><a href=\"#1-5、依赖分析（未开始）\" class=\"headerlink\" title=\"1.5、依赖分析（未开始）\"></a>1.5、依赖分析（未开始）</h3><p>npm包：depCheck</p>\n<p>depcheck 是一款用于检测项目中未使用依赖项的工具，特别适用于前端和Node.js项目。它的主要目的是帮助开发者识别并移除那些在项目中未被实际引用的依赖，从而优化项目结构，减少不必要的依赖，提高项目的运行效率和安全性。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install <span class=\"token operator\">-</span>g depcheck\n<span class=\"token comment\">// 根目录</span>\ndepcheck<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>执行后，depcheck会输出三个主要部分的结果：</p>\n<p>未使用的依赖：列出项目中未使用的依赖项。</p>\n<p>缺失的依赖：列出项目中实际使用但未在<code>package.json</code>中声明的依赖项。</p>\n<p>无用的文件：列出项目中未使用的文件。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1728961532523-b1d9c875-b2c8-4105-96f6-a04e70b75a97.png\"></p>\n<p>这个不可以完全相信，但是可以作为分析依赖的依据，基本可以排查荣誉的依赖，这些依赖的存在占用体积，去除这些无用的包，或者利用率比较小的包可以加快打包速度，减小打包体积，以获得更好的体验。</p>\n<h3 id=\"1-6、打包优化（未开始）\"><a href=\"#1-6、打包优化（未开始）\" class=\"headerlink\" title=\"1.6、打包优化（未开始）\"></a>1.6、打包优化（未开始）</h3><p>插件：webpack-bundle-analyzer</p>\n<p>webpack-bundle-analyzer 是一个用于分析和可视化Webpack打包结果的工具。它能够生成一个交互式的可缩放树状图，展示每个模块在打包文件中的大小，帮助开发者识别和优化不必要的依赖和代码，从而减小最终打包文件的体积。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev webpack<span class=\"token operator\">-</span>bundle<span class=\"token operator\">-</span>analyzer\n\n<span class=\"token keyword\">const</span> BundleAnalyzerPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack-bundle-analyzer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>BundleAnalyzerPlugin<span class=\"token punctuation\">;</span>\n\nconfig<span class=\"token punctuation\">.</span>plugins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">BundleAnalyzerPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>资源平台项目打包后的视图如下</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1728972087296-19131b20-4999-424d-9509-651434ec8909.png\"></p>\n<p>从这里可以看出平台的打包分的还是比较细致的，而且第三方库和业务代码是分开的，这样的好处就是第三方代码可以完全利用http缓存，不需要多次请求资源，只需要请求变更后的业务代码即可。</p>\n<p>在第三方模块里发现了很多可以改进的地方，比如第三方库中的monaco-editor占用了很大的体积，我们查看后发现这个包并没有被使用，这个是可以删除的，此外向jquery这种落后的第三方完全可以删掉，不再使用。除此之外像其它第三方库比如e-charts，element-ui可以用按需导入，减小体积。</p>\n<p>在业务模块里，发现很多没有用上的大体积的文件，比如stJson.ts引入了根本用不上。这张是完全可以删除的，以此类推可以排查出很多大体积打包文件，提升构建速度和用户体验。</p>\n","excerpt":"","more":"<h1 id=\"1、性能优化\"><a href=\"#1、性能优化\" class=\"headerlink\" title=\"1、性能优化\"></a>1、性能优化</h1><h3 id=\"1-1、富文本框的事件监听问题\"><a href=\"#1-1、富文本框的事件监听问题\" class=\"headerlink\" title=\"1.1、富文本框的事件监听问题\"></a>1.1、富文本框的事件监听问题</h3><p>&emsp;&emsp;滚动页面时，:smile:发现页面卡顿，通过浏览器开发者工具的performance分析，发现鼠标在页面滑动的时候在不断的执行一个方法，找到对应的代码位置后发现这里写了一个mousemove。这种事件的触发频率非常之高，会导致使用不流畅，卡帧的现象。</p>\n<p>解决办法：</p>\n<ul>\n<li>防抖节流，可以设置500ms执行一次</li>\n<li>使用webAPI，IntersectionObserverAPI，元素与视口交叉执行</li>\n<li>直接将mousemove替换成mouseenter，鼠标进入时触发</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div  @mousemove<span class=\"token punctuation\">.</span>stop<span class=\"token operator\">=</span><span class=\"token string\">\"changeToEdit\"</span><span class=\"token operator\">></span>\n    <span class=\"token comment\">//....</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token keyword\">public</span> <span class=\"token function\">changeToEdit</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isEdit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isEdit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAudio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'richText'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createEditorFun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'textarea'</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTextareaEditorFun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"1-2、js执行时间过长导致的页面书写卡顿问题（已完成）\"><a href=\"#1-2、js执行时间过长导致的页面书写卡顿问题（已完成）\" class=\"headerlink\" title=\"1.2、js执行时间过长导致的页面书写卡顿问题（已完成）\"></a>1.2、js执行时间过长导致的页面书写卡顿问题（已完成）</h3><p><img src=\"/images/tbkwPage.png\"></p>\n<p>&emsp;&emsp;我们在使用的时候有着很明显的卡顿和卡帧问题，通过浏览器开发者工具的performance分析，发现我们在输入内容时在不断的执行一个函数watchMenuInfo，并且这个js函数执行周期比较长，那么一定是会影响页面渲染的。定位到代码位置分析，代码的逻辑是我们右边展示的数据都是存在左边侧边栏的，当我们输入内容或者做其他事情的时候，需要同步更新侧边栏。</p>\n<p>如下截取的一部分代码</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">@<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menuInfo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token function\">watchMenuInfo</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span> oldValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>menuList <span class=\"token operator\">=</span> <span class=\"token function\">deepClone</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>total <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>menuList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n@<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menuList'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token function\">menuListChane</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span> oldValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>oldValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>showList <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCurrentShowList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>代码中存在的两个问题</p>\n<ul>\n<li>不必要的监听：vue组件之间传值，对与引用类型的数据是双向的，我们在更改右侧内容的时候侧边的数据是直接同步的，不需要做额外的监听操作。</li>\n<li>大数据的深拷贝：侧边栏的数据一般是很大的，大体积的数据做深拷贝是很耗时的，这里实际上是不需要做深拷贝的，直接用即可</li>\n</ul>\n<p>解决以上两个问题，性能会有很大提升。</p>\n<p>但是以前这样的写法可能是出于一些其它考虑，所以在做更改的时候，需要小心谨慎，避免引出其它问题。</p>\n<h3 id=\"1-3、完成后的效果对比\"><a href=\"#1-3、完成后的效果对比\" class=\"headerlink\" title=\"1.3、完成后的效果对比\"></a>1.3、完成后的效果对比</h3><p><strong>优化前后的对比</strong></p>\n<p><strong>图表：</strong></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090778820-8218125c-701a-482c-ab45-c684c78f961a.png\" alt=\"优化前\"></p>\n<p>优化前：由图可以看出，当素材数量在5以下时，看不出明显的时间变化，此时平台性能基本稳定。但是随着素材数量的增加，耗时情况越严重，平台的素材上限是15，此时首次进入到渲染完成需要接近20秒。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090552375-7178f62f-958d-4306-824f-f894fa256e78.png\" alt=\"优化后\"></p>\n<p>优化后：由图可以看出，随着素材数量的增加，时间上的损耗无明显变化，平台性能基本稳定，始终维持在5秒左右，无论是首次进入的渲染还是切换素材以及输入内容，都比较平稳流畅。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1730091311242-51d3b08c-5fcd-4841-8caa-55343379b8ef.png\" alt=\"前后对比\"></p>\n<p>优化前后对比：由上图可以看出，随着素材数量的增加，优化效果会显著提升。当数量控制在5以下时，效果整体差别不大，但是数量为10、15的时候，优化前会变得异常卡顿，严重影响制作流程。优化后会有一个明显的性能提升的效果。</p>\n<p><strong>优化前（gif见附件）：</strong></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084678840-31894cd3-2ff9-4ce3-a421-ddff20e1d9f8.gif\"></p>\n<p><strong>优化后（gif见附件）：</strong></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084697597-d049e30e-e02b-41fa-9c96-288c3ccb5e21.gif\"></p>\n<h3 id=\"1-4、同步课文设计存在的缺陷（未开始）\"><a href=\"#1-4、同步课文设计存在的缺陷（未开始）\" class=\"headerlink\" title=\"1.4、同步课文设计存在的缺陷（未开始）\"></a>1.4、同步课文设计存在的缺陷（未开始）</h3><ul>\n<li>请求当前页的所有课文</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">getResouceQuestionList</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">reset <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> postData <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token operator\">...</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getWordList</span><span class=\"token punctuation\">(</span>postData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBatchStInfo</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> <span class=\"token string\">'mounted'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>便利请求过来的数据，按顺序执行编译过程getBatchStInfo –&gt;getTemplateData–&gt;parseContent，说白了就是准备好所有的右侧需要展示的数据，这一步是一个极其耗时的过程，有着很长的数据处理流程，带来的体验就是首次进入课文包，首次加载很慢，同时涉及到请求侧边栏数据的操作都会耗时卡顿，比如切换页码，批量标签，批量标注后返回的主页面都会卡顿。</li>\n</ul>\n<p>解决办法：不需要一次性处理侧边栏所有的数据，而是只处理第一条数据，后续切换素材的时候切换的哪个素材就做哪个素材的数据处理，可以大大优化卡顿问题。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">public</span> <span class=\"token function\">getBatchStInfo</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span> type<span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> reset<span class=\"token operator\">?</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  data<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">getTemplateData</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>identifier <span class=\"token keyword\">as</span> string<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">returnObj</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setTempObj</span><span class=\"token punctuation\">(</span>tempObj<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span>reset <span class=\"token operator\">?</span> length <span class=\"token operator\">+</span> index <span class=\"token operator\">:</span> index<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token function\">setTempObj</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">newVlaue</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> index<span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">?</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> parseTempObj <span class=\"token operator\">=</span> <span class=\"token function\">parseContent</span><span class=\"token punctuation\">(</span>newVlaue<span class=\"token punctuation\">,</span> newVlaue<span class=\"token punctuation\">.</span>isMultPaper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-5、依赖分析（未开始）\"><a href=\"#1-5、依赖分析（未开始）\" class=\"headerlink\" title=\"1.5、依赖分析（未开始）\"></a>1.5、依赖分析（未开始）</h3><p>npm包：depCheck</p>\n<p>depcheck 是一款用于检测项目中未使用依赖项的工具，特别适用于前端和Node.js项目。它的主要目的是帮助开发者识别并移除那些在项目中未被实际引用的依赖，从而优化项目结构，减少不必要的依赖，提高项目的运行效率和安全性。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install <span class=\"token operator\">-</span>g depcheck\n<span class=\"token comment\">// 根目录</span>\ndepcheck<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>执行后，depcheck会输出三个主要部分的结果：</p>\n<p>未使用的依赖：列出项目中未使用的依赖项。</p>\n<p>缺失的依赖：列出项目中实际使用但未在<code>package.json</code>中声明的依赖项。</p>\n<p>无用的文件：列出项目中未使用的文件。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1728961532523-b1d9c875-b2c8-4105-96f6-a04e70b75a97.png\"></p>\n<p>这个不可以完全相信，但是可以作为分析依赖的依据，基本可以排查荣誉的依赖，这些依赖的存在占用体积，去除这些无用的包，或者利用率比较小的包可以加快打包速度，减小打包体积，以获得更好的体验。</p>\n<h3 id=\"1-6、打包优化（未开始）\"><a href=\"#1-6、打包优化（未开始）\" class=\"headerlink\" title=\"1.6、打包优化（未开始）\"></a>1.6、打包优化（未开始）</h3><p>插件：webpack-bundle-analyzer</p>\n<p>webpack-bundle-analyzer 是一个用于分析和可视化Webpack打包结果的工具。它能够生成一个交互式的可缩放树状图，展示每个模块在打包文件中的大小，帮助开发者识别和优化不必要的依赖和代码，从而减小最终打包文件的体积。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev webpack<span class=\"token operator\">-</span>bundle<span class=\"token operator\">-</span>analyzer\n\n<span class=\"token keyword\">const</span> BundleAnalyzerPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack-bundle-analyzer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>BundleAnalyzerPlugin<span class=\"token punctuation\">;</span>\n\nconfig<span class=\"token punctuation\">.</span>plugins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">BundleAnalyzerPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>资源平台项目打包后的视图如下</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1728972087296-19131b20-4999-424d-9509-651434ec8909.png\"></p>\n<p>从这里可以看出平台的打包分的还是比较细致的，而且第三方库和业务代码是分开的，这样的好处就是第三方代码可以完全利用http缓存，不需要多次请求资源，只需要请求变更后的业务代码即可。</p>\n<p>在第三方模块里发现了很多可以改进的地方，比如第三方库中的monaco-editor占用了很大的体积，我们查看后发现这个包并没有被使用，这个是可以删除的，此外向jquery这种落后的第三方完全可以删掉，不再使用。除此之外像其它第三方库比如e-charts，element-ui可以用按需导入，减小体积。</p>\n<p>在业务模块里，发现很多没有用上的大体积的文件，比如stJson.ts引入了根本用不上。这张是完全可以删除的，以此类推可以排查出很多大体积打包文件，提升构建速度和用户体验。</p>\n"},{"title":"三、多audio标签的协调","date":"2024-10-01T02:43:21.000Z","author":"吴俊杰","top":false,"keywords":["audio标签"],"summary":"平常我们用audio的时候，都是一次性用到好几个，那么一个页面有好几个音频标签的时候，怎么协调多个音频的播放暂停呢......","_content":"\n# 一、audio标签的使用\n## 1、简单介绍\n<p>&emsp;&emsp;今天用audio实现了一个功能。平常我们用audio的时候啊，都是一次性用到好几个，那么一个页面有好几个音频标签的时候，怎么控制单一音频的播放暂停呢？怎么控制每次点击是否从头播放呢？怎么协调所有音频的播放和暂停呢？？？？来来来，教学教学。那么音频的使用分为好几个部分，首先你得调用音频组件，其次你得上传音频给后端，再获取后端的音频地址，将地址赋值给audio标签的src属性，点击就可以播放音频啦。</p>\n\n### 1.1、上传音频\n<p>&emsp;&emsp;那我们从第一步开始，首先你想播放音频，必须得有音频，那么在实际工作中我们访问的音频一定是后端传过来的，那么后端的音频又是从哪里来的呢，要么本来就有默认的，要么就是用户自己导入的音频。那我们先来看怎么导入音频吧。xdm，上代码！！！</p>\n<p>&emsp;&emsp;上传首先要用到upload组件，而且考虑的比较细致的话，上传的过程还是比较复杂的，对了我这里用的是iview的组件库，关于upload不熟悉的可以去官网看啦，这里简单解释一下组件绑定的属性都是什么意思。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>action：</strong>那么这个呢就是我们上传的地址音频上传到哪里去（后端提供）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>multiple：</strong>这个是指是否支持上传多个文件。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>show-upload-list：</strong>是否显示已上传文件列表。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>accept：</strong>接受上传的文件类型有哪些（一般音频的话就是MP3, wov, Wav）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>format：</strong>支持的文件类型，与accept不同的是，format是识别文件的后缀名，accept为input标签原生的accept属性，会在选择文件时过滤，可以两者结合使用。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>max-size：</strong>文件大小限制，单位kb。</p>\n<p>&emsp;&emsp;好的，了解了基本属性后，那我们再来说一说这里面涉及到的很多的回调函数啊。</p>\n<p>&emsp;&emsp;<strong>1、on-exceeded-size：</strong>这个是文件大小校验失败的回调，文件超出指定大小限制时的钩子。</p>\n<p>&emsp;&emsp;<strong>2、on-format-error：</strong>文件格式验证失败时的钩子。</p>\n<p>&emsp;&emsp;<strong>3、handleSuccess：</strong>文件上传成功后的钩子，注意response返回值。</p>\n<p>&emsp;&emsp;<strong>4、on-error：</strong>文件上传失败后的钩子。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <Upload ref=\"audioUpload\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"()=>exceededSizeFun('audio')\" :on-format-error=\"()=>formatError('audio')\" :on-success=\"(response)=>handleSuccess(response,'audio',index,audioIndex)\" :on-error=\"handleError\">\n      <Button>导入音频</Button>\n    </Upload>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {}\n})\nexport default class TestCase extends Vue {\n\n  //upload属性参数\n  public get uploadObj (): {\n    action: string;\n    accept: string;\n    maxSize: number;\n    format: Array<string>;\n    data: any;\n    } {\n     return {\n       action: `/graphApi/word-card/word/${this.id}/uploadFile`,\n       accept: '.MP3,.wov,.Wav',\n       format: ['MP3', 'wov', 'Wav'],\n       maxSize: 1024 * 10,\n       data: {\n         id: this.id\n       }\n     }\n   }\n\n  //文件大小校验失败回调\n  public exceededSizeFun (type: string): void {\n    this.$Message.warning(\n      `文件大小不能超过${(this[type === 'audio' ? 'uploadObj' : 'imageUploadObj'] as any).maxSize / 1024}M`\n    );\n  }\n\n  // 文件格式不对回调\n  public formatError (type: string): void {\n    this.$Message.warning(\n      `只支持上传${(this[type === 'audio' ? 'uploadObj' : 'imageUploadObj'] as any).format.join('、')}格式的文件！`\n    );\n  }\n\n  // 上传成功的回调（这里的参数大家可能看不懂，我这里传参主要用到index和audioIndex，这跟我的数据结构有关，大家不用太关注，我拿到这两个索引是为了把数据改了）\n  //大家只要关注response就好了，这是我们上传成功后的返回值，这个后面播放音频是要用到的\n  public handleSuccess (response, type, index, audioIndex) {\n    if (response.status === 200) {\n      const { data } = response;\n      this.$set(this.data[index].audioMessage[audioIndex], 'audioPath', data);\n    }\n  }\n\n  // 上传失败\n  public handleError (): void {\n    this.$Message.error('上传失败，请重新上传！');\n  }\n}\n<script>\n```\n\n### 1.2、引用音频标签\n<p>&emsp;&emsp;通过上面的代码，我们已经实现了上传音频。那么接下俩我们使用音频这个标签呢？，直接看代码啊，我们对着代码来说啊。这里我们引用了audio标签，并且只给了src属性，这里调用了getPath方法，那么这个方法的参数其实就是handleSuccess的返回值response结构出来的data，通过getPath这个方法（里面做了一些判断，不用在意这个根据实际情况而定）我们会调用接口拿到这个音频的播放地址，这样就可以播放了（播放和暂停待会放在第三部分一起说）,对了音频有两个特别重要的属性，我在这里简单的说一下，就是currentTime和duration，分别是指当前音频播放的时常和当前音频的总时长，这两个在实际工作中对我们做一些判断是很有作用的。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <audio style=\"display:none\" :src=\"getPath(audioPath)\"></audio>\n    <Upload ref=\"audioUpload\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"()=>exceededSizeFun('audio')\" :on-format-error=\"()=>formatError('audio')\" :on-success=\"(response)=>handleSuccess(response,'audio',index,audioIndex)\" :on-error=\"handleError\">\n      <Button>导入音频</Button>\n    </Upload>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n\n  //获取音频播放路径\n  public getPath (path: string) {\n    let finalPath = '';\n    if (path) {\n      if (path.indexOf('https://') === 0 || path.indexOf('http://') === 0) {\n        finalPath = path;\n      } else {\n        //这里就是调用接口返回音频播放地址\n        finalPath = getFileResource(path.split('/')[1], path.split('/')[0]);\n      }\n    }\n    return finalPath;\n  }\n}\n<script>\n```\n\n### 1.3、协调播放\n<p>&emsp;&emsp;那么从第二部分我们拿到音频的播放地址了，就可以随意播放音频了，那么怎么播放呢。一般是给音频一个特定的ref，然后用this.$refs去访问音频元素，然后调用它的play（）和pause（）方法，也就是播放和暂停。我这里很有讲究的，直接把注释写代码里了，对着代码看，不然不容易解释。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <audio style=\"display:none\" :src=\"getPath(audioPath)\"></audio>\n    <Button type=\"primary\" @click=\"playAudio(index,audioIndex)\">播放音频</Button>\n    <Upload ref=\"audioUpload\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"()=>exceededSizeFun('audio')\" :on-format-error=\"()=>formatError('audio')\" :on-success=\"(response)=>handleSuccess(response,'audio',index,audioIndex)\" :on-error=\"handleError\">\n      <Button>导入音频</Button>\n    </Upload>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n\n  //用于判断当前音频是否处在播放状态\n  isPlaying = true;\n  //用于判断是否点击的是同意音频，用于协调不同音频的播放设置\n  tempAudio = '';\n\n  public playAudio(index, audioIndex) {\n    //首先我这里一个页面有好几个音频，所以在点击播放时先拿到所有的音频，依次遍历暂停，防止都在播放干扰\n    const audioAll = document.querySelectorAll('audio');\n    for (const i in audioAll) {\n      if ((typeof audioAll[i]) === 'object') {\n        audioAll[i].pause();\n      }\n    }\n    //利用传进来的两个参数，访问到当前被点击的音频\n    const currentAudio = document.getElementById('audio' + index + audioIndex);\n    if (currentAudio) {\n      //判断：如果这个音频是不是上一次点击的音频\n      if (this.tempAudio === index.toString() + audioIndex.toString()) {\n        //如果点击的是上一次点击的音频，我们要做判断，改音频是不是在播放（isPlaying）属性，如果是就暂停，如果不是就播放\n        if ((currentAudio as any).currentTime === 0 || this.isPlaying === false) {\n          //这里是播放，注意用了currentTime，这个是播放的时间，置为0就是从头播放\n          (currentAudio as any).currentTime = 0;\n          //播放\n          (currentAudio as any).play();\n          //播放的同时，我们给一个状态，表示当前有音频正在播放\n          this.isPlaying = true;\n        } else {\n          (currentAudio as any).pause()\n          //暂停的时候我们也给一个状态，说明当前没有音频在播放\n          this.isPlaying = false;\n        }\n      } else {\n        //如果不是上一次点击的音频，直接走else，那就是直接从头开始播放该音频\n        (currentAudio as any).play();\n        (currentAudio as any).currentTime = 0;\n        this.isPlaying = true;\n      }\n      //这里就是只要点击了音频，那我们就更新一下点击的是哪一个音频，用于与下一次点击时候做对比\n      this.tempAudio = index.toString() + audioIndex.toString()\n    }\n  }\n}\n<script>\n```\n\n<p>&emsp;&emsp;好啦，这里简单说一下协调播放后的效果是什么样的。当你点击任何一个音频的时候，其他正在播放的音频会暂停，被点击的音频会从头播放；当一个音频正在播放，我们点击它的时候它会暂停，暂停后你再点击，它会从头播放。当有一个音频在播放时，我们去点击另外一个音频，那么这个音频会暂停，那个被点击的音频会从头播放。</p>","source":"_posts/工作记录/工作记录-3、多audio标签的协调.md","raw":"---\ntitle: 三、多audio标签的协调\ndate: 2024-10-01 10:43:21\nauthor: 吴俊杰\ntop: false\nkeywords:\n  - audio标签\nsummary: 平常我们用audio的时候，都是一次性用到好几个，那么一个页面有好几个音频标签的时候，怎么协调多个音频的播放暂停呢......\ncategories: \n  - 工作记录\ntags:\n  - HTML\n  - audio\n---\n\n# 一、audio标签的使用\n## 1、简单介绍\n<p>&emsp;&emsp;今天用audio实现了一个功能。平常我们用audio的时候啊，都是一次性用到好几个，那么一个页面有好几个音频标签的时候，怎么控制单一音频的播放暂停呢？怎么控制每次点击是否从头播放呢？怎么协调所有音频的播放和暂停呢？？？？来来来，教学教学。那么音频的使用分为好几个部分，首先你得调用音频组件，其次你得上传音频给后端，再获取后端的音频地址，将地址赋值给audio标签的src属性，点击就可以播放音频啦。</p>\n\n### 1.1、上传音频\n<p>&emsp;&emsp;那我们从第一步开始，首先你想播放音频，必须得有音频，那么在实际工作中我们访问的音频一定是后端传过来的，那么后端的音频又是从哪里来的呢，要么本来就有默认的，要么就是用户自己导入的音频。那我们先来看怎么导入音频吧。xdm，上代码！！！</p>\n<p>&emsp;&emsp;上传首先要用到upload组件，而且考虑的比较细致的话，上传的过程还是比较复杂的，对了我这里用的是iview的组件库，关于upload不熟悉的可以去官网看啦，这里简单解释一下组件绑定的属性都是什么意思。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>action：</strong>那么这个呢就是我们上传的地址音频上传到哪里去（后端提供）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>multiple：</strong>这个是指是否支持上传多个文件。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>show-upload-list：</strong>是否显示已上传文件列表。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>accept：</strong>接受上传的文件类型有哪些（一般音频的话就是MP3, wov, Wav）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>format：</strong>支持的文件类型，与accept不同的是，format是识别文件的后缀名，accept为input标签原生的accept属性，会在选择文件时过滤，可以两者结合使用。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>max-size：</strong>文件大小限制，单位kb。</p>\n<p>&emsp;&emsp;好的，了解了基本属性后，那我们再来说一说这里面涉及到的很多的回调函数啊。</p>\n<p>&emsp;&emsp;<strong>1、on-exceeded-size：</strong>这个是文件大小校验失败的回调，文件超出指定大小限制时的钩子。</p>\n<p>&emsp;&emsp;<strong>2、on-format-error：</strong>文件格式验证失败时的钩子。</p>\n<p>&emsp;&emsp;<strong>3、handleSuccess：</strong>文件上传成功后的钩子，注意response返回值。</p>\n<p>&emsp;&emsp;<strong>4、on-error：</strong>文件上传失败后的钩子。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <Upload ref=\"audioUpload\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"()=>exceededSizeFun('audio')\" :on-format-error=\"()=>formatError('audio')\" :on-success=\"(response)=>handleSuccess(response,'audio',index,audioIndex)\" :on-error=\"handleError\">\n      <Button>导入音频</Button>\n    </Upload>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {}\n})\nexport default class TestCase extends Vue {\n\n  //upload属性参数\n  public get uploadObj (): {\n    action: string;\n    accept: string;\n    maxSize: number;\n    format: Array<string>;\n    data: any;\n    } {\n     return {\n       action: `/graphApi/word-card/word/${this.id}/uploadFile`,\n       accept: '.MP3,.wov,.Wav',\n       format: ['MP3', 'wov', 'Wav'],\n       maxSize: 1024 * 10,\n       data: {\n         id: this.id\n       }\n     }\n   }\n\n  //文件大小校验失败回调\n  public exceededSizeFun (type: string): void {\n    this.$Message.warning(\n      `文件大小不能超过${(this[type === 'audio' ? 'uploadObj' : 'imageUploadObj'] as any).maxSize / 1024}M`\n    );\n  }\n\n  // 文件格式不对回调\n  public formatError (type: string): void {\n    this.$Message.warning(\n      `只支持上传${(this[type === 'audio' ? 'uploadObj' : 'imageUploadObj'] as any).format.join('、')}格式的文件！`\n    );\n  }\n\n  // 上传成功的回调（这里的参数大家可能看不懂，我这里传参主要用到index和audioIndex，这跟我的数据结构有关，大家不用太关注，我拿到这两个索引是为了把数据改了）\n  //大家只要关注response就好了，这是我们上传成功后的返回值，这个后面播放音频是要用到的\n  public handleSuccess (response, type, index, audioIndex) {\n    if (response.status === 200) {\n      const { data } = response;\n      this.$set(this.data[index].audioMessage[audioIndex], 'audioPath', data);\n    }\n  }\n\n  // 上传失败\n  public handleError (): void {\n    this.$Message.error('上传失败，请重新上传！');\n  }\n}\n<script>\n```\n\n### 1.2、引用音频标签\n<p>&emsp;&emsp;通过上面的代码，我们已经实现了上传音频。那么接下俩我们使用音频这个标签呢？，直接看代码啊，我们对着代码来说啊。这里我们引用了audio标签，并且只给了src属性，这里调用了getPath方法，那么这个方法的参数其实就是handleSuccess的返回值response结构出来的data，通过getPath这个方法（里面做了一些判断，不用在意这个根据实际情况而定）我们会调用接口拿到这个音频的播放地址，这样就可以播放了（播放和暂停待会放在第三部分一起说）,对了音频有两个特别重要的属性，我在这里简单的说一下，就是currentTime和duration，分别是指当前音频播放的时常和当前音频的总时长，这两个在实际工作中对我们做一些判断是很有作用的。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <audio style=\"display:none\" :src=\"getPath(audioPath)\"></audio>\n    <Upload ref=\"audioUpload\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"()=>exceededSizeFun('audio')\" :on-format-error=\"()=>formatError('audio')\" :on-success=\"(response)=>handleSuccess(response,'audio',index,audioIndex)\" :on-error=\"handleError\">\n      <Button>导入音频</Button>\n    </Upload>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n\n  //获取音频播放路径\n  public getPath (path: string) {\n    let finalPath = '';\n    if (path) {\n      if (path.indexOf('https://') === 0 || path.indexOf('http://') === 0) {\n        finalPath = path;\n      } else {\n        //这里就是调用接口返回音频播放地址\n        finalPath = getFileResource(path.split('/')[1], path.split('/')[0]);\n      }\n    }\n    return finalPath;\n  }\n}\n<script>\n```\n\n### 1.3、协调播放\n<p>&emsp;&emsp;那么从第二部分我们拿到音频的播放地址了，就可以随意播放音频了，那么怎么播放呢。一般是给音频一个特定的ref，然后用this.$refs去访问音频元素，然后调用它的play（）和pause（）方法，也就是播放和暂停。我这里很有讲究的，直接把注释写代码里了，对着代码看，不然不容易解释。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <audio style=\"display:none\" :src=\"getPath(audioPath)\"></audio>\n    <Button type=\"primary\" @click=\"playAudio(index,audioIndex)\">播放音频</Button>\n    <Upload ref=\"audioUpload\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"()=>exceededSizeFun('audio')\" :on-format-error=\"()=>formatError('audio')\" :on-success=\"(response)=>handleSuccess(response,'audio',index,audioIndex)\" :on-error=\"handleError\">\n      <Button>导入音频</Button>\n    </Upload>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n\n  //用于判断当前音频是否处在播放状态\n  isPlaying = true;\n  //用于判断是否点击的是同意音频，用于协调不同音频的播放设置\n  tempAudio = '';\n\n  public playAudio(index, audioIndex) {\n    //首先我这里一个页面有好几个音频，所以在点击播放时先拿到所有的音频，依次遍历暂停，防止都在播放干扰\n    const audioAll = document.querySelectorAll('audio');\n    for (const i in audioAll) {\n      if ((typeof audioAll[i]) === 'object') {\n        audioAll[i].pause();\n      }\n    }\n    //利用传进来的两个参数，访问到当前被点击的音频\n    const currentAudio = document.getElementById('audio' + index + audioIndex);\n    if (currentAudio) {\n      //判断：如果这个音频是不是上一次点击的音频\n      if (this.tempAudio === index.toString() + audioIndex.toString()) {\n        //如果点击的是上一次点击的音频，我们要做判断，改音频是不是在播放（isPlaying）属性，如果是就暂停，如果不是就播放\n        if ((currentAudio as any).currentTime === 0 || this.isPlaying === false) {\n          //这里是播放，注意用了currentTime，这个是播放的时间，置为0就是从头播放\n          (currentAudio as any).currentTime = 0;\n          //播放\n          (currentAudio as any).play();\n          //播放的同时，我们给一个状态，表示当前有音频正在播放\n          this.isPlaying = true;\n        } else {\n          (currentAudio as any).pause()\n          //暂停的时候我们也给一个状态，说明当前没有音频在播放\n          this.isPlaying = false;\n        }\n      } else {\n        //如果不是上一次点击的音频，直接走else，那就是直接从头开始播放该音频\n        (currentAudio as any).play();\n        (currentAudio as any).currentTime = 0;\n        this.isPlaying = true;\n      }\n      //这里就是只要点击了音频，那我们就更新一下点击的是哪一个音频，用于与下一次点击时候做对比\n      this.tempAudio = index.toString() + audioIndex.toString()\n    }\n  }\n}\n<script>\n```\n\n<p>&emsp;&emsp;好啦，这里简单说一下协调播放后的效果是什么样的。当你点击任何一个音频的时候，其他正在播放的音频会暂停，被点击的音频会从头播放；当一个音频正在播放，我们点击它的时候它会暂停，暂停后你再点击，它会从头播放。当有一个音频在播放时，我们去点击另外一个音频，那么这个音频会暂停，那个被点击的音频会从头播放。</p>","slug":"工作记录/工作记录-3、多audio标签的协调","published":1,"updated":"2024-12-02T07:13:31.303Z","_id":"cm46ormsa00070cnn1w1tegsz","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"一、audio标签的使用\"><a href=\"#一、audio标签的使用\" class=\"headerlink\" title=\"一、audio标签的使用\"></a>一、audio标签的使用</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>  今天用audio实现了一个功能。平常我们用audio的时候啊，都是一次性用到好几个，那么一个页面有好几个音频标签的时候，怎么控制单一音频的播放暂停呢？怎么控制每次点击是否从头播放呢？怎么协调所有音频的播放和暂停呢？？？？来来来，教学教学。那么音频的使用分为好几个部分，首先你得调用音频组件，其次你得上传音频给后端，再获取后端的音频地址，将地址赋值给audio标签的src属性，点击就可以播放音频啦。</p>\n\n<h3 id=\"1-1、上传音频\"><a href=\"#1-1、上传音频\" class=\"headerlink\" title=\"1.1、上传音频\"></a>1.1、上传音频</h3><p>  那我们从第一步开始，首先你想播放音频，必须得有音频，那么在实际工作中我们访问的音频一定是后端传过来的，那么后端的音频又是从哪里来的呢，要么本来就有默认的，要么就是用户自己导入的音频。那我们先来看怎么导入音频吧。xdm，上代码！！！</p>\n<p>  上传首先要用到upload组件，而且考虑的比较细致的话，上传的过程还是比较复杂的，对了我这里用的是iview的组件库，关于upload不熟悉的可以去官网看啦，这里简单解释一下组件绑定的属性都是什么意思。</p>\n<p>    <strong>action：</strong>那么这个呢就是我们上传的地址音频上传到哪里去（后端提供）。</p>\n<p>    <strong>multiple：</strong>这个是指是否支持上传多个文件。</p>\n<p>    <strong>show-upload-list：</strong>是否显示已上传文件列表。</p>\n<p>    <strong>accept：</strong>接受上传的文件类型有哪些（一般音频的话就是MP3, wov, Wav）。</p>\n<p>    <strong>format：</strong>支持的文件类型，与accept不同的是，format是识别文件的后缀名，accept为input标签原生的accept属性，会在选择文件时过滤，可以两者结合使用。</p>\n<p>    <strong>max-size：</strong>文件大小限制，单位kb。</p>\n<p>  好的，了解了基本属性后，那我们再来说一说这里面涉及到的很多的回调函数啊。</p>\n<p>  <strong>1、on-exceeded-size：</strong>这个是文件大小校验失败的回调，文件超出指定大小限制时的钩子。</p>\n<p>  <strong>2、on-format-error：</strong>文件格式验证失败时的钩子。</p>\n<p>  <strong>3、handleSuccess：</strong>文件上传成功后的钩子，注意response返回值。</p>\n<p>  <strong>4、on-error：</strong>文件上传失败后的钩子。</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"audioUpload\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"()=&gt;exceededSizeFun('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"()=&gt;formatError('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=&gt;handleSuccess(response,'audio',index,audioIndex)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">&gt;</span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">//upload属性参数</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">get</span> <span class=\"token function\">uploadObj</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/graphApi/word-card/word/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/uploadFile</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> <span class=\"token string\">'.MP3,.wov,.Wav'</span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'MP3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wov'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Wav'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id\n       <span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">//文件大小校验失败回调</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">exceededSizeFun</span> <span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">文件大小不能超过</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'audio'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'uploadObj'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'imageUploadObj'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>maxSize <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">M</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 文件格式不对回调</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">formatError</span> <span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">只支持上传</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'audio'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'uploadObj'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'imageUploadObj'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'、'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">格式的文件！</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 上传成功的回调（这里的参数大家可能看不懂，我这里传参主要用到index和audioIndex，这跟我的数据结构有关，大家不用太关注，我拿到这两个索引是为了把数据改了）</span>\n  <span class=\"token comment\">//大家只要关注response就好了，这是我们上传成功后的返回值，这个后面播放音频是要用到的</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">handleSuccess</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> audioIndex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> response<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>audioMessage<span class=\"token punctuation\">[</span>audioIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'audioPath'</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 上传失败</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">handleError</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'上传失败，请重新上传！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-2、引用音频标签\"><a href=\"#1-2、引用音频标签\" class=\"headerlink\" title=\"1.2、引用音频标签\"></a>1.2、引用音频标签</h3><p>  通过上面的代码，我们已经实现了上传音频。那么接下俩我们使用音频这个标签呢？，直接看代码啊，我们对着代码来说啊。这里我们引用了audio标签，并且只给了src属性，这里调用了getPath方法，那么这个方法的参数其实就是handleSuccess的返回值response结构出来的data，通过getPath这个方法（里面做了一些判断，不用在意这个根据实际情况而定）我们会调用接口拿到这个音频的播放地址，这样就可以播放了（播放和暂停待会放在第三部分一起说）,对了音频有两个特别重要的属性，我在这里简单的说一下，就是currentTime和duration，分别是指当前音频播放的时常和当前音频的总时长，这两个在实际工作中对我们做一些判断是很有作用的。</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>audio style<span class=\"token operator\">=</span><span class=\"token string\">\"display:none\"</span> <span class=\"token operator\">:</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"getPath(audioPath)\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>audio<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"audioUpload\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"()=&gt;exceededSizeFun('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"()=&gt;formatError('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=&gt;handleSuccess(response,'audio',index,audioIndex)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">&gt;</span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">//获取音频播放路径</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getPath</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> finalPath <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        finalPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//这里就是调用接口返回音频播放地址</span>\n        finalPath <span class=\"token operator\">=</span> <span class=\"token function\">getFileResource</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> finalPath<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-3、协调播放\"><a href=\"#1-3、协调播放\" class=\"headerlink\" title=\"1.3、协调播放\"></a>1.3、协调播放</h3><p>  那么从第二部分我们拿到音频的播放地址了，就可以随意播放音频了，那么怎么播放呢。一般是给音频一个特定的ref，然后用this.$refs去访问音频元素，然后调用它的play（）和pause（）方法，也就是播放和暂停。我这里很有讲究的，直接把注释写代码里了，对着代码看，不然不容易解释。</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>audio style<span class=\"token operator\">=</span><span class=\"token string\">\"display:none\"</span> <span class=\"token operator\">:</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"getPath(audioPath)\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>audio<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>Button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"playAudio(index,audioIndex)\"</span><span class=\"token operator\">&gt;</span>播放音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"audioUpload\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"()=&gt;exceededSizeFun('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"()=&gt;formatError('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=&gt;handleSuccess(response,'audio',index,audioIndex)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">&gt;</span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">//用于判断当前音频是否处在播放状态</span>\n  isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//用于判断是否点击的是同意音频，用于协调不同音频的播放设置</span>\n  tempAudio <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">playAudio</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index<span class=\"token punctuation\">,</span> audioIndex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//首先我这里一个页面有好几个音频，所以在点击播放时先拿到所有的音频，依次遍历暂停，防止都在播放干扰</span>\n    <span class=\"token keyword\">const</span> audioAll <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> i <span class=\"token keyword\">in</span> audioAll<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> audioAll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        audioAll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//利用传进来的两个参数，访问到当前被点击的音频</span>\n    <span class=\"token keyword\">const</span> currentAudio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span> <span class=\"token operator\">+</span> index <span class=\"token operator\">+</span> audioIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentAudio<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">//判断：如果这个音频是不是上一次点击的音频</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tempAudio <span class=\"token operator\">===</span> index<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> audioIndex<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//如果点击的是上一次点击的音频，我们要做判断，改音频是不是在播放（isPlaying）属性，如果是就暂停，如果不是就播放</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">===</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">//这里是播放，注意用了currentTime，这个是播放的时间，置为0就是从头播放</span>\n          <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">//播放</span>\n          <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">//播放的同时，我们给一个状态，表示当前有音频正在播放</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token comment\">//暂停的时候我们也给一个状态，说明当前没有音频在播放</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//如果不是上一次点击的音频，直接走else，那就是直接从头开始播放该音频</span>\n        <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">//这里就是只要点击了音频，那我们就更新一下点击的是哪一个音频，用于与下一次点击时候做对比</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tempAudio <span class=\"token operator\">=</span> index<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> audioIndex<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>  好啦，这里简单说一下协调播放后的效果是什么样的。当你点击任何一个音频的时候，其他正在播放的音频会暂停，被点击的音频会从头播放；当一个音频正在播放，我们点击它的时候它会暂停，暂停后你再点击，它会从头播放。当有一个音频在播放时，我们去点击另外一个音频，那么这个音频会暂停，那个被点击的音频会从头播放。</p>","excerpt":"","more":"<h1 id=\"一、audio标签的使用\"><a href=\"#一、audio标签的使用\" class=\"headerlink\" title=\"一、audio标签的使用\"></a>一、audio标签的使用</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;今天用audio实现了一个功能。平常我们用audio的时候啊，都是一次性用到好几个，那么一个页面有好几个音频标签的时候，怎么控制单一音频的播放暂停呢？怎么控制每次点击是否从头播放呢？怎么协调所有音频的播放和暂停呢？？？？来来来，教学教学。那么音频的使用分为好几个部分，首先你得调用音频组件，其次你得上传音频给后端，再获取后端的音频地址，将地址赋值给audio标签的src属性，点击就可以播放音频啦。</p>\n\n<h3 id=\"1-1、上传音频\"><a href=\"#1-1、上传音频\" class=\"headerlink\" title=\"1.1、上传音频\"></a>1.1、上传音频</h3><p>&emsp;&emsp;那我们从第一步开始，首先你想播放音频，必须得有音频，那么在实际工作中我们访问的音频一定是后端传过来的，那么后端的音频又是从哪里来的呢，要么本来就有默认的，要么就是用户自己导入的音频。那我们先来看怎么导入音频吧。xdm，上代码！！！</p>\n<p>&emsp;&emsp;上传首先要用到upload组件，而且考虑的比较细致的话，上传的过程还是比较复杂的，对了我这里用的是iview的组件库，关于upload不熟悉的可以去官网看啦，这里简单解释一下组件绑定的属性都是什么意思。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>action：</strong>那么这个呢就是我们上传的地址音频上传到哪里去（后端提供）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>multiple：</strong>这个是指是否支持上传多个文件。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>show-upload-list：</strong>是否显示已上传文件列表。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>accept：</strong>接受上传的文件类型有哪些（一般音频的话就是MP3, wov, Wav）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>format：</strong>支持的文件类型，与accept不同的是，format是识别文件的后缀名，accept为input标签原生的accept属性，会在选择文件时过滤，可以两者结合使用。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>max-size：</strong>文件大小限制，单位kb。</p>\n<p>&emsp;&emsp;好的，了解了基本属性后，那我们再来说一说这里面涉及到的很多的回调函数啊。</p>\n<p>&emsp;&emsp;<strong>1、on-exceeded-size：</strong>这个是文件大小校验失败的回调，文件超出指定大小限制时的钩子。</p>\n<p>&emsp;&emsp;<strong>2、on-format-error：</strong>文件格式验证失败时的钩子。</p>\n<p>&emsp;&emsp;<strong>3、handleSuccess：</strong>文件上传成功后的钩子，注意response返回值。</p>\n<p>&emsp;&emsp;<strong>4、on-error：</strong>文件上传失败后的钩子。</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"audioUpload\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"()=>exceededSizeFun('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"()=>formatError('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response,'audio',index,audioIndex)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">></span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">//upload属性参数</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">get</span> <span class=\"token function\">uploadObj</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/graphApi/word-card/word/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/uploadFile</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> <span class=\"token string\">'.MP3,.wov,.Wav'</span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'MP3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wov'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Wav'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id\n       <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">//文件大小校验失败回调</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">exceededSizeFun</span> <span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">文件大小不能超过</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'audio'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'uploadObj'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'imageUploadObj'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>maxSize <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">M</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 文件格式不对回调</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">formatError</span> <span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">只支持上传</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'audio'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'uploadObj'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'imageUploadObj'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'、'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">格式的文件！</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 上传成功的回调（这里的参数大家可能看不懂，我这里传参主要用到index和audioIndex，这跟我的数据结构有关，大家不用太关注，我拿到这两个索引是为了把数据改了）</span>\n  <span class=\"token comment\">//大家只要关注response就好了，这是我们上传成功后的返回值，这个后面播放音频是要用到的</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">handleSuccess</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> audioIndex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> data <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> response<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>audioMessage<span class=\"token punctuation\">[</span>audioIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'audioPath'</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 上传失败</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">handleError</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'上传失败，请重新上传！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-2、引用音频标签\"><a href=\"#1-2、引用音频标签\" class=\"headerlink\" title=\"1.2、引用音频标签\"></a>1.2、引用音频标签</h3><p>&emsp;&emsp;通过上面的代码，我们已经实现了上传音频。那么接下俩我们使用音频这个标签呢？，直接看代码啊，我们对着代码来说啊。这里我们引用了audio标签，并且只给了src属性，这里调用了getPath方法，那么这个方法的参数其实就是handleSuccess的返回值response结构出来的data，通过getPath这个方法（里面做了一些判断，不用在意这个根据实际情况而定）我们会调用接口拿到这个音频的播放地址，这样就可以播放了（播放和暂停待会放在第三部分一起说）,对了音频有两个特别重要的属性，我在这里简单的说一下，就是currentTime和duration，分别是指当前音频播放的时常和当前音频的总时长，这两个在实际工作中对我们做一些判断是很有作用的。</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>audio style<span class=\"token operator\">=</span><span class=\"token string\">\"display:none\"</span> <span class=\"token operator\">:</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"getPath(audioPath)\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>audio<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"audioUpload\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"()=>exceededSizeFun('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"()=>formatError('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response,'audio',index,audioIndex)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">></span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">//获取音频播放路径</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getPath</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> finalPath <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        finalPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//这里就是调用接口返回音频播放地址</span>\n        finalPath <span class=\"token operator\">=</span> <span class=\"token function\">getFileResource</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> finalPath<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-3、协调播放\"><a href=\"#1-3、协调播放\" class=\"headerlink\" title=\"1.3、协调播放\"></a>1.3、协调播放</h3><p>&emsp;&emsp;那么从第二部分我们拿到音频的播放地址了，就可以随意播放音频了，那么怎么播放呢。一般是给音频一个特定的ref，然后用this.$refs去访问音频元素，然后调用它的play（）和pause（）方法，也就是播放和暂停。我这里很有讲究的，直接把注释写代码里了，对着代码看，不然不容易解释。</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>audio style<span class=\"token operator\">=</span><span class=\"token string\">\"display:none\"</span> <span class=\"token operator\">:</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"getPath(audioPath)\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>audio<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"playAudio(index,audioIndex)\"</span><span class=\"token operator\">></span>播放音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"audioUpload\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"()=>exceededSizeFun('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"()=>formatError('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response,'audio',index,audioIndex)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">></span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">//用于判断当前音频是否处在播放状态</span>\n  isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//用于判断是否点击的是同意音频，用于协调不同音频的播放设置</span>\n  tempAudio <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">playAudio</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index<span class=\"token punctuation\">,</span> audioIndex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//首先我这里一个页面有好几个音频，所以在点击播放时先拿到所有的音频，依次遍历暂停，防止都在播放干扰</span>\n    <span class=\"token keyword\">const</span> audioAll <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> i <span class=\"token keyword\">in</span> audioAll<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> audioAll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        audioAll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//利用传进来的两个参数，访问到当前被点击的音频</span>\n    <span class=\"token keyword\">const</span> currentAudio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span> <span class=\"token operator\">+</span> index <span class=\"token operator\">+</span> audioIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentAudio<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//判断：如果这个音频是不是上一次点击的音频</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tempAudio <span class=\"token operator\">===</span> index<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> audioIndex<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//如果点击的是上一次点击的音频，我们要做判断，改音频是不是在播放（isPlaying）属性，如果是就暂停，如果不是就播放</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">===</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token comment\">//这里是播放，注意用了currentTime，这个是播放的时间，置为0就是从头播放</span>\n          <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">//播放</span>\n          <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">//播放的同时，我们给一个状态，表示当前有音频正在播放</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token comment\">//暂停的时候我们也给一个状态，说明当前没有音频在播放</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//如果不是上一次点击的音频，直接走else，那就是直接从头开始播放该音频</span>\n        <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token comment\">//这里就是只要点击了音频，那我们就更新一下点击的是哪一个音频，用于与下一次点击时候做对比</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tempAudio <span class=\"token operator\">=</span> index<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> audioIndex<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>&emsp;&emsp;好啦，这里简单说一下协调播放后的效果是什么样的。当你点击任何一个音频的时候，其他正在播放的音频会暂停，被点击的音频会从头播放；当一个音频正在播放，我们点击它的时候它会暂停，暂停后你再点击，它会从头播放。当有一个音频在播放时，我们去点击另外一个音频，那么这个音频会暂停，那个被点击的音频会从头播放。</p>"},{"title":"二、iview-Table之动态合并单元格","date":"2024-10-02T00:34:01.000Z","author":"吴俊杰","top":false,"keywords":["iview","table","合并单元格","组件封装"],"summary":"iview越用越觉得不好用，很多内容不得不适用render函数去实现，这里记录一下使用iview table组件的时候实现单元格的合并......","_content":"\n\n# 一、iview-Table之动态合并单元格\n## 1、普通合并单元格\n<p>&emsp;&emsp;我们先来看一下简单的合并单元格，也是iview官网给的示例，可以帮助我们理解。通过设置属性span-method可以指定合并行或列的算法，方法传入一个对象，对象里有四个属性,分别是:</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>row:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>column:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>rowIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>columnIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;该函数可以返回一个包含两个元素的数组，第一个元素代表rowspan,表示合并几行，第二个元素代表colspan表示合并几列。了解了用这个属性，那么怎么用呢，我们来看代码啊，并且对着代码看下效果哦！！</p>\n\n```javascript\n<template>\n    <div>\n      <Table :columns=\"columns\" :data=\"data\" :span-method=\"handleSpan\"></Table>\n    </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  //表头列\n  columns:Array<any> = [\n    {\n      title: 'Date',\n      key: 'date'\n    },\n    {\n      title: 'Name',\n      key: 'name'\n    },\n    {\n      title: 'Age',\n      key: 'age'\n    },\n    {\n      title: 'Address',\n      key: 'address'\n    },\n  ];\n  \n  data: Array<any> = [\n    {\n      name: 'John Brown',\n      age: 18,\n      address: 'New York No. 1 Lake Park',\n      date: '2016-10-03'\n    },\n    {\n      name: 'Jim Green',\n      age: 24,\n      address: 'London No. 1 Lake Park',\n      date: '2016-10-01'\n    },\n    {\n      name: 'Joe Black',\n      age: 30,\n      address: 'Sydney No. 1 Lake Park',\n      date: '2016-10-02'\n    },\n    {\n      name: 'Jon Snow',\n      age: 26,\n      address: 'Ottawa No. 2 Lake Park',\n      date: '2016-10-04'\n    }\n  ];\n\n  handleSpan({ row, column, rowIndex, columnIndex }) {\n    if (rowIndex === 0 && columnIndex === 0) {\n      //如果是第一行第一列，则返回[1,2],就是该单元格合并一行，合并两列\n      return [1, 2];\n    } else if (rowIndex === 0 && columnIndex === 1) {\n      //因为合并了第一行，第二列的单元格，所以要给这个单元格返回[0,0],就是关闭这个单元格\n      return [0, 0];\n    }\n    if (rowIndex === 2 && columnIndex === 0) {\n      //不同写法但同理，第三行第一列单元格合并两行，合并一列\n      return {\n        rowspan: 2,\n        colspan: 1\n      };\n    } else if (rowIndex === 3 && columnIndex === 0) {\n      //同理，被合并的单元格要置空\n      return {\n        rowspan: 0,\n        colspan: 0\n      };\n    }\n  }\n\n  mounted () {\n\n  }\n}\n<script>\n```\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果，效果杠杠的！！第一行的前两列合并，第一列的后两行合并。</p>\n\n![](/images/mergeTable.jpg)\n\n## 2、复杂合并单元格\n<p>&emsp;&emsp;以上的情况是非常简单的情景，但是实际情况下，我们总是要根据数据做动态合并的，而且实际情况中是不怎会合并两列的，英语列表头不一样，合并没意义。所以实际中我们总会合并一些特定行，主要就是哪些行数据相同时，我们就给他合并。注意啊，这个时候，我们对数据也是有要求的啊，就是内容相同的数据必须是相邻的行，因为跨行合并是在是没意义。那么，怎么合并呢，合并的方法还是上面那个，只不过我们要对数据做处理，记录每一行的数据相同的我们会给到标志，然后根据这个标志，来决定合并几行。。。</p>\n<p>&emsp;&emsp;这里我还要解释一个情况，就是我们再合并第一列的数据相同的行后，我们再合并第二列的行，这个时候是在第一列行合并的基础上去做的，比如在第二列中相同的数据，但是在第一列中属于不同的合并部分，那么是不让合并的。</p>\n<p style=\"color: red\">&emsp;&emsp;主要看两个函数handleSpan和assembleData，数据是请求过来的，我们拿到数据之后，调用assembleData函数，然后渲染table的时候，table会自己根据handleSpan去渲染。</p>\n\n```javascript\n<template>\n    <div>\n      <Table :columns=\"columns\" :data=\"data\" :span-method=\"handleSpan\"></Table>\n    </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  //表头列就不写了，一样的\n  columns:Array<any> = [];\n  //数据是请求过来的，也不写了啊\n  data: Array<any> = [];\n\n  //这里我们做前三列的行合并\n  handleSpan({ row, column, rowIndex, columnIndex }) {\n    //合并第一列的数据相同行\n    if (columnIndex == 0) {\n      let x = row.oneNum == 0 ? 0 : row.oneNum\n      let y = row.oneNum == 0 ? 0 : 1\n      return [x, y]\n    }\n    //合并第二列的数据相同行\n    if (columnIndex == 1) {\n      let x = row.twoNum == 0 ? 0 : row.twoNum\n      let y = row.twoNum == 0 ? 0 : 1\n      return [x, y]\n    }\n    //合并第三列的数据相同行\n    if (columnIndex == 2) {\n      let x = row.threeNum == 0 ? 0 : row.threeNum\n      let y = row.threeNum == 0 ? 0 : 1\n      return [x, y]\n    }\n  }\n\n  //做行合并我们需要加标志（oneNum、twoNum、threeNum）\n  assembleData(data) {\n    //第一列\n    for (var i = 0; i < data.length; i++) {\n      //数据刚来时没有oneAlready的，所以一定会进来\n      if (data[i].oneAlready !== 1) {\n        if (data[i + 1]) {\n          //这里加上标志oneNum用于待会判定合并几行\n          data[i].oneNum = 1\n          for (var a = i + 1; a < data.length; a++) {\n            //这里的testPaperTemplate是表格第一列表头的字段\n            if (data[i].testPaperTemplate === data[a].testPaperTemplate) {\n              data[i].oneNum++\n              data[a].oneNum = 0\n              data[a].oneAlready = 1\n            } else {\n              break\n            }\n          }\n        }\n      }\n    }\n    //第二列\n    for (var j = 0; j < data.length; j++) {\n      if (data[j].oneNum > 1) {\n        //这里我们依据oneNum做了判断，意思是我们第二列对的行合并要根据第一列的来\n        for (var k = 0; k < data[j].oneNum; k++) {\n          //twoAlready一样，不会对数据产生影响，只是用来做判断的\n          if (data[j + k].twoAlready !== 1) {\n            if (k + 1 < data[j].oneNum) {\n              //这里加第二列的标志twoNum\n              data[j + k].twoNum = 1\n              for (var b = k + 1; b < data[j].oneNum; b++) {\n                //这里的total是表头第二列的字段\n                if (data[j + k].total === data[j + b].total) {\n                  data[j + k].twoNum++\n                  data[j + b].twoNum = 0\n                  data[j + b].twoAlready = 1\n                } else {\n                  break\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    //第三列与第二列完全一致\n    for (var j = 0; j < data.length; j++) {\n      if (data[j].twoNum > 1) {\n        for (var k = 0; k < data[j].twoNum; k++) {\n          if (data[j + k].threeAlready !== 1) {\n            if (k + 1 < data[j].twoNum) {\n              data[j + k].threeNum = 1\n              for (var b = k + 1; b < data[j].twoNum; b++) {\n                if (data[j + k].jk_count === data[j + b].jk_count) {\n                  data[j + k].threeNum++\n                  data[j + b].threeNum = 0\n                  data[j + b].threeAlready = 1\n                } else {\n                  break\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  mounted () {\n\n  }\n}\n<script>\n```\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果吧，效果杠杠的！！</p>\n\n![](/images/dMergeTable.jpg)\n\n\n","source":"_posts/组件封装/组件封装-2：iview-Table之动态合并单元格.md","raw":"---\ntitle: 二、iview-Table之动态合并单元格\ndate: 2024-10-02 08:34:01\nauthor: 吴俊杰\ntop: false\nkeywords:\n  - iview\n  - table\n  - 合并单元格\n  - 组件封装\nsummary: iview越用越觉得不好用，很多内容不得不适用render函数去实现，这里记录一下使用iview table组件的时候实现单元格的合并......\ncategories: \n  - 组件封装\ntags:\n  - iview\n  - table\n  - 合并单元格\n---\n\n\n# 一、iview-Table之动态合并单元格\n## 1、普通合并单元格\n<p>&emsp;&emsp;我们先来看一下简单的合并单元格，也是iview官网给的示例，可以帮助我们理解。通过设置属性span-method可以指定合并行或列的算法，方法传入一个对象，对象里有四个属性,分别是:</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>row:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>column:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>rowIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>columnIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;该函数可以返回一个包含两个元素的数组，第一个元素代表rowspan,表示合并几行，第二个元素代表colspan表示合并几列。了解了用这个属性，那么怎么用呢，我们来看代码啊，并且对着代码看下效果哦！！</p>\n\n```javascript\n<template>\n    <div>\n      <Table :columns=\"columns\" :data=\"data\" :span-method=\"handleSpan\"></Table>\n    </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  //表头列\n  columns:Array<any> = [\n    {\n      title: 'Date',\n      key: 'date'\n    },\n    {\n      title: 'Name',\n      key: 'name'\n    },\n    {\n      title: 'Age',\n      key: 'age'\n    },\n    {\n      title: 'Address',\n      key: 'address'\n    },\n  ];\n  \n  data: Array<any> = [\n    {\n      name: 'John Brown',\n      age: 18,\n      address: 'New York No. 1 Lake Park',\n      date: '2016-10-03'\n    },\n    {\n      name: 'Jim Green',\n      age: 24,\n      address: 'London No. 1 Lake Park',\n      date: '2016-10-01'\n    },\n    {\n      name: 'Joe Black',\n      age: 30,\n      address: 'Sydney No. 1 Lake Park',\n      date: '2016-10-02'\n    },\n    {\n      name: 'Jon Snow',\n      age: 26,\n      address: 'Ottawa No. 2 Lake Park',\n      date: '2016-10-04'\n    }\n  ];\n\n  handleSpan({ row, column, rowIndex, columnIndex }) {\n    if (rowIndex === 0 && columnIndex === 0) {\n      //如果是第一行第一列，则返回[1,2],就是该单元格合并一行，合并两列\n      return [1, 2];\n    } else if (rowIndex === 0 && columnIndex === 1) {\n      //因为合并了第一行，第二列的单元格，所以要给这个单元格返回[0,0],就是关闭这个单元格\n      return [0, 0];\n    }\n    if (rowIndex === 2 && columnIndex === 0) {\n      //不同写法但同理，第三行第一列单元格合并两行，合并一列\n      return {\n        rowspan: 2,\n        colspan: 1\n      };\n    } else if (rowIndex === 3 && columnIndex === 0) {\n      //同理，被合并的单元格要置空\n      return {\n        rowspan: 0,\n        colspan: 0\n      };\n    }\n  }\n\n  mounted () {\n\n  }\n}\n<script>\n```\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果，效果杠杠的！！第一行的前两列合并，第一列的后两行合并。</p>\n\n![](/images/mergeTable.jpg)\n\n## 2、复杂合并单元格\n<p>&emsp;&emsp;以上的情况是非常简单的情景，但是实际情况下，我们总是要根据数据做动态合并的，而且实际情况中是不怎会合并两列的，英语列表头不一样，合并没意义。所以实际中我们总会合并一些特定行，主要就是哪些行数据相同时，我们就给他合并。注意啊，这个时候，我们对数据也是有要求的啊，就是内容相同的数据必须是相邻的行，因为跨行合并是在是没意义。那么，怎么合并呢，合并的方法还是上面那个，只不过我们要对数据做处理，记录每一行的数据相同的我们会给到标志，然后根据这个标志，来决定合并几行。。。</p>\n<p>&emsp;&emsp;这里我还要解释一个情况，就是我们再合并第一列的数据相同的行后，我们再合并第二列的行，这个时候是在第一列行合并的基础上去做的，比如在第二列中相同的数据，但是在第一列中属于不同的合并部分，那么是不让合并的。</p>\n<p style=\"color: red\">&emsp;&emsp;主要看两个函数handleSpan和assembleData，数据是请求过来的，我们拿到数据之后，调用assembleData函数，然后渲染table的时候，table会自己根据handleSpan去渲染。</p>\n\n```javascript\n<template>\n    <div>\n      <Table :columns=\"columns\" :data=\"data\" :span-method=\"handleSpan\"></Table>\n    </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  //表头列就不写了，一样的\n  columns:Array<any> = [];\n  //数据是请求过来的，也不写了啊\n  data: Array<any> = [];\n\n  //这里我们做前三列的行合并\n  handleSpan({ row, column, rowIndex, columnIndex }) {\n    //合并第一列的数据相同行\n    if (columnIndex == 0) {\n      let x = row.oneNum == 0 ? 0 : row.oneNum\n      let y = row.oneNum == 0 ? 0 : 1\n      return [x, y]\n    }\n    //合并第二列的数据相同行\n    if (columnIndex == 1) {\n      let x = row.twoNum == 0 ? 0 : row.twoNum\n      let y = row.twoNum == 0 ? 0 : 1\n      return [x, y]\n    }\n    //合并第三列的数据相同行\n    if (columnIndex == 2) {\n      let x = row.threeNum == 0 ? 0 : row.threeNum\n      let y = row.threeNum == 0 ? 0 : 1\n      return [x, y]\n    }\n  }\n\n  //做行合并我们需要加标志（oneNum、twoNum、threeNum）\n  assembleData(data) {\n    //第一列\n    for (var i = 0; i < data.length; i++) {\n      //数据刚来时没有oneAlready的，所以一定会进来\n      if (data[i].oneAlready !== 1) {\n        if (data[i + 1]) {\n          //这里加上标志oneNum用于待会判定合并几行\n          data[i].oneNum = 1\n          for (var a = i + 1; a < data.length; a++) {\n            //这里的testPaperTemplate是表格第一列表头的字段\n            if (data[i].testPaperTemplate === data[a].testPaperTemplate) {\n              data[i].oneNum++\n              data[a].oneNum = 0\n              data[a].oneAlready = 1\n            } else {\n              break\n            }\n          }\n        }\n      }\n    }\n    //第二列\n    for (var j = 0; j < data.length; j++) {\n      if (data[j].oneNum > 1) {\n        //这里我们依据oneNum做了判断，意思是我们第二列对的行合并要根据第一列的来\n        for (var k = 0; k < data[j].oneNum; k++) {\n          //twoAlready一样，不会对数据产生影响，只是用来做判断的\n          if (data[j + k].twoAlready !== 1) {\n            if (k + 1 < data[j].oneNum) {\n              //这里加第二列的标志twoNum\n              data[j + k].twoNum = 1\n              for (var b = k + 1; b < data[j].oneNum; b++) {\n                //这里的total是表头第二列的字段\n                if (data[j + k].total === data[j + b].total) {\n                  data[j + k].twoNum++\n                  data[j + b].twoNum = 0\n                  data[j + b].twoAlready = 1\n                } else {\n                  break\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    //第三列与第二列完全一致\n    for (var j = 0; j < data.length; j++) {\n      if (data[j].twoNum > 1) {\n        for (var k = 0; k < data[j].twoNum; k++) {\n          if (data[j + k].threeAlready !== 1) {\n            if (k + 1 < data[j].twoNum) {\n              data[j + k].threeNum = 1\n              for (var b = k + 1; b < data[j].twoNum; b++) {\n                if (data[j + k].jk_count === data[j + b].jk_count) {\n                  data[j + k].threeNum++\n                  data[j + b].threeNum = 0\n                  data[j + b].threeAlready = 1\n                } else {\n                  break\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  mounted () {\n\n  }\n}\n<script>\n```\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果吧，效果杠杠的！！</p>\n\n![](/images/dMergeTable.jpg)\n\n\n","slug":"组件封装/组件封装-2：iview-Table之动态合并单元格","published":1,"updated":"2024-12-02T07:18:03.718Z","_id":"cm46ormsx000o0cnn2bofed7d","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"一、iview-Table之动态合并单元格\"><a href=\"#一、iview-Table之动态合并单元格\" class=\"headerlink\" title=\"一、iview-Table之动态合并单元格\"></a>一、iview-Table之动态合并单元格</h1><h2 id=\"1、普通合并单元格\"><a href=\"#1、普通合并单元格\" class=\"headerlink\" title=\"1、普通合并单元格\"></a>1、普通合并单元格</h2><p>  我们先来看一下简单的合并单元格，也是iview官网给的示例，可以帮助我们理解。通过设置属性span-method可以指定合并行或列的算法，方法传入一个对象，对象里有四个属性,分别是:</p>\n<p>    <strong>row:</strong> 当前行</p>\n<p>    <strong>column:</strong> 当前行</p>\n<p>    <strong>rowIndex:</strong> 当前行</p>\n<p>    <strong>columnIndex:</strong> 当前行</p>\n<p>  该函数可以返回一个包含两个元素的数组，第一个元素代表rowspan,表示合并几行，第二个元素代表colspan表示合并几列。了解了用这个属性，那么怎么用呢，我们来看代码啊，并且对着代码看下效果哦！！</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>Table <span class=\"token operator\">:</span>columns<span class=\"token operator\">=</span><span class=\"token string\">\"columns\"</span> <span class=\"token operator\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"data\"</span> <span class=\"token operator\">:</span>span<span class=\"token operator\">-</span>method<span class=\"token operator\">=</span><span class=\"token string\">\"handleSpan\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Table<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//表头列</span>\n  <span class=\"token literal-property property\">columns</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">&gt;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Date'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'date'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Name'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'name'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Age'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'age'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Address'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'address'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">&gt;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'John Brown'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'New York No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-03'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Jim Green'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'London No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-01'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Joe Black'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'Sydney No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-02'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Jon Snow'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'Ottawa No. 2 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-04'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">handleSpan</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> row<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">,</span> rowIndex<span class=\"token punctuation\">,</span> columnIndex <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">//如果是第一行第一列，则返回[1,2],就是该单元格合并一行，合并两列</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">//因为合并了第一行，第二列的单元格，所以要给这个单元格返回[0,0],就是关闭这个单元格</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">//不同写法但同理，第三行第一列单元格合并两行，合并一列</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">rowspan</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">colspan</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">3</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">//同理，被合并的单元格要置空</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">rowspan</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">colspan</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>  以上就是代码，那我们来看下这个合并后的效果，效果杠杠的！！第一行的前两列合并，第一列的后两行合并。</p>\n\n<p><img src=\"/images/mergeTable.jpg\"></p>\n<h2 id=\"2、复杂合并单元格\"><a href=\"#2、复杂合并单元格\" class=\"headerlink\" title=\"2、复杂合并单元格\"></a>2、复杂合并单元格</h2><p>  以上的情况是非常简单的情景，但是实际情况下，我们总是要根据数据做动态合并的，而且实际情况中是不怎会合并两列的，英语列表头不一样，合并没意义。所以实际中我们总会合并一些特定行，主要就是哪些行数据相同时，我们就给他合并。注意啊，这个时候，我们对数据也是有要求的啊，就是内容相同的数据必须是相邻的行，因为跨行合并是在是没意义。那么，怎么合并呢，合并的方法还是上面那个，只不过我们要对数据做处理，记录每一行的数据相同的我们会给到标志，然后根据这个标志，来决定合并几行。。。</p>\n<p>  这里我还要解释一个情况，就是我们再合并第一列的数据相同的行后，我们再合并第二列的行，这个时候是在第一列行合并的基础上去做的，比如在第二列中相同的数据，但是在第一列中属于不同的合并部分，那么是不让合并的。</p>\n<p style=\"color: red\">  主要看两个函数handleSpan和assembleData，数据是请求过来的，我们拿到数据之后，调用assembleData函数，然后渲染table的时候，table会自己根据handleSpan去渲染。</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>Table <span class=\"token operator\">:</span>columns<span class=\"token operator\">=</span><span class=\"token string\">\"columns\"</span> <span class=\"token operator\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"data\"</span> <span class=\"token operator\">:</span>span<span class=\"token operator\">-</span>method<span class=\"token operator\">=</span><span class=\"token string\">\"handleSpan\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Table<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//表头列就不写了，一样的</span>\n  <span class=\"token literal-property property\">columns</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">&gt;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//数据是请求过来的，也不写了啊</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">&gt;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//这里我们做前三列的行合并</span>\n  <span class=\"token function\">handleSpan</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> row<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">,</span> rowIndex<span class=\"token punctuation\">,</span> columnIndex <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//合并第一列的数据相同行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>columnIndex <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>oneNum\n      <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//合并第二列的数据相同行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>columnIndex <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>twoNum\n      <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//合并第三列的数据相同行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>columnIndex <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>threeNum\n      <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">//做行合并我们需要加标志（oneNum、twoNum、threeNum）</span>\n  <span class=\"token function\">assembleData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//第一列</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">//数据刚来时没有oneAlready的，所以一定会进来</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneAlready <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">//这里加上标志oneNum用于待会判定合并几行</span>\n          data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//这里的testPaperTemplate是表格第一列表头的字段</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>testPaperTemplate <span class=\"token operator\">===</span> data<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>testPaperTemplate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token operator\">++</span>\n              data<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n              data<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneAlready <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">break</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//第二列</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//这里我们依据oneNum做了判断，意思是我们第二列对的行合并要根据第一列的来</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">//twoAlready一样，不会对数据产生影响，只是用来做判断的</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoAlready <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token comment\">//这里加第二列的标志twoNum</span>\n              data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n              <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> b <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token punctuation\">;</span> b<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">//这里的total是表头第二列的字段</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>total <span class=\"token operator\">===</span> data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token operator\">++</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoAlready <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token keyword\">break</span>\n                <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//第三列与第二列完全一致</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeAlready <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n              <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> b <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token punctuation\">;</span> b<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>jk_count <span class=\"token operator\">===</span> data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>jk_count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeNum<span class=\"token operator\">++</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeAlready <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token keyword\">break</span>\n                <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>  以上就是代码，那我们来看下这个合并后的效果吧，效果杠杠的！！</p>\n\n<p><img src=\"/images/dMergeTable.jpg\"></p>\n","excerpt":"","more":"<h1 id=\"一、iview-Table之动态合并单元格\"><a href=\"#一、iview-Table之动态合并单元格\" class=\"headerlink\" title=\"一、iview-Table之动态合并单元格\"></a>一、iview-Table之动态合并单元格</h1><h2 id=\"1、普通合并单元格\"><a href=\"#1、普通合并单元格\" class=\"headerlink\" title=\"1、普通合并单元格\"></a>1、普通合并单元格</h2><p>&emsp;&emsp;我们先来看一下简单的合并单元格，也是iview官网给的示例，可以帮助我们理解。通过设置属性span-method可以指定合并行或列的算法，方法传入一个对象，对象里有四个属性,分别是:</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>row:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>column:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>rowIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>columnIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;该函数可以返回一个包含两个元素的数组，第一个元素代表rowspan,表示合并几行，第二个元素代表colspan表示合并几列。了解了用这个属性，那么怎么用呢，我们来看代码啊，并且对着代码看下效果哦！！</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Table <span class=\"token operator\">:</span>columns<span class=\"token operator\">=</span><span class=\"token string\">\"columns\"</span> <span class=\"token operator\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"data\"</span> <span class=\"token operator\">:</span>span<span class=\"token operator\">-</span>method<span class=\"token operator\">=</span><span class=\"token string\">\"handleSpan\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Table<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//表头列</span>\n  <span class=\"token literal-property property\">columns</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Date'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'date'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Name'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'name'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Age'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'age'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Address'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'address'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'John Brown'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'New York No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-03'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Jim Green'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'London No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-01'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Joe Black'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'Sydney No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-02'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Jon Snow'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'Ottawa No. 2 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-04'</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">handleSpan</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> row<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">,</span> rowIndex<span class=\"token punctuation\">,</span> columnIndex <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//如果是第一行第一列，则返回[1,2],就是该单元格合并一行，合并两列</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//因为合并了第一行，第二列的单元格，所以要给这个单元格返回[0,0],就是关闭这个单元格</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//不同写法但同理，第三行第一列单元格合并两行，合并一列</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">rowspan</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">colspan</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">3</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//同理，被合并的单元格要置空</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">rowspan</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">colspan</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果，效果杠杠的！！第一行的前两列合并，第一列的后两行合并。</p>\n\n<p><img src=\"/images/mergeTable.jpg\"></p>\n<h2 id=\"2、复杂合并单元格\"><a href=\"#2、复杂合并单元格\" class=\"headerlink\" title=\"2、复杂合并单元格\"></a>2、复杂合并单元格</h2><p>&emsp;&emsp;以上的情况是非常简单的情景，但是实际情况下，我们总是要根据数据做动态合并的，而且实际情况中是不怎会合并两列的，英语列表头不一样，合并没意义。所以实际中我们总会合并一些特定行，主要就是哪些行数据相同时，我们就给他合并。注意啊，这个时候，我们对数据也是有要求的啊，就是内容相同的数据必须是相邻的行，因为跨行合并是在是没意义。那么，怎么合并呢，合并的方法还是上面那个，只不过我们要对数据做处理，记录每一行的数据相同的我们会给到标志，然后根据这个标志，来决定合并几行。。。</p>\n<p>&emsp;&emsp;这里我还要解释一个情况，就是我们再合并第一列的数据相同的行后，我们再合并第二列的行，这个时候是在第一列行合并的基础上去做的，比如在第二列中相同的数据，但是在第一列中属于不同的合并部分，那么是不让合并的。</p>\n<p style=\"color: red\">&emsp;&emsp;主要看两个函数handleSpan和assembleData，数据是请求过来的，我们拿到数据之后，调用assembleData函数，然后渲染table的时候，table会自己根据handleSpan去渲染。</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Table <span class=\"token operator\">:</span>columns<span class=\"token operator\">=</span><span class=\"token string\">\"columns\"</span> <span class=\"token operator\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"data\"</span> <span class=\"token operator\">:</span>span<span class=\"token operator\">-</span>method<span class=\"token operator\">=</span><span class=\"token string\">\"handleSpan\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Table<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//表头列就不写了，一样的</span>\n  <span class=\"token literal-property property\">columns</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//数据是请求过来的，也不写了啊</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//这里我们做前三列的行合并</span>\n  <span class=\"token function\">handleSpan</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> row<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">,</span> rowIndex<span class=\"token punctuation\">,</span> columnIndex <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//合并第一列的数据相同行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>columnIndex <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>oneNum\n      <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//合并第二列的数据相同行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>columnIndex <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>twoNum\n      <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//合并第三列的数据相同行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>columnIndex <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>threeNum\n      <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">//做行合并我们需要加标志（oneNum、twoNum、threeNum）</span>\n  <span class=\"token function\">assembleData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//第一列</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//数据刚来时没有oneAlready的，所以一定会进来</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneAlready <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token comment\">//这里加上标志oneNum用于待会判定合并几行</span>\n          data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">//这里的testPaperTemplate是表格第一列表头的字段</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>testPaperTemplate <span class=\"token operator\">===</span> data<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>testPaperTemplate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token operator\">++</span>\n              data<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n              data<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneAlready <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">break</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//第二列</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//这里我们依据oneNum做了判断，意思是我们第二列对的行合并要根据第一列的来</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token comment\">//twoAlready一样，不会对数据产生影响，只是用来做判断的</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoAlready <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token comment\">//这里加第二列的标志twoNum</span>\n              data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n              <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> b <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token punctuation\">;</span> b<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">//这里的total是表头第二列的字段</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>total <span class=\"token operator\">===</span> data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token operator\">++</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoAlready <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                  <span class=\"token keyword\">break</span>\n                <span class=\"token punctuation\">&#125;</span>\n              <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//第三列与第二列完全一致</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeAlready <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n              <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> b <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token punctuation\">;</span> b<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>jk_count <span class=\"token operator\">===</span> data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>jk_count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeNum<span class=\"token operator\">++</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeAlready <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                  <span class=\"token keyword\">break</span>\n                <span class=\"token punctuation\">&#125;</span>\n              <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果吧，效果杠杠的！！</p>\n\n<p><img src=\"/images/dMergeTable.jpg\"></p>\n"},{"title":"一、复制execl批量搜索","date":"2024-10-01T02:53:11.000Z","author":"吴俊杰","top":false,"keywords":["execl","组件封装"],"summary":"工作没多久的时候遇到个需求，需要封装一个搜索框支持execl批量赋值标识实现批量的搜索，记录一下这个封装好的组件......","_content":"\n\n\n# 一、Execl批量导入弹窗\n## 1、自定义封装的弹窗组件\n<p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，组件基于vue2+ts+iview组件库哦</span></p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <div class=\"content\">\n      <ul>\n        <li v-for=\"(item,index) in idetiferList\" :key=\"index\">{{item}}\n          <Icon class=\"icon\" type=\"ios-close-circle\" @click=\"clearItem(index)\"/>\n        </li>\n      </ul>\n    </div>\n    <div class=\"bottom\">\n      <Input class=\"search\" type=\"text\" v-model=\"identifers\" :placeholder=\"`请输入或复制${nameMap[currentTab]}名称或标识，以空格、%、&分隔，最多输入100条`\"/>\n      <Button type=\"primary\"  @click=\"getVerifyData\">\n        <Icon type=\"ios-search\" style=\"font-size: 25px;\"/>\n        <span style=\"font-size: 16px; margin-left: 5px;\">查询</span>\n      </Button>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, Prop, Watch, Emit } from 'vue-property-decorator';\n@Component({\n  components: {\n    \n  }\n})\nexport default class PPrInfo extends Vue {\n\n  @Prop({\n    type: String,\n    default: 'st'\n  })\n  currentTab: string;\n\n  nameMap = {\n    st: '试题',\n    sj: '试卷',\n    dc: '单词',\n    klb: '课例包'\n  }\n\n  @Prop({\n    type: String,\n    default: ''\n  })\n  identifers: string;\n\n  idetiferList:Array<string> = []\n\n  lastOne:boolean = true;\n\n  public clearItem(index:number):void {\n    if(index === this.idetiferList.length - 1) {\n      this.getLastArrOne();\n    }\n    this.idetiferList.splice(index,1);\n    this.identifers = this.idetiferList.join(' ');\n  }\n\n\n  @Emit('getVerifyData')\n  public getVerifyData() {\n    return this.idetiferList;\n  }\n\n  @Watch('identifers', {\n    deep: true,\n    immediate: true\n  })\n  public WatchIdentifer(newValue:any):void {\n    let tempArr = newValue.replace(/%/g,' ').replace(/&/g,' ').split(' ');\n    let queryArr = [];\n    if(tempArr.length) {\n      queryArr = tempArr.filter(item => {\n        return item !== '';\n      })\n      if(queryArr.length) {\n        queryArr = Array.from(new Set(queryArr));\n      }\n    }\n    this.idetiferList = queryArr;\n    this.getArr();\n  }\n\n  @Emit('getLastArrOne')\n  public getLastArrOne() {\n    return false;\n  }\n\n  @Emit('getArr')\n  public getArr() {\n    return this.idetiferList;\n  }\n\n  mounted () {\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.container {\n  width: 1000px;\n  height: 270px;\n  margin: 5px 0 0 90px;\n  border-radius: 5px;\n  box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, .2);\n\n  .content>ul {\n    width: 100%;\n    height: 220px;\n    display: flex;\n    padding-top: 15px;\n    flex-wrap: wrap;\n    justify-content: left;\n    align-items: flex-start;\n    overflow: auto;\n    border-bottom: 1px solid #dcdee2;\n\n    li {\n      width: 188px;\n      height: 50px;\n      margin-left: 10px;\n      padding: 0 10px;\n      line-height: 50px;\n      background-color: #f7fcff;\n      position: relative;\n      border: 1px solid #dcdee2;\n      border-radius: 3px;\n      margin-bottom: 18px;\n      overflow: hidden;\n      text-overflow:ellipsis;\n      white-space:nowrap;\n\n      .icon {\n        font-size: 25px;\n        position: absolute;\n        top: 13px;\n        right: 8px;\n        color: #cbcfd4;\n        cursor: pointer;\n      }\n    }\n  }\n\n  .bottom {\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n    /deep/ .ivu-input {\n      border: 0px solid #dcdee2;\n      width: 880px;\n      height: 40px;\n      font-size: 15px;\n    }\n    /deep/ .ivu-btn {\n      margin-left: 362px;\n      height: 40px;\n      z-index: 100;\n    }\n  }\n}\n</style>\n```\n\n## 2、父组件调用改封装组件\n<p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，当时为了兼容一些样式问题，所以做了一些调整，可能样式会有一点点的小问题，不过很容易改的哦。。</span></p>\n<p>&emsp;&emsp;再提示一个问题，就是mounted里写了监听事件，主要是实现，点击其他空白处关闭该弹窗的功能，当然不要忘记在destoryed钩子里销毁监听事件哦，还有调用改组件时，有很多字段要传，还有一些事件函数也要传，这个就看各位小伙伴实际情况去改了哦。。</p>\n\n```javascript\n<template>\n  <div>\n    <InputModal class=\"input-fixed\" id=\"inputModal\" v-if=\"showInputModal\" :currentTab=\"label\" :identifers=\"name\" \n    @getArr=\"getInputModalArr\" @getVerifyData=\"getTableData\" @getLastArrOne=\"getLastArrOne\"></InputModal>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n    InputModal: () => import('./InputModal.vue')\n  }\n})\n\nexport default class TestCase extends Vue {\n\n  mounted () {\n    window.addEventListener('mousewheel', this.handleScroll);\n      document.addEventListener(\"click\", (e) => {\n        const inputModal = document.getElementById(\"inputModal\")\n        const inputName = document.getElementById(\"inputName\")\n        if (inputModal && inputName) {\n          if (!inputModal.contains((e as any).target) && !inputName.contains((e as any).target) && this.lastArrOne) {\n            this.showInputModal = false;\n          }\n          this.lastArrOne = true;\n        }\n    });\n  }\n\n  destroyed(): void {\n    window.removeEventListener('mousewheel', this.handleScroll);\n  }\n}\n<script>\n```\n\n## 2、父组件调用改封装组件\n<p>&emsp;&emsp;这里展示一下效果：</p>\n\n![](/images/execl.gif)\n","source":"_posts/组件封装/组件封装-1：复制execl批量搜索.md","raw":"---\ntitle: 一、复制execl批量搜索\ndate: 2024-10-01 10:53:11\nauthor: 吴俊杰\ntop: false\nkeywords:\n  - execl\n  - 组件封装\nsummary: 工作没多久的时候遇到个需求，需要封装一个搜索框支持execl批量赋值标识实现批量的搜索，记录一下这个封装好的组件......\ncategories: \n  - 组件封装\ntags:\n  - 组件封装\n  - execl批量搜索\n---\n\n\n\n# 一、Execl批量导入弹窗\n## 1、自定义封装的弹窗组件\n<p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，组件基于vue2+ts+iview组件库哦</span></p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <div class=\"content\">\n      <ul>\n        <li v-for=\"(item,index) in idetiferList\" :key=\"index\">{{item}}\n          <Icon class=\"icon\" type=\"ios-close-circle\" @click=\"clearItem(index)\"/>\n        </li>\n      </ul>\n    </div>\n    <div class=\"bottom\">\n      <Input class=\"search\" type=\"text\" v-model=\"identifers\" :placeholder=\"`请输入或复制${nameMap[currentTab]}名称或标识，以空格、%、&分隔，最多输入100条`\"/>\n      <Button type=\"primary\"  @click=\"getVerifyData\">\n        <Icon type=\"ios-search\" style=\"font-size: 25px;\"/>\n        <span style=\"font-size: 16px; margin-left: 5px;\">查询</span>\n      </Button>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, Prop, Watch, Emit } from 'vue-property-decorator';\n@Component({\n  components: {\n    \n  }\n})\nexport default class PPrInfo extends Vue {\n\n  @Prop({\n    type: String,\n    default: 'st'\n  })\n  currentTab: string;\n\n  nameMap = {\n    st: '试题',\n    sj: '试卷',\n    dc: '单词',\n    klb: '课例包'\n  }\n\n  @Prop({\n    type: String,\n    default: ''\n  })\n  identifers: string;\n\n  idetiferList:Array<string> = []\n\n  lastOne:boolean = true;\n\n  public clearItem(index:number):void {\n    if(index === this.idetiferList.length - 1) {\n      this.getLastArrOne();\n    }\n    this.idetiferList.splice(index,1);\n    this.identifers = this.idetiferList.join(' ');\n  }\n\n\n  @Emit('getVerifyData')\n  public getVerifyData() {\n    return this.idetiferList;\n  }\n\n  @Watch('identifers', {\n    deep: true,\n    immediate: true\n  })\n  public WatchIdentifer(newValue:any):void {\n    let tempArr = newValue.replace(/%/g,' ').replace(/&/g,' ').split(' ');\n    let queryArr = [];\n    if(tempArr.length) {\n      queryArr = tempArr.filter(item => {\n        return item !== '';\n      })\n      if(queryArr.length) {\n        queryArr = Array.from(new Set(queryArr));\n      }\n    }\n    this.idetiferList = queryArr;\n    this.getArr();\n  }\n\n  @Emit('getLastArrOne')\n  public getLastArrOne() {\n    return false;\n  }\n\n  @Emit('getArr')\n  public getArr() {\n    return this.idetiferList;\n  }\n\n  mounted () {\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.container {\n  width: 1000px;\n  height: 270px;\n  margin: 5px 0 0 90px;\n  border-radius: 5px;\n  box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, .2);\n\n  .content>ul {\n    width: 100%;\n    height: 220px;\n    display: flex;\n    padding-top: 15px;\n    flex-wrap: wrap;\n    justify-content: left;\n    align-items: flex-start;\n    overflow: auto;\n    border-bottom: 1px solid #dcdee2;\n\n    li {\n      width: 188px;\n      height: 50px;\n      margin-left: 10px;\n      padding: 0 10px;\n      line-height: 50px;\n      background-color: #f7fcff;\n      position: relative;\n      border: 1px solid #dcdee2;\n      border-radius: 3px;\n      margin-bottom: 18px;\n      overflow: hidden;\n      text-overflow:ellipsis;\n      white-space:nowrap;\n\n      .icon {\n        font-size: 25px;\n        position: absolute;\n        top: 13px;\n        right: 8px;\n        color: #cbcfd4;\n        cursor: pointer;\n      }\n    }\n  }\n\n  .bottom {\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n    /deep/ .ivu-input {\n      border: 0px solid #dcdee2;\n      width: 880px;\n      height: 40px;\n      font-size: 15px;\n    }\n    /deep/ .ivu-btn {\n      margin-left: 362px;\n      height: 40px;\n      z-index: 100;\n    }\n  }\n}\n</style>\n```\n\n## 2、父组件调用改封装组件\n<p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，当时为了兼容一些样式问题，所以做了一些调整，可能样式会有一点点的小问题，不过很容易改的哦。。</span></p>\n<p>&emsp;&emsp;再提示一个问题，就是mounted里写了监听事件，主要是实现，点击其他空白处关闭该弹窗的功能，当然不要忘记在destoryed钩子里销毁监听事件哦，还有调用改组件时，有很多字段要传，还有一些事件函数也要传，这个就看各位小伙伴实际情况去改了哦。。</p>\n\n```javascript\n<template>\n  <div>\n    <InputModal class=\"input-fixed\" id=\"inputModal\" v-if=\"showInputModal\" :currentTab=\"label\" :identifers=\"name\" \n    @getArr=\"getInputModalArr\" @getVerifyData=\"getTableData\" @getLastArrOne=\"getLastArrOne\"></InputModal>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n    InputModal: () => import('./InputModal.vue')\n  }\n})\n\nexport default class TestCase extends Vue {\n\n  mounted () {\n    window.addEventListener('mousewheel', this.handleScroll);\n      document.addEventListener(\"click\", (e) => {\n        const inputModal = document.getElementById(\"inputModal\")\n        const inputName = document.getElementById(\"inputName\")\n        if (inputModal && inputName) {\n          if (!inputModal.contains((e as any).target) && !inputName.contains((e as any).target) && this.lastArrOne) {\n            this.showInputModal = false;\n          }\n          this.lastArrOne = true;\n        }\n    });\n  }\n\n  destroyed(): void {\n    window.removeEventListener('mousewheel', this.handleScroll);\n  }\n}\n<script>\n```\n\n## 2、父组件调用改封装组件\n<p>&emsp;&emsp;这里展示一下效果：</p>\n\n![](/images/execl.gif)\n","slug":"组件封装/组件封装-1：复制execl批量搜索","published":1,"updated":"2024-12-02T07:16:24.846Z","_id":"cm46ormsy000p0cnnghsa1nfi","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"一、Execl批量导入弹窗\"><a href=\"#一、Execl批量导入弹窗\" class=\"headerlink\" title=\"一、Execl批量导入弹窗\"></a>一、Execl批量导入弹窗</h1><h2 id=\"1、自定义封装的弹窗组件\"><a href=\"#1、自定义封装的弹窗组件\" class=\"headerlink\" title=\"1、自定义封装的弹窗组件\"></a>1、自定义封装的弹窗组件</h2><p>  啥也不说了，拿来就用，看代码</p>\n<p>  <span style=\"color: red\">温馨提示哦，组件基于vue2+ts+iview组件库哦</span></p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"content\"</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>li v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(item,index) in idetiferList\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span>Icon <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"icon\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"ios-close-circle\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"clearItem(index)\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"bottom\"</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>Input <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"search\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"identifers\"</span> <span class=\"token operator\">:</span>placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"`请输入或复制${nameMap[currentTab]}名称或标识，以空格、%、&amp;分隔，最多输入100条`\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>Button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span>  @click<span class=\"token operator\">=</span><span class=\"token string\">\"getVerifyData\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>Icon type<span class=\"token operator\">=</span><span class=\"token string\">\"ios-search\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"font-size: 25px;\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>span style<span class=\"token operator\">=</span><span class=\"token string\">\"font-size: 16px; margin-left: 5px;\"</span><span class=\"token operator\">&gt;</span>查询<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Prop<span class=\"token punctuation\">,</span> Watch<span class=\"token punctuation\">,</span> Emit <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    \n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PPrInfo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'st'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">currentTab</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n\n  nameMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">st</span><span class=\"token operator\">:</span> <span class=\"token string\">'试题'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">sj</span><span class=\"token operator\">:</span> <span class=\"token string\">'试卷'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">dc</span><span class=\"token operator\">:</span> <span class=\"token string\">'单词'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">klb</span><span class=\"token operator\">:</span> <span class=\"token string\">'课例包'</span>\n  <span class=\"token punctuation\">}</span>\n\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">identifers</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n\n  <span class=\"token literal-property property\">idetiferList</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token literal-property property\">lastOne</span><span class=\"token operator\">:</span>boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">clearItem</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">:</span>number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLastArrOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>identifers <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n\n  @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getVerifyData'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getVerifyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'identifers'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">WatchIdentifer</span><span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span>any<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> tempArr <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">%</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> queryArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tempArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      queryArr <span class=\"token operator\">=</span> tempArr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> item <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>queryArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        queryArr <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span>queryArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList <span class=\"token operator\">=</span> queryArr<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getLastArrOne'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getLastArrOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getArr'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>style lang<span class=\"token operator\">=</span><span class=\"token string\">\"less\"</span> scoped<span class=\"token operator\">&gt;</span>\n<span class=\"token punctuation\">.</span>container <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 1000px<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 270px<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">margin</span><span class=\"token operator\">:</span> 5px <span class=\"token number\">0</span> <span class=\"token number\">0</span> 90px<span class=\"token punctuation\">;</span>\n  border<span class=\"token operator\">-</span>radius<span class=\"token operator\">:</span> 5px<span class=\"token punctuation\">;</span>\n  box<span class=\"token operator\">-</span>shadow<span class=\"token operator\">:</span> 0px 0px 7px 0px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">.</span>content<span class=\"token operator\">&gt;</span>ul <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 220px<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span>\n    padding<span class=\"token operator\">-</span>top<span class=\"token operator\">:</span> 15px<span class=\"token punctuation\">;</span>\n    flex<span class=\"token operator\">-</span>wrap<span class=\"token operator\">:</span> wrap<span class=\"token punctuation\">;</span>\n    justify<span class=\"token operator\">-</span>content<span class=\"token operator\">:</span> left<span class=\"token punctuation\">;</span>\n    align<span class=\"token operator\">-</span>items<span class=\"token operator\">:</span> flex<span class=\"token operator\">-</span>start<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">overflow</span><span class=\"token operator\">:</span> auto<span class=\"token punctuation\">;</span>\n    border<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 1px solid #dcdee2<span class=\"token punctuation\">;</span>\n\n    li <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 188px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 50px<span class=\"token punctuation\">;</span>\n      margin<span class=\"token operator\">-</span>left<span class=\"token operator\">:</span> 10px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> 10px<span class=\"token punctuation\">;</span>\n      line<span class=\"token operator\">-</span>height<span class=\"token operator\">:</span> 50px<span class=\"token punctuation\">;</span>\n      background<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span> #f7fcff<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> relative<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> 1px solid #dcdee2<span class=\"token punctuation\">;</span>\n      border<span class=\"token operator\">-</span>radius<span class=\"token operator\">:</span> 3px<span class=\"token punctuation\">;</span>\n      margin<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 18px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">overflow</span><span class=\"token operator\">:</span> hidden<span class=\"token punctuation\">;</span>\n      text<span class=\"token operator\">-</span>overflow<span class=\"token operator\">:</span>ellipsis<span class=\"token punctuation\">;</span>\n      white<span class=\"token operator\">-</span>space<span class=\"token operator\">:</span>nowrap<span class=\"token punctuation\">;</span>\n\n      <span class=\"token punctuation\">.</span>icon <span class=\"token punctuation\">{</span>\n        font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 25px<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> absolute<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> 13px<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">right</span><span class=\"token operator\">:</span> 8px<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> #cbcfd4<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">cursor</span><span class=\"token operator\">:</span> pointer<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token punctuation\">.</span>bottom <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 50px<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span>\n    align<span class=\"token operator\">-</span>items<span class=\"token operator\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> 10px<span class=\"token punctuation\">;</span>\n    <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">deep</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">.</span>ivu<span class=\"token operator\">-</span>input <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> 0px solid #dcdee2<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 880px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 40px<span class=\"token punctuation\">;</span>\n      font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 15px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">deep</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">.</span>ivu<span class=\"token operator\">-</span>btn <span class=\"token punctuation\">{</span>\n      margin<span class=\"token operator\">-</span>left<span class=\"token operator\">:</span> 362px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 40px<span class=\"token punctuation\">;</span>\n      z<span class=\"token operator\">-</span>index<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2、父组件调用改封装组件\"><a href=\"#2、父组件调用改封装组件\" class=\"headerlink\" title=\"2、父组件调用改封装组件\"></a>2、父组件调用改封装组件</h2><p>  啥也不说了，拿来就用，看代码</p>\n<p>  <span style=\"color: red\">温馨提示哦，当时为了兼容一些样式问题，所以做了一些调整，可能样式会有一点点的小问题，不过很容易改的哦。。</span></p>\n<p>  再提示一个问题，就是mounted里写了监听事件，主要是实现，点击其他空白处关闭该弹窗的功能，当然不要忘记在destoryed钩子里销毁监听事件哦，还有调用改组件时，有很多字段要传，还有一些事件函数也要传，这个就看各位小伙伴实际情况去改了哦。。</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>InputModal <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"input-fixed\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"inputModal\"</span> v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"showInputModal\"</span> <span class=\"token operator\">:</span>currentTab<span class=\"token operator\">=</span><span class=\"token string\">\"label\"</span> <span class=\"token operator\">:</span>identifers<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> \n    @getArr<span class=\"token operator\">=</span><span class=\"token string\">\"getInputModalArr\"</span> @getVerifyData<span class=\"token operator\">=</span><span class=\"token string\">\"getTableData\"</span> @getLastArrOne<span class=\"token operator\">=</span><span class=\"token string\">\"getLastArrOne\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>InputModal<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">InputModal</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./InputModal.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousewheel'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> inputModal <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inputModal\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> inputName <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inputName\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>inputModal <span class=\"token operator\">&amp;&amp;</span> inputName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>inputModal<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>inputName<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastArrOne<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>showInputModal <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastArrOne <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">destroyed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousewheel'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2、父组件调用改封装组件-1\"><a href=\"#2、父组件调用改封装组件-1\" class=\"headerlink\" title=\"2、父组件调用改封装组件\"></a>2、父组件调用改封装组件</h2><p>  这里展示一下效果：</p>\n\n<p><img src=\"/images/execl.gif\"></p>\n","excerpt":"","more":"<h1 id=\"一、Execl批量导入弹窗\"><a href=\"#一、Execl批量导入弹窗\" class=\"headerlink\" title=\"一、Execl批量导入弹窗\"></a>一、Execl批量导入弹窗</h1><h2 id=\"1、自定义封装的弹窗组件\"><a href=\"#1、自定义封装的弹窗组件\" class=\"headerlink\" title=\"1、自定义封装的弹窗组件\"></a>1、自定义封装的弹窗组件</h2><p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，组件基于vue2+ts+iview组件库哦</span></p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"content\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(item,index) in idetiferList\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>item<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n          <span class=\"token operator\">&lt;</span>Icon <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"icon\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"ios-close-circle\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"clearItem(index)\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"bottom\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Input <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"search\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"identifers\"</span> <span class=\"token operator\">:</span>placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"`请输入或复制$&#123;nameMap[currentTab]&#125;名称或标识，以空格、%、&amp;分隔，最多输入100条`\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span>  @click<span class=\"token operator\">=</span><span class=\"token string\">\"getVerifyData\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Icon type<span class=\"token operator\">=</span><span class=\"token string\">\"ios-search\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"font-size: 25px;\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>span style<span class=\"token operator\">=</span><span class=\"token string\">\"font-size: 16px; margin-left: 5px;\"</span><span class=\"token operator\">></span>查询<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Prop<span class=\"token punctuation\">,</span> Watch<span class=\"token punctuation\">,</span> Emit <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    \n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PPrInfo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'st'</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">currentTab</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n\n  nameMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">st</span><span class=\"token operator\">:</span> <span class=\"token string\">'试题'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">sj</span><span class=\"token operator\">:</span> <span class=\"token string\">'试卷'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">dc</span><span class=\"token operator\">:</span> <span class=\"token string\">'单词'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">klb</span><span class=\"token operator\">:</span> <span class=\"token string\">'课例包'</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">identifers</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n\n  <span class=\"token literal-property property\">idetiferList</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token literal-property property\">lastOne</span><span class=\"token operator\">:</span>boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">clearItem</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">:</span>number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLastArrOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>identifers <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n\n  @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getVerifyData'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getVerifyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  @<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'identifers'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">WatchIdentifer</span><span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span>any<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> tempArr <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">%</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> queryArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tempArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      queryArr <span class=\"token operator\">=</span> tempArr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> item <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>queryArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        queryArr <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span>queryArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList <span class=\"token operator\">=</span> queryArr<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getLastArrOne'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getLastArrOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getArr'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style lang<span class=\"token operator\">=</span><span class=\"token string\">\"less\"</span> scoped<span class=\"token operator\">></span>\n<span class=\"token punctuation\">.</span>container <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 1000px<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 270px<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">margin</span><span class=\"token operator\">:</span> 5px <span class=\"token number\">0</span> <span class=\"token number\">0</span> 90px<span class=\"token punctuation\">;</span>\n  border<span class=\"token operator\">-</span>radius<span class=\"token operator\">:</span> 5px<span class=\"token punctuation\">;</span>\n  box<span class=\"token operator\">-</span>shadow<span class=\"token operator\">:</span> 0px 0px 7px 0px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">.</span>content<span class=\"token operator\">></span>ul <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 220px<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span>\n    padding<span class=\"token operator\">-</span>top<span class=\"token operator\">:</span> 15px<span class=\"token punctuation\">;</span>\n    flex<span class=\"token operator\">-</span>wrap<span class=\"token operator\">:</span> wrap<span class=\"token punctuation\">;</span>\n    justify<span class=\"token operator\">-</span>content<span class=\"token operator\">:</span> left<span class=\"token punctuation\">;</span>\n    align<span class=\"token operator\">-</span>items<span class=\"token operator\">:</span> flex<span class=\"token operator\">-</span>start<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">overflow</span><span class=\"token operator\">:</span> auto<span class=\"token punctuation\">;</span>\n    border<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 1px solid #dcdee2<span class=\"token punctuation\">;</span>\n\n    li <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 188px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 50px<span class=\"token punctuation\">;</span>\n      margin<span class=\"token operator\">-</span>left<span class=\"token operator\">:</span> 10px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> 10px<span class=\"token punctuation\">;</span>\n      line<span class=\"token operator\">-</span>height<span class=\"token operator\">:</span> 50px<span class=\"token punctuation\">;</span>\n      background<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span> #f7fcff<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> relative<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> 1px solid #dcdee2<span class=\"token punctuation\">;</span>\n      border<span class=\"token operator\">-</span>radius<span class=\"token operator\">:</span> 3px<span class=\"token punctuation\">;</span>\n      margin<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 18px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">overflow</span><span class=\"token operator\">:</span> hidden<span class=\"token punctuation\">;</span>\n      text<span class=\"token operator\">-</span>overflow<span class=\"token operator\">:</span>ellipsis<span class=\"token punctuation\">;</span>\n      white<span class=\"token operator\">-</span>space<span class=\"token operator\">:</span>nowrap<span class=\"token punctuation\">;</span>\n\n      <span class=\"token punctuation\">.</span>icon <span class=\"token punctuation\">&#123;</span>\n        font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 25px<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> absolute<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> 13px<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">right</span><span class=\"token operator\">:</span> 8px<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> #cbcfd4<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">cursor</span><span class=\"token operator\">:</span> pointer<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token punctuation\">.</span>bottom <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 50px<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span>\n    align<span class=\"token operator\">-</span>items<span class=\"token operator\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> 10px<span class=\"token punctuation\">;</span>\n    <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">deep</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">.</span>ivu<span class=\"token operator\">-</span>input <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> 0px solid #dcdee2<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 880px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 40px<span class=\"token punctuation\">;</span>\n      font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 15px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">deep</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">.</span>ivu<span class=\"token operator\">-</span>btn <span class=\"token punctuation\">&#123;</span>\n      margin<span class=\"token operator\">-</span>left<span class=\"token operator\">:</span> 362px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 40px<span class=\"token punctuation\">;</span>\n      z<span class=\"token operator\">-</span>index<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2、父组件调用改封装组件\"><a href=\"#2、父组件调用改封装组件\" class=\"headerlink\" title=\"2、父组件调用改封装组件\"></a>2、父组件调用改封装组件</h2><p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，当时为了兼容一些样式问题，所以做了一些调整，可能样式会有一点点的小问题，不过很容易改的哦。。</span></p>\n<p>&emsp;&emsp;再提示一个问题，就是mounted里写了监听事件，主要是实现，点击其他空白处关闭该弹窗的功能，当然不要忘记在destoryed钩子里销毁监听事件哦，还有调用改组件时，有很多字段要传，还有一些事件函数也要传，这个就看各位小伙伴实际情况去改了哦。。</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>InputModal <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"input-fixed\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"inputModal\"</span> v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"showInputModal\"</span> <span class=\"token operator\">:</span>currentTab<span class=\"token operator\">=</span><span class=\"token string\">\"label\"</span> <span class=\"token operator\">:</span>identifers<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> \n    @getArr<span class=\"token operator\">=</span><span class=\"token string\">\"getInputModalArr\"</span> @getVerifyData<span class=\"token operator\">=</span><span class=\"token string\">\"getTableData\"</span> @getLastArrOne<span class=\"token operator\">=</span><span class=\"token string\">\"getLastArrOne\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>InputModal<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">InputModal</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./InputModal.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousewheel'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> inputModal <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inputModal\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> inputName <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inputName\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>inputModal <span class=\"token operator\">&amp;&amp;</span> inputName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>inputModal<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>inputName<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastArrOne<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>showInputModal <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastArrOne <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">destroyed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousewheel'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2、父组件调用改封装组件-1\"><a href=\"#2、父组件调用改封装组件-1\" class=\"headerlink\" title=\"2、父组件调用改封装组件\"></a>2、父组件调用改封装组件</h2><p>&emsp;&emsp;这里展示一下效果：</p>\n\n<p><img src=\"/images/execl.gif\"></p>\n"},{"title":"三、基于wavesurfer封装可视化音标标注组件","date":"2024-10-02T00:56:28.000Z","author":"吴俊杰","top":false,"keywords":["wavesurfer","regions","音频剪辑"],"summary":"这个比较难，需要实现一个模拟在线音频剪辑的组件，展示波形，同时记录截切的选区，最后把时间传给后端后端实现音频剪辑......","_content":"\n\n\n# 一、基于wavesurfer，regions封装的可视化音标标注控件\n\n## 1、简单介绍\n<p>&emsp;&emsp;基于wavesurfer，regions 封装的可视化音标标注控件。。。。这个案例是公司大佬写的博客，我抄过来，免得以后链接失效，哈哈哈哈哈啊哈。。。。</p>\n\n## 2、基本流程\n### 2.1、先简单看下效果\n<p>1、将一段声频以波形展示在页面上，支持播放/暂停、重放、停止、点击跳转播放</p>\n\n![](/images/wavesurfer_1.gif)\n\n<p>2、支持渲染区域，支持用户手动选择区域和删除区域，支持拖动区域和调整区域大小；当操作区域时，最好能实时循环播放区域</p>\n\n![](/images/wavesurfer_2.gif)\n\n<p>3、点击区域时循环播放本区域，点击区域外时正常播放至结束</p>\n\n![](/images/wavesurfer_3.gif)\n\n### 2.2、Vue实现\n\n```javascript\n<template>\n  <div>\n    <div ref=\"waveformRef\"></div>\n    <div ref=\"waveTimelineRef\"></div>\n    <el-button type=\"primary\" @click=\"wavesurfer.skip(-3)\">后退</el-button>\n    <el-button type=\"primary\" @click=\"wavesurfer.playPause()\">\n      <i class=\"el-icon-video-play\" />\n      播放 / 暂停\n    </el-button> <el-button type=\"primary\" @click=\"wavesurfer.skip(3)\">前进</el-button>\n    <el-button type=\"primary\" @click=\"rebroadcast\">重放</el-button>\n    <el-button type=\"primary\" @click=\"handleStop\">停止</el-button>\n    <el-button @click=\"getRegions\">打印区域</el-button>\n  </div>\n</template>\n \n<script>\nimport WaveSurfer from 'wavesurfer.js'\nimport Region from 'wavesurfer.js/dist/plugin/wavesurfer.regions'\nimport Cursor from 'wavesurfer.js/dist/plugin/wavesurfer.cursor'\nimport Timeline from 'wavesurfer.js/dist/plugin/wavesurfer.timeline'\n\nexport default {\n  props: ['voiceSrc'],\n  data() {\n    return { wavesurfer: null }\n  },\n  mounted() {\n    this.init()\n  },\n  beforeDestroy() {\n    this.wavesurfer && this.wavesurfer.destroy()\n    this.wavesurfer = null\n  },\n  methods: {\n    init() {\n      const container = this.$refs.waveformRef\n      container.addEventListener('click', () => {\n        console.log('点击容器')\n        this.clearLoop()\n      })\n      this.wavesurfer = WaveSurfer.create({\n        container, // 容器，唯一一个必须参数\n        cursorColor: 'red', // 音频光标颜色\n        waveColor: '#ddd', // 波形颜色\n        progressColor: '#bbb', // 已完成播放的波形颜色 当progressColor和waveColor相同时，完全不渲染进度波\n        backend: 'MediaElement',\n        autoCenter: false,\n        plugins: [\n          Region.create({\n            // regionsMinLength: 1.5,\n            regions: [\n              { start: 1, end: 3, color: 'hsla(400, 100%, 30%, 0.5)' },\n              { start: 5, end: 7, color: 'hsla(200, 50%, 70%, 0.4)' }\n            ],\n            dragSelection: true,\n          }),\n          Cursor.create({\n            showTime: true,\n            opacity: 1,\n            customShowTimeStyle: { 'background-color': '#000', color: '#fff', padding: '2px', 'font-size': '10px' }\n          }),\n          Timeline.create({ container: this.$refs.waveTimelineRef })\n        ]\n      })\n\n      this.wavesurfer.load(this.voiceSrc) // 加载音频url\n\n      // 点击区域\n      this.wavesurfer.on('region-click', (region) => {\n        const timer = setTimeout(() => {\n          console.log('定时器')\n          region.playLoop()\n        })\n        this.$once('hook:beforeDestroy', () => {\n          clearTimeout(timer)\n          timer = null\n        })\n      })\n\n      // 完成拖动或者完成大小调整时触发\n      this.wavesurfer.on('region-update-end', (region) => {\n        region.playLoop() // 循环播放选中区域\n        this.createDeleteButton(region)\n      })\n\n      this.wavesurfer.on('ready', () => {\n        // 为区域追加一个删除按钮\n        const regionList = Object.values(this.wavesurfer.regions.list)\n        for (const region of regionList) {\n          this.createDeleteButton(region)\n        }\n      })\n    },\n    // 格式化时间\n    formatTime(seconds) {\n      seconds = Number(seconds)\n      const minutes = Math.floor(seconds / 60)\n      seconds = seconds % 60\n      const secondsStr = Math.round(seconds).toString()\n      secondsStr = seconds.toFixed(2)\n      if (minutes > 0) {\n        return `${minutes < 10 ? '0' + minutes : minutes}:${seconds < 10 ? '0' + secondsStr : secondsStr}`\n      }\n      return `00:${seconds < 10 ? '0' + secondsStr : secondsStr}`\n    },\n    // 给区域创建删除按钮\n    createDeleteButton(region) {\n      if (!region.hasDeleteButton) {\n        const deleteButton = region.element.appendChild(document.createElement('button'))\n        deleteButton.innerText = '删除'\n        deleteButton.addEventListener('click', (e) => {\n          e.stopPropagation()\n          this.$confirm('确认删除此区域嘛?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => { region.remove() }).catch(() => { })\n        })\n        const css = { float: 'right', position: 'relative', cursor: 'pointer', color: 'red' }\n        region.style(deleteButton, css)\n        region.hasDeleteButton = true\n      }\n    },\n    // 获取区域列表\n    getRegions() {\n      const regionList = Object.values(this.wavesurfer.regions.list)\n      console.log(regionList)\n    },\n    // 重放\n    rebroadcast() {\n      this.clearLoop()\n      this.wavesurfer.play(0)\n    },\n    // 停止\n    handleStop() {\n      this.clearLoop()\n      this.wavesurfer.stop()\n    },\n    // 设置每个区域的loop为false\n    clearLoop() {\n      const regionList = Object.values(this.wavesurfer.regions.list)\n      for (const item of regionList) item.loop = false\n    }\n  }\n}\n</script>\n```\n\n### 2.3、重点描述\n#### 2.3.1、实例方法\n<p>&emsp;&emsp;playPause 暂停时播放，播放时暂停；play(0) 从0开始播放；stop() 停止；skip() 正数为前进，负数为后退！</p>\n\n#### 2.3.2、区域的删除按钮怎么添加的\n<p>&emsp;&emsp;createDeleteButton函数用于创建button按钮，region.element可以用来appendChild节点；监听ready事件，这里可以获取到已有的区域列表，循环添加按钮；新添加的区域，会触发region-update-end事件，回调函数的参数是region，这里可以再次调用createDeleteButton函数。</p>\n\n#### 2.3.3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\n<p>&emsp;&emsp;调用region.playLoop()即可！</p>\n\n#### 2.3.4、点击区域时循环播放本区域，点击区域外时正常播放至结束\n<p>&emsp;&emsp;clearLoop函数用于将每个区域中的loop设置为false，playLoop方法会将当前区域的loop设置为true；当点击区域外时，我在container的click事件回调中调用clearLoop，这样就可以正常播放至结束；当点击区域时，在定时器中调用playLoop方法，便又可以循环播放本区域。</p>\n\n### 2.4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\n#### 2.4.1、先看效果\n![](/images/wavesurfer_4.gif)\n\n#### 2.4.2、代码实现\n<p>&emsp;&emsp;还是在region-update-end事件中处理！</p>\n\n```javascript\n// 完成拖动或者完成大小调整时触发\nthis.wavesurfer.on('region-update-end', (region) => {\n  // region.playLoop() // 循环播放选中区域\n  this.createDeleteButton(region);\n\n  const { prevElement, nextElement, prevRegionId, nextRegionId } = this.getPrevAndNextElement(region) // 获取相邻的两个节点\n  if (prevElement && prevElement.className === 'wavesurfer-region') { // 和前一个dom对齐\n    const prevRegion = this.getRegion(prevRegionId)\n    if (region.start < prevRegion.end) {\n      prevRegion.update({ start: prevRegion.start, end: region.start })\n    }\n  }\n  \n  if (nextElement && nextElement.className === 'wavesurfer-region') { // 和后一个dom对齐\n    const nextRegion = this.getRegion(nextRegionId)\n    if (region.end > nextRegion.start) {\n      nextRegion.update({ start: region.end, end: nextRegion.end })\n    }\n  }\n})\n\n\n// 根据区域id，获取区域实例\ngetRegion(id) {\n  return this.wavesurfer.regions.list[id]\n},\n// 获取当前region的上一个region和下一个region\ngetPrevAndNextElement(currentRegion) {\n  const regionList = Object.entries(this.wavesurfer.regions.list)\n  const prevList = [], nextList = []\n  for (const [key, region] of regionList) {\n    if (key !== currentRegion.id) {\n      if (region.start < currentRegion.start) {\n        prevList.push({ key, val: currentRegion.start - region.start })\n      } else {\n        nextList.push({ key, val: region.end - currentRegion.end })\n      }\n    }\n  }\n  const prevListSort = this.sortArr(prevList, 'val'), nextListSort = this.sortArr(nextList, 'val') // 排序后的prevList和nextList\n  const prevRegionId = prevListSort ? prevListSort[0].key : null\n  const nextRegionId = nextListSort ? nextListSort[0].key : null\n  const regionDOMList = Array.from(document.querySelectorAll('.wavesurfer-region'))\n  const prevElement = regionDOMList.find(regionDOM => regionDOM.getAttribute('data-id') === prevRegionId)\n  const nextElement = regionDOMList.find(regionDOM => regionDOM.getAttribute('data-id') === nextRegionId)\n  return { prevRegionId, nextRegionId, prevElement, nextElement }\n},\n// 数组对象根据指定属性值进行升序排序\nsortArr(list, property) {\n  if (list.length) {\n    return [...list].sort((a, b) => a[property] - b[property])\n  } else {\n    return null\n  }\n},\n\n```\n\n### 注意：需要提前引入wavesurfer、wavesurfer.regions 两个文件","source":"_posts/组件封装/组件封装-3：基于wavesurfer封装可视化音标标注组件.md","raw":"---\ntitle: 三、基于wavesurfer封装可视化音标标注组件\ndate: 2024-10-02 08:56:28\nauthor: 吴俊杰\ntop: false\nkeywords:\n  - wavesurfer\n  - regions\n  - 音频剪辑\nsummary: 这个比较难，需要实现一个模拟在线音频剪辑的组件，展示波形，同时记录截切的选区，最后把时间传给后端后端实现音频剪辑......\ncategories: \n  - 组件封装\ntags:\n  - wavesurfer\n  - regions\n  - 音频剪辑\n---\n\n\n\n# 一、基于wavesurfer，regions封装的可视化音标标注控件\n\n## 1、简单介绍\n<p>&emsp;&emsp;基于wavesurfer，regions 封装的可视化音标标注控件。。。。这个案例是公司大佬写的博客，我抄过来，免得以后链接失效，哈哈哈哈哈啊哈。。。。</p>\n\n## 2、基本流程\n### 2.1、先简单看下效果\n<p>1、将一段声频以波形展示在页面上，支持播放/暂停、重放、停止、点击跳转播放</p>\n\n![](/images/wavesurfer_1.gif)\n\n<p>2、支持渲染区域，支持用户手动选择区域和删除区域，支持拖动区域和调整区域大小；当操作区域时，最好能实时循环播放区域</p>\n\n![](/images/wavesurfer_2.gif)\n\n<p>3、点击区域时循环播放本区域，点击区域外时正常播放至结束</p>\n\n![](/images/wavesurfer_3.gif)\n\n### 2.2、Vue实现\n\n```javascript\n<template>\n  <div>\n    <div ref=\"waveformRef\"></div>\n    <div ref=\"waveTimelineRef\"></div>\n    <el-button type=\"primary\" @click=\"wavesurfer.skip(-3)\">后退</el-button>\n    <el-button type=\"primary\" @click=\"wavesurfer.playPause()\">\n      <i class=\"el-icon-video-play\" />\n      播放 / 暂停\n    </el-button> <el-button type=\"primary\" @click=\"wavesurfer.skip(3)\">前进</el-button>\n    <el-button type=\"primary\" @click=\"rebroadcast\">重放</el-button>\n    <el-button type=\"primary\" @click=\"handleStop\">停止</el-button>\n    <el-button @click=\"getRegions\">打印区域</el-button>\n  </div>\n</template>\n \n<script>\nimport WaveSurfer from 'wavesurfer.js'\nimport Region from 'wavesurfer.js/dist/plugin/wavesurfer.regions'\nimport Cursor from 'wavesurfer.js/dist/plugin/wavesurfer.cursor'\nimport Timeline from 'wavesurfer.js/dist/plugin/wavesurfer.timeline'\n\nexport default {\n  props: ['voiceSrc'],\n  data() {\n    return { wavesurfer: null }\n  },\n  mounted() {\n    this.init()\n  },\n  beforeDestroy() {\n    this.wavesurfer && this.wavesurfer.destroy()\n    this.wavesurfer = null\n  },\n  methods: {\n    init() {\n      const container = this.$refs.waveformRef\n      container.addEventListener('click', () => {\n        console.log('点击容器')\n        this.clearLoop()\n      })\n      this.wavesurfer = WaveSurfer.create({\n        container, // 容器，唯一一个必须参数\n        cursorColor: 'red', // 音频光标颜色\n        waveColor: '#ddd', // 波形颜色\n        progressColor: '#bbb', // 已完成播放的波形颜色 当progressColor和waveColor相同时，完全不渲染进度波\n        backend: 'MediaElement',\n        autoCenter: false,\n        plugins: [\n          Region.create({\n            // regionsMinLength: 1.5,\n            regions: [\n              { start: 1, end: 3, color: 'hsla(400, 100%, 30%, 0.5)' },\n              { start: 5, end: 7, color: 'hsla(200, 50%, 70%, 0.4)' }\n            ],\n            dragSelection: true,\n          }),\n          Cursor.create({\n            showTime: true,\n            opacity: 1,\n            customShowTimeStyle: { 'background-color': '#000', color: '#fff', padding: '2px', 'font-size': '10px' }\n          }),\n          Timeline.create({ container: this.$refs.waveTimelineRef })\n        ]\n      })\n\n      this.wavesurfer.load(this.voiceSrc) // 加载音频url\n\n      // 点击区域\n      this.wavesurfer.on('region-click', (region) => {\n        const timer = setTimeout(() => {\n          console.log('定时器')\n          region.playLoop()\n        })\n        this.$once('hook:beforeDestroy', () => {\n          clearTimeout(timer)\n          timer = null\n        })\n      })\n\n      // 完成拖动或者完成大小调整时触发\n      this.wavesurfer.on('region-update-end', (region) => {\n        region.playLoop() // 循环播放选中区域\n        this.createDeleteButton(region)\n      })\n\n      this.wavesurfer.on('ready', () => {\n        // 为区域追加一个删除按钮\n        const regionList = Object.values(this.wavesurfer.regions.list)\n        for (const region of regionList) {\n          this.createDeleteButton(region)\n        }\n      })\n    },\n    // 格式化时间\n    formatTime(seconds) {\n      seconds = Number(seconds)\n      const minutes = Math.floor(seconds / 60)\n      seconds = seconds % 60\n      const secondsStr = Math.round(seconds).toString()\n      secondsStr = seconds.toFixed(2)\n      if (minutes > 0) {\n        return `${minutes < 10 ? '0' + minutes : minutes}:${seconds < 10 ? '0' + secondsStr : secondsStr}`\n      }\n      return `00:${seconds < 10 ? '0' + secondsStr : secondsStr}`\n    },\n    // 给区域创建删除按钮\n    createDeleteButton(region) {\n      if (!region.hasDeleteButton) {\n        const deleteButton = region.element.appendChild(document.createElement('button'))\n        deleteButton.innerText = '删除'\n        deleteButton.addEventListener('click', (e) => {\n          e.stopPropagation()\n          this.$confirm('确认删除此区域嘛?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => { region.remove() }).catch(() => { })\n        })\n        const css = { float: 'right', position: 'relative', cursor: 'pointer', color: 'red' }\n        region.style(deleteButton, css)\n        region.hasDeleteButton = true\n      }\n    },\n    // 获取区域列表\n    getRegions() {\n      const regionList = Object.values(this.wavesurfer.regions.list)\n      console.log(regionList)\n    },\n    // 重放\n    rebroadcast() {\n      this.clearLoop()\n      this.wavesurfer.play(0)\n    },\n    // 停止\n    handleStop() {\n      this.clearLoop()\n      this.wavesurfer.stop()\n    },\n    // 设置每个区域的loop为false\n    clearLoop() {\n      const regionList = Object.values(this.wavesurfer.regions.list)\n      for (const item of regionList) item.loop = false\n    }\n  }\n}\n</script>\n```\n\n### 2.3、重点描述\n#### 2.3.1、实例方法\n<p>&emsp;&emsp;playPause 暂停时播放，播放时暂停；play(0) 从0开始播放；stop() 停止；skip() 正数为前进，负数为后退！</p>\n\n#### 2.3.2、区域的删除按钮怎么添加的\n<p>&emsp;&emsp;createDeleteButton函数用于创建button按钮，region.element可以用来appendChild节点；监听ready事件，这里可以获取到已有的区域列表，循环添加按钮；新添加的区域，会触发region-update-end事件，回调函数的参数是region，这里可以再次调用createDeleteButton函数。</p>\n\n#### 2.3.3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\n<p>&emsp;&emsp;调用region.playLoop()即可！</p>\n\n#### 2.3.4、点击区域时循环播放本区域，点击区域外时正常播放至结束\n<p>&emsp;&emsp;clearLoop函数用于将每个区域中的loop设置为false，playLoop方法会将当前区域的loop设置为true；当点击区域外时，我在container的click事件回调中调用clearLoop，这样就可以正常播放至结束；当点击区域时，在定时器中调用playLoop方法，便又可以循环播放本区域。</p>\n\n### 2.4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\n#### 2.4.1、先看效果\n![](/images/wavesurfer_4.gif)\n\n#### 2.4.2、代码实现\n<p>&emsp;&emsp;还是在region-update-end事件中处理！</p>\n\n```javascript\n// 完成拖动或者完成大小调整时触发\nthis.wavesurfer.on('region-update-end', (region) => {\n  // region.playLoop() // 循环播放选中区域\n  this.createDeleteButton(region);\n\n  const { prevElement, nextElement, prevRegionId, nextRegionId } = this.getPrevAndNextElement(region) // 获取相邻的两个节点\n  if (prevElement && prevElement.className === 'wavesurfer-region') { // 和前一个dom对齐\n    const prevRegion = this.getRegion(prevRegionId)\n    if (region.start < prevRegion.end) {\n      prevRegion.update({ start: prevRegion.start, end: region.start })\n    }\n  }\n  \n  if (nextElement && nextElement.className === 'wavesurfer-region') { // 和后一个dom对齐\n    const nextRegion = this.getRegion(nextRegionId)\n    if (region.end > nextRegion.start) {\n      nextRegion.update({ start: region.end, end: nextRegion.end })\n    }\n  }\n})\n\n\n// 根据区域id，获取区域实例\ngetRegion(id) {\n  return this.wavesurfer.regions.list[id]\n},\n// 获取当前region的上一个region和下一个region\ngetPrevAndNextElement(currentRegion) {\n  const regionList = Object.entries(this.wavesurfer.regions.list)\n  const prevList = [], nextList = []\n  for (const [key, region] of regionList) {\n    if (key !== currentRegion.id) {\n      if (region.start < currentRegion.start) {\n        prevList.push({ key, val: currentRegion.start - region.start })\n      } else {\n        nextList.push({ key, val: region.end - currentRegion.end })\n      }\n    }\n  }\n  const prevListSort = this.sortArr(prevList, 'val'), nextListSort = this.sortArr(nextList, 'val') // 排序后的prevList和nextList\n  const prevRegionId = prevListSort ? prevListSort[0].key : null\n  const nextRegionId = nextListSort ? nextListSort[0].key : null\n  const regionDOMList = Array.from(document.querySelectorAll('.wavesurfer-region'))\n  const prevElement = regionDOMList.find(regionDOM => regionDOM.getAttribute('data-id') === prevRegionId)\n  const nextElement = regionDOMList.find(regionDOM => regionDOM.getAttribute('data-id') === nextRegionId)\n  return { prevRegionId, nextRegionId, prevElement, nextElement }\n},\n// 数组对象根据指定属性值进行升序排序\nsortArr(list, property) {\n  if (list.length) {\n    return [...list].sort((a, b) => a[property] - b[property])\n  } else {\n    return null\n  }\n},\n\n```\n\n### 注意：需要提前引入wavesurfer、wavesurfer.regions 两个文件","slug":"组件封装/组件封装-3：基于wavesurfer封装可视化音标标注组件","published":1,"updated":"2024-12-02T07:19:41.240Z","_id":"cm46ormt0000s0cnn1zdu983h","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"一、基于wavesurfer，regions封装的可视化音标标注控件\"><a href=\"#一、基于wavesurfer，regions封装的可视化音标标注控件\" class=\"headerlink\" title=\"一、基于wavesurfer，regions封装的可视化音标标注控件\"></a>一、基于wavesurfer，regions封装的可视化音标标注控件</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>  基于wavesurfer，regions 封装的可视化音标标注控件。。。。这个案例是公司大佬写的博客，我抄过来，免得以后链接失效，哈哈哈哈哈啊哈。。。。</p>\n\n<h2 id=\"2、基本流程\"><a href=\"#2、基本流程\" class=\"headerlink\" title=\"2、基本流程\"></a>2、基本流程</h2><h3 id=\"2-1、先简单看下效果\"><a href=\"#2-1、先简单看下效果\" class=\"headerlink\" title=\"2.1、先简单看下效果\"></a>2.1、先简单看下效果</h3><p>1、将一段声频以波形展示在页面上，支持播放/暂停、重放、停止、点击跳转播放</p>\n\n<p><img src=\"/images/wavesurfer_1.gif\"></p>\n<p>2、支持渲染区域，支持用户手动选择区域和删除区域，支持拖动区域和调整区域大小；当操作区域时，最好能实时循环播放区域</p>\n\n<p><img src=\"/images/wavesurfer_2.gif\"></p>\n<p>3、点击区域时循环播放本区域，点击区域外时正常播放至结束</p>\n\n<p><img src=\"/images/wavesurfer_3.gif\"></p>\n<h3 id=\"2-2、Vue实现\"><a href=\"#2-2、Vue实现\" class=\"headerlink\" title=\"2.2、Vue实现\"></a>2.2、Vue实现</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>div ref<span class=\"token operator\">=</span><span class=\"token string\">\"waveformRef\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>div ref<span class=\"token operator\">=</span><span class=\"token string\">\"waveTimelineRef\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"wavesurfer.skip(-3)\"</span><span class=\"token operator\">&gt;</span>后退<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"wavesurfer.playPause()\"</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>i <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"el-icon-video-play\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n      播放 <span class=\"token operator\">/</span> 暂停\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"wavesurfer.skip(3)\"</span><span class=\"token operator\">&gt;</span>前进<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"rebroadcast\"</span><span class=\"token operator\">&gt;</span>重放<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"handleStop\"</span><span class=\"token operator\">&gt;</span>停止<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"getRegions\"</span><span class=\"token operator\">&gt;</span>打印区域<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n \n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> WaveSurfer <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js'</span>\n<span class=\"token keyword\">import</span> Region <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js/dist/plugin/wavesurfer.regions'</span>\n<span class=\"token keyword\">import</span> Cursor <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js/dist/plugin/wavesurfer.cursor'</span>\n<span class=\"token keyword\">import</span> Timeline <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js/dist/plugin/wavesurfer.timeline'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'voiceSrc'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">wavesurfer</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">beforeDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>waveformRef\n      container<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'点击容器'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer <span class=\"token operator\">=</span> WaveSurfer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        container<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 容器，唯一一个必须参数</span>\n        <span class=\"token literal-property property\">cursorColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 音频光标颜色</span>\n        <span class=\"token literal-property property\">waveColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'#ddd'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 波形颜色</span>\n        <span class=\"token literal-property property\">progressColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'#bbb'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 已完成播放的波形颜色 当progressColor和waveColor相同时，完全不渲染进度波</span>\n        <span class=\"token literal-property property\">backend</span><span class=\"token operator\">:</span> <span class=\"token string\">'MediaElement'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">autoCenter</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          Region<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// regionsMinLength: 1.5,</span>\n            <span class=\"token literal-property property\">regions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'hsla(400, 100%, 30%, 0.5)'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'hsla(200, 50%, 70%, 0.4)'</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">dragSelection</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          Cursor<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">showTime</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">customShowTimeStyle</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'background-color'</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token string\">'2px'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'font-size'</span><span class=\"token operator\">:</span> <span class=\"token string\">'10px'</span> <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          Timeline<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">container</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>waveTimelineRef <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>voiceSrc<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 加载音频url</span>\n\n      <span class=\"token comment\">// 点击区域</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'region-click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'定时器'</span><span class=\"token punctuation\">)</span>\n          region<span class=\"token punctuation\">.</span><span class=\"token function\">playLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hook:beforeDestroy'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span>\n          timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token comment\">// 完成拖动或者完成大小调整时触发</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'region-update-end'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        region<span class=\"token punctuation\">.</span><span class=\"token function\">playLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 循环播放选中区域</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ready'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 为区域追加一个删除按钮</span>\n        <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> region <span class=\"token keyword\">of</span> regionList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 格式化时间</span>\n    <span class=\"token function\">formatTime</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">seconds</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      seconds <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> minutes <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>seconds <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n      seconds <span class=\"token operator\">=</span> seconds <span class=\"token operator\">%</span> <span class=\"token number\">60</span>\n      <span class=\"token keyword\">const</span> secondsStr <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      secondsStr <span class=\"token operator\">=</span> seconds<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>minutes <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>minutes <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> minutes <span class=\"token operator\">:</span> minutes<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>seconds <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> secondsStr <span class=\"token operator\">:</span> secondsStr<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">00:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>seconds <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> secondsStr <span class=\"token operator\">:</span> secondsStr<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 给区域创建删除按钮</span>\n    <span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>region<span class=\"token punctuation\">.</span>hasDeleteButton<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> deleteButton <span class=\"token operator\">=</span> region<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        deleteButton<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token string\">'删除'</span>\n        deleteButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$confirm</span><span class=\"token punctuation\">(</span><span class=\"token string\">'确认删除此区域嘛?'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'提示'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">confirmButtonText</span><span class=\"token operator\">:</span> <span class=\"token string\">'确定'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">cancelButtonText</span><span class=\"token operator\">:</span> <span class=\"token string\">'取消'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'warning'</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> region<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> css <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">float</span><span class=\"token operator\">:</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> <span class=\"token string\">'relative'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">cursor</span><span class=\"token operator\">:</span> <span class=\"token string\">'pointer'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span> <span class=\"token punctuation\">}</span>\n        region<span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span>deleteButton<span class=\"token punctuation\">,</span> css<span class=\"token punctuation\">)</span>\n        region<span class=\"token punctuation\">.</span>hasDeleteButton <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 获取区域列表</span>\n    <span class=\"token function\">getRegions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>regionList<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 重放</span>\n    <span class=\"token function\">rebroadcast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 停止</span>\n    <span class=\"token function\">handleStop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 设置每个区域的loop为false</span>\n    <span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> regionList<span class=\"token punctuation\">)</span> item<span class=\"token punctuation\">.</span>loop <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-3、重点描述\"><a href=\"#2-3、重点描述\" class=\"headerlink\" title=\"2.3、重点描述\"></a>2.3、重点描述</h3><h4 id=\"2-3-1、实例方法\"><a href=\"#2-3-1、实例方法\" class=\"headerlink\" title=\"2.3.1、实例方法\"></a>2.3.1、实例方法</h4><p>  playPause 暂停时播放，播放时暂停；play(0) 从0开始播放；stop() 停止；skip() 正数为前进，负数为后退！</p>\n\n<h4 id=\"2-3-2、区域的删除按钮怎么添加的\"><a href=\"#2-3-2、区域的删除按钮怎么添加的\" class=\"headerlink\" title=\"2.3.2、区域的删除按钮怎么添加的\"></a>2.3.2、区域的删除按钮怎么添加的</h4><p>  createDeleteButton函数用于创建button按钮，region.element可以用来appendChild节点；监听ready事件，这里可以获取到已有的区域列表，循环添加按钮；新添加的区域，会触发region-update-end事件，回调函数的参数是region，这里可以再次调用createDeleteButton函数。</p>\n\n<h4 id=\"2-3-3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\"><a href=\"#2-3-3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\" class=\"headerlink\" title=\"2.3.3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\"></a>2.3.3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放</h4><p>  调用region.playLoop()即可！</p>\n\n<h4 id=\"2-3-4、点击区域时循环播放本区域，点击区域外时正常播放至结束\"><a href=\"#2-3-4、点击区域时循环播放本区域，点击区域外时正常播放至结束\" class=\"headerlink\" title=\"2.3.4、点击区域时循环播放本区域，点击区域外时正常播放至结束\"></a>2.3.4、点击区域时循环播放本区域，点击区域外时正常播放至结束</h4><p>  clearLoop函数用于将每个区域中的loop设置为false，playLoop方法会将当前区域的loop设置为true；当点击区域外时，我在container的click事件回调中调用clearLoop，这样就可以正常播放至结束；当点击区域时，在定时器中调用playLoop方法，便又可以循环播放本区域。</p>\n\n<h3 id=\"2-4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\"><a href=\"#2-4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\" class=\"headerlink\" title=\"2.4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\"></a>2.4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附</h3><h4 id=\"2-4-1、先看效果\"><a href=\"#2-4-1、先看效果\" class=\"headerlink\" title=\"2.4.1、先看效果\"></a>2.4.1、先看效果</h4><p><img src=\"/images/wavesurfer_4.gif\"></p>\n<h4 id=\"2-4-2、代码实现\"><a href=\"#2-4-2、代码实现\" class=\"headerlink\" title=\"2.4.2、代码实现\"></a>2.4.2、代码实现</h4><p>  还是在region-update-end事件中处理！</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 完成拖动或者完成大小调整时触发</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'region-update-end'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// region.playLoop() // 循环播放选中区域</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> prevElement<span class=\"token punctuation\">,</span> nextElement<span class=\"token punctuation\">,</span> prevRegionId<span class=\"token punctuation\">,</span> nextRegionId <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPrevAndNextElement</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获取相邻的两个节点</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevElement <span class=\"token operator\">&amp;&amp;</span> prevElement<span class=\"token punctuation\">.</span>className <span class=\"token operator\">===</span> <span class=\"token string\">'wavesurfer-region'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 和前一个dom对齐</span>\n    <span class=\"token keyword\">const</span> prevRegion <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span>prevRegionId<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">.</span>start <span class=\"token operator\">&lt;</span> prevRegion<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      prevRegion<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> prevRegion<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> region<span class=\"token punctuation\">.</span>start <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextElement <span class=\"token operator\">&amp;&amp;</span> nextElement<span class=\"token punctuation\">.</span>className <span class=\"token operator\">===</span> <span class=\"token string\">'wavesurfer-region'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 和后一个dom对齐</span>\n    <span class=\"token keyword\">const</span> nextRegion <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span>nextRegionId<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">.</span>end <span class=\"token operator\">&gt;</span> nextRegion<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      nextRegion<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> region<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> nextRegion<span class=\"token punctuation\">.</span>end <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">// 根据区域id，获取区域实例</span>\n<span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 获取当前region的上一个region和下一个region</span>\n<span class=\"token function\">getPrevAndNextElement</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">currentRegion</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> prevList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nextList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> region<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> regionList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!==</span> currentRegion<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">.</span>start <span class=\"token operator\">&lt;</span> currentRegion<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        prevList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> key<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">val</span><span class=\"token operator\">:</span> currentRegion<span class=\"token punctuation\">.</span>start <span class=\"token operator\">-</span> region<span class=\"token punctuation\">.</span>start <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        nextList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> key<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">val</span><span class=\"token operator\">:</span> region<span class=\"token punctuation\">.</span>end <span class=\"token operator\">-</span> currentRegion<span class=\"token punctuation\">.</span>end <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> prevListSort <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sortArr</span><span class=\"token punctuation\">(</span>prevList<span class=\"token punctuation\">,</span> <span class=\"token string\">'val'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nextListSort <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sortArr</span><span class=\"token punctuation\">(</span>nextList<span class=\"token punctuation\">,</span> <span class=\"token string\">'val'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 排序后的prevList和nextList</span>\n  <span class=\"token keyword\">const</span> prevRegionId <span class=\"token operator\">=</span> prevListSort <span class=\"token operator\">?</span> prevListSort<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>key <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">const</span> nextRegionId <span class=\"token operator\">=</span> nextListSort <span class=\"token operator\">?</span> nextListSort<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>key <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">const</span> regionDOMList <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.wavesurfer-region'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> prevElement <span class=\"token operator\">=</span> regionDOMList<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">regionDOM</span> <span class=\"token operator\">=&gt;</span> regionDOM<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-id'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> prevRegionId<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> nextElement <span class=\"token operator\">=</span> regionDOMList<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">regionDOM</span> <span class=\"token operator\">=&gt;</span> regionDOM<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-id'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> nextRegionId<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> prevRegionId<span class=\"token punctuation\">,</span> nextRegionId<span class=\"token punctuation\">,</span> prevElement<span class=\"token punctuation\">,</span> nextElement <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 数组对象根据指定属性值进行升序排序</span>\n<span class=\"token function\">sortArr</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> property</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>list<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> a<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> b<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"注意：需要提前引入wavesurfer、wavesurfer-regions-两个文件\"><a href=\"#注意：需要提前引入wavesurfer、wavesurfer-regions-两个文件\" class=\"headerlink\" title=\"注意：需要提前引入wavesurfer、wavesurfer.regions 两个文件\"></a>注意：需要提前引入wavesurfer、wavesurfer.regions 两个文件</h3>","excerpt":"","more":"<h1 id=\"一、基于wavesurfer，regions封装的可视化音标标注控件\"><a href=\"#一、基于wavesurfer，regions封装的可视化音标标注控件\" class=\"headerlink\" title=\"一、基于wavesurfer，regions封装的可视化音标标注控件\"></a>一、基于wavesurfer，regions封装的可视化音标标注控件</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;基于wavesurfer，regions 封装的可视化音标标注控件。。。。这个案例是公司大佬写的博客，我抄过来，免得以后链接失效，哈哈哈哈哈啊哈。。。。</p>\n\n<h2 id=\"2、基本流程\"><a href=\"#2、基本流程\" class=\"headerlink\" title=\"2、基本流程\"></a>2、基本流程</h2><h3 id=\"2-1、先简单看下效果\"><a href=\"#2-1、先简单看下效果\" class=\"headerlink\" title=\"2.1、先简单看下效果\"></a>2.1、先简单看下效果</h3><p>1、将一段声频以波形展示在页面上，支持播放/暂停、重放、停止、点击跳转播放</p>\n\n<p><img src=\"/images/wavesurfer_1.gif\"></p>\n<p>2、支持渲染区域，支持用户手动选择区域和删除区域，支持拖动区域和调整区域大小；当操作区域时，最好能实时循环播放区域</p>\n\n<p><img src=\"/images/wavesurfer_2.gif\"></p>\n<p>3、点击区域时循环播放本区域，点击区域外时正常播放至结束</p>\n\n<p><img src=\"/images/wavesurfer_3.gif\"></p>\n<h3 id=\"2-2、Vue实现\"><a href=\"#2-2、Vue实现\" class=\"headerlink\" title=\"2.2、Vue实现\"></a>2.2、Vue实现</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div ref<span class=\"token operator\">=</span><span class=\"token string\">\"waveformRef\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div ref<span class=\"token operator\">=</span><span class=\"token string\">\"waveTimelineRef\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"wavesurfer.skip(-3)\"</span><span class=\"token operator\">></span>后退<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"wavesurfer.playPause()\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>i <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"el-icon-video-play\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      播放 <span class=\"token operator\">/</span> 暂停\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"wavesurfer.skip(3)\"</span><span class=\"token operator\">></span>前进<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"rebroadcast\"</span><span class=\"token operator\">></span>重放<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"handleStop\"</span><span class=\"token operator\">></span>停止<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"getRegions\"</span><span class=\"token operator\">></span>打印区域<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n \n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> WaveSurfer <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js'</span>\n<span class=\"token keyword\">import</span> Region <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js/dist/plugin/wavesurfer.regions'</span>\n<span class=\"token keyword\">import</span> Cursor <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js/dist/plugin/wavesurfer.cursor'</span>\n<span class=\"token keyword\">import</span> Timeline <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js/dist/plugin/wavesurfer.timeline'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'voiceSrc'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">wavesurfer</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">beforeDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>waveformRef\n      container<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'点击容器'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer <span class=\"token operator\">=</span> WaveSurfer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        container<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 容器，唯一一个必须参数</span>\n        <span class=\"token literal-property property\">cursorColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 音频光标颜色</span>\n        <span class=\"token literal-property property\">waveColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'#ddd'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 波形颜色</span>\n        <span class=\"token literal-property property\">progressColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'#bbb'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 已完成播放的波形颜色 当progressColor和waveColor相同时，完全不渲染进度波</span>\n        <span class=\"token literal-property property\">backend</span><span class=\"token operator\">:</span> <span class=\"token string\">'MediaElement'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">autoCenter</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          Region<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// regionsMinLength: 1.5,</span>\n            <span class=\"token literal-property property\">regions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'hsla(400, 100%, 30%, 0.5)'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'hsla(200, 50%, 70%, 0.4)'</span> <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">dragSelection</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          Cursor<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">showTime</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">customShowTimeStyle</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string-property property\">'background-color'</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token string\">'2px'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'font-size'</span><span class=\"token operator\">:</span> <span class=\"token string\">'10px'</span> <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          Timeline<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">container</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>waveTimelineRef <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>voiceSrc<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 加载音频url</span>\n\n      <span class=\"token comment\">// 点击区域</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'region-click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'定时器'</span><span class=\"token punctuation\">)</span>\n          region<span class=\"token punctuation\">.</span><span class=\"token function\">playLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hook:beforeDestroy'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span>\n          timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token comment\">// 完成拖动或者完成大小调整时触发</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'region-update-end'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        region<span class=\"token punctuation\">.</span><span class=\"token function\">playLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 循环播放选中区域</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ready'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 为区域追加一个删除按钮</span>\n        <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> region <span class=\"token keyword\">of</span> regionList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 格式化时间</span>\n    <span class=\"token function\">formatTime</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">seconds</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      seconds <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> minutes <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>seconds <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n      seconds <span class=\"token operator\">=</span> seconds <span class=\"token operator\">%</span> <span class=\"token number\">60</span>\n      <span class=\"token keyword\">const</span> secondsStr <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      secondsStr <span class=\"token operator\">=</span> seconds<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>minutes <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>minutes <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> minutes <span class=\"token operator\">:</span> minutes<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>seconds <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> secondsStr <span class=\"token operator\">:</span> secondsStr<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">00:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>seconds <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> secondsStr <span class=\"token operator\">:</span> secondsStr<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 给区域创建删除按钮</span>\n    <span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>region<span class=\"token punctuation\">.</span>hasDeleteButton<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> deleteButton <span class=\"token operator\">=</span> region<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        deleteButton<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token string\">'删除'</span>\n        deleteButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$confirm</span><span class=\"token punctuation\">(</span><span class=\"token string\">'确认删除此区域嘛?'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'提示'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">confirmButtonText</span><span class=\"token operator\">:</span> <span class=\"token string\">'确定'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">cancelButtonText</span><span class=\"token operator\">:</span> <span class=\"token string\">'取消'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'warning'</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> region<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> css <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">float</span><span class=\"token operator\">:</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> <span class=\"token string\">'relative'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">cursor</span><span class=\"token operator\">:</span> <span class=\"token string\">'pointer'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span> <span class=\"token punctuation\">&#125;</span>\n        region<span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span>deleteButton<span class=\"token punctuation\">,</span> css<span class=\"token punctuation\">)</span>\n        region<span class=\"token punctuation\">.</span>hasDeleteButton <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 获取区域列表</span>\n    <span class=\"token function\">getRegions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>regionList<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 重放</span>\n    <span class=\"token function\">rebroadcast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 停止</span>\n    <span class=\"token function\">handleStop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 设置每个区域的loop为false</span>\n    <span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> regionList<span class=\"token punctuation\">)</span> item<span class=\"token punctuation\">.</span>loop <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-3、重点描述\"><a href=\"#2-3、重点描述\" class=\"headerlink\" title=\"2.3、重点描述\"></a>2.3、重点描述</h3><h4 id=\"2-3-1、实例方法\"><a href=\"#2-3-1、实例方法\" class=\"headerlink\" title=\"2.3.1、实例方法\"></a>2.3.1、实例方法</h4><p>&emsp;&emsp;playPause 暂停时播放，播放时暂停；play(0) 从0开始播放；stop() 停止；skip() 正数为前进，负数为后退！</p>\n\n<h4 id=\"2-3-2、区域的删除按钮怎么添加的\"><a href=\"#2-3-2、区域的删除按钮怎么添加的\" class=\"headerlink\" title=\"2.3.2、区域的删除按钮怎么添加的\"></a>2.3.2、区域的删除按钮怎么添加的</h4><p>&emsp;&emsp;createDeleteButton函数用于创建button按钮，region.element可以用来appendChild节点；监听ready事件，这里可以获取到已有的区域列表，循环添加按钮；新添加的区域，会触发region-update-end事件，回调函数的参数是region，这里可以再次调用createDeleteButton函数。</p>\n\n<h4 id=\"2-3-3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\"><a href=\"#2-3-3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\" class=\"headerlink\" title=\"2.3.3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\"></a>2.3.3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放</h4><p>&emsp;&emsp;调用region.playLoop()即可！</p>\n\n<h4 id=\"2-3-4、点击区域时循环播放本区域，点击区域外时正常播放至结束\"><a href=\"#2-3-4、点击区域时循环播放本区域，点击区域外时正常播放至结束\" class=\"headerlink\" title=\"2.3.4、点击区域时循环播放本区域，点击区域外时正常播放至结束\"></a>2.3.4、点击区域时循环播放本区域，点击区域外时正常播放至结束</h4><p>&emsp;&emsp;clearLoop函数用于将每个区域中的loop设置为false，playLoop方法会将当前区域的loop设置为true；当点击区域外时，我在container的click事件回调中调用clearLoop，这样就可以正常播放至结束；当点击区域时，在定时器中调用playLoop方法，便又可以循环播放本区域。</p>\n\n<h3 id=\"2-4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\"><a href=\"#2-4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\" class=\"headerlink\" title=\"2.4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\"></a>2.4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附</h3><h4 id=\"2-4-1、先看效果\"><a href=\"#2-4-1、先看效果\" class=\"headerlink\" title=\"2.4.1、先看效果\"></a>2.4.1、先看效果</h4><p><img src=\"/images/wavesurfer_4.gif\"></p>\n<h4 id=\"2-4-2、代码实现\"><a href=\"#2-4-2、代码实现\" class=\"headerlink\" title=\"2.4.2、代码实现\"></a>2.4.2、代码实现</h4><p>&emsp;&emsp;还是在region-update-end事件中处理！</p>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 完成拖动或者完成大小调整时触发</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'region-update-end'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// region.playLoop() // 循环播放选中区域</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> prevElement<span class=\"token punctuation\">,</span> nextElement<span class=\"token punctuation\">,</span> prevRegionId<span class=\"token punctuation\">,</span> nextRegionId <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPrevAndNextElement</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获取相邻的两个节点</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevElement <span class=\"token operator\">&amp;&amp;</span> prevElement<span class=\"token punctuation\">.</span>className <span class=\"token operator\">===</span> <span class=\"token string\">'wavesurfer-region'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 和前一个dom对齐</span>\n    <span class=\"token keyword\">const</span> prevRegion <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span>prevRegionId<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">.</span>start <span class=\"token operator\">&lt;</span> prevRegion<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      prevRegion<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> prevRegion<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> region<span class=\"token punctuation\">.</span>start <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextElement <span class=\"token operator\">&amp;&amp;</span> nextElement<span class=\"token punctuation\">.</span>className <span class=\"token operator\">===</span> <span class=\"token string\">'wavesurfer-region'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 和后一个dom对齐</span>\n    <span class=\"token keyword\">const</span> nextRegion <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span>nextRegionId<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> nextRegion<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      nextRegion<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> region<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> nextRegion<span class=\"token punctuation\">.</span>end <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">// 根据区域id，获取区域实例</span>\n<span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 获取当前region的上一个region和下一个region</span>\n<span class=\"token function\">getPrevAndNextElement</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">currentRegion</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> prevList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nextList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> region<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> regionList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!==</span> currentRegion<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">.</span>start <span class=\"token operator\">&lt;</span> currentRegion<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        prevList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">val</span><span class=\"token operator\">:</span> currentRegion<span class=\"token punctuation\">.</span>start <span class=\"token operator\">-</span> region<span class=\"token punctuation\">.</span>start <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        nextList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">val</span><span class=\"token operator\">:</span> region<span class=\"token punctuation\">.</span>end <span class=\"token operator\">-</span> currentRegion<span class=\"token punctuation\">.</span>end <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">const</span> prevListSort <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sortArr</span><span class=\"token punctuation\">(</span>prevList<span class=\"token punctuation\">,</span> <span class=\"token string\">'val'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nextListSort <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sortArr</span><span class=\"token punctuation\">(</span>nextList<span class=\"token punctuation\">,</span> <span class=\"token string\">'val'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 排序后的prevList和nextList</span>\n  <span class=\"token keyword\">const</span> prevRegionId <span class=\"token operator\">=</span> prevListSort <span class=\"token operator\">?</span> prevListSort<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>key <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">const</span> nextRegionId <span class=\"token operator\">=</span> nextListSort <span class=\"token operator\">?</span> nextListSort<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>key <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">const</span> regionDOMList <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.wavesurfer-region'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> prevElement <span class=\"token operator\">=</span> regionDOMList<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">regionDOM</span> <span class=\"token operator\">=></span> regionDOM<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-id'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> prevRegionId<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> nextElement <span class=\"token operator\">=</span> regionDOMList<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">regionDOM</span> <span class=\"token operator\">=></span> regionDOM<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-id'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> nextRegionId<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> prevRegionId<span class=\"token punctuation\">,</span> nextRegionId<span class=\"token punctuation\">,</span> prevElement<span class=\"token punctuation\">,</span> nextElement <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 数组对象根据指定属性值进行升序排序</span>\n<span class=\"token function\">sortArr</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> property</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>list<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> b<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"注意：需要提前引入wavesurfer、wavesurfer-regions-两个文件\"><a href=\"#注意：需要提前引入wavesurfer、wavesurfer-regions-两个文件\" class=\"headerlink\" title=\"注意：需要提前引入wavesurfer、wavesurfer.regions 两个文件\"></a>注意：需要提前引入wavesurfer、wavesurfer.regions 两个文件</h3>"}],"PostAsset":[],"PostCategory":[{"post_id":"cm46orms000010cnng4yc6vke","category_id":"cm46orms800040cnn4i1pb0ax","_id":"cm46ormsf000d0cnn8kz5e4hz"},{"post_id":"cm46orms500030cnn3dv02ddo","category_id":"cm46orms800040cnn4i1pb0ax","_id":"cm46ormsg000g0cnncz0f3vh5"},{"post_id":"cm46ormsa00070cnn1w1tegsz","category_id":"cm46orms800040cnn4i1pb0ax","_id":"cm46ormsh000k0cnnbtvlhrjn"},{"post_id":"cm46ormsx000o0cnn2bofed7d","category_id":"cm46ormsz000q0cnn7ad61yvt","_id":"cm46ormt2000w0cnn3rdu8fe6"},{"post_id":"cm46ormsy000p0cnnghsa1nfi","category_id":"cm46ormsz000q0cnn7ad61yvt","_id":"cm46ormt3000y0cnn7e2fgefi"},{"post_id":"cm46ormt0000s0cnn1zdu983h","category_id":"cm46ormsz000q0cnn7ad61yvt","_id":"cm46ormt300110cnned90hasw"}],"PostTag":[{"post_id":"cm46orms000010cnng4yc6vke","tag_id":"cm46orms900050cnnfaqj84le","_id":"cm46ormsf000f0cnnb1da3qkf"},{"post_id":"cm46orms000010cnng4yc6vke","tag_id":"cm46ormsd000b0cnnc74x81rx","_id":"cm46ormsg000h0cnnggmlhnw7"},{"post_id":"cm46orms500030cnn3dv02ddo","tag_id":"cm46ormsf000e0cnn0s5oduuu","_id":"cm46ormsg000j0cnndpqr3w8r"},{"post_id":"cm46ormsa00070cnn1w1tegsz","tag_id":"cm46ormsg000i0cnnbagxfil5","_id":"cm46ormsh000m0cnnd646e94v"},{"post_id":"cm46ormsa00070cnn1w1tegsz","tag_id":"cm46ormsh000l0cnn2krc6qxf","_id":"cm46ormsh000n0cnn4ozb4fzr"},{"post_id":"cm46ormsx000o0cnn2bofed7d","tag_id":"cm46ormsz000r0cnnbnhi3txr","_id":"cm46ormt300100cnnckfjgyrg"},{"post_id":"cm46ormsx000o0cnn2bofed7d","tag_id":"cm46ormt1000u0cnnhyz51r1q","_id":"cm46ormt300120cnn7fy57x70"},{"post_id":"cm46ormsx000o0cnn2bofed7d","tag_id":"cm46ormt2000x0cnneb4b0sb4","_id":"cm46ormt400140cnncwh59w7f"},{"post_id":"cm46ormsy000p0cnnghsa1nfi","tag_id":"cm46ormt3000z0cnnbgyi0whp","_id":"cm46ormt400160cnn3nda6lst"},{"post_id":"cm46ormsy000p0cnnghsa1nfi","tag_id":"cm46ormt300130cnn1ed204i5","_id":"cm46ormt400170cnn9vr6dtz9"},{"post_id":"cm46ormt0000s0cnn1zdu983h","tag_id":"cm46ormt400150cnn9cdoe6by","_id":"cm46ormt5001a0cnng3xiaqiy"},{"post_id":"cm46ormt0000s0cnn1zdu983h","tag_id":"cm46ormt400180cnn7gyu2cz9","_id":"cm46ormt5001b0cnngvjnftpl"},{"post_id":"cm46ormt0000s0cnn1zdu983h","tag_id":"cm46ormt500190cnnarm46d4w","_id":"cm46ormt5001c0cnn4kcd0uuv"},{"post_id":"cm46orms500030cnn3dv02ddo","tag_id":"cm46ou7i6001d0cnnh0701urh","_id":"cm46ou7i7001f0cnnc0g0ffw0"},{"post_id":"cm46orms500030cnn3dv02ddo","tag_id":"cm46ou7i6001e0cnnedm808td","_id":"cm46ou7i7001g0cnn7xz5d5um"}],"Tag":[{"name":"第三方库","_id":"cm46orms900050cnnfaqj84le"},{"name":"pdf.js","_id":"cm46ormsd000b0cnnc74x81rx"},{"name":"性能优化","_id":"cm46ormsf000e0cnn0s5oduuu"},{"name":"HTML","_id":"cm46ormsg000i0cnnbagxfil5"},{"name":"audio","_id":"cm46ormsh000l0cnn2krc6qxf"},{"name":"iview","_id":"cm46ormsz000r0cnnbnhi3txr"},{"name":"table","_id":"cm46ormt1000u0cnnhyz51r1q"},{"name":"合并单元格","_id":"cm46ormt2000x0cnneb4b0sb4"},{"name":"组件封装","_id":"cm46ormt3000z0cnnbgyi0whp"},{"name":"execl批量搜索","_id":"cm46ormt300130cnn1ed204i5"},{"name":"wavesurfer","_id":"cm46ormt400150cnn9cdoe6by"},{"name":"regions","_id":"cm46ormt400180cnn7gyu2cz9"},{"name":"音频剪辑","_id":"cm46ormt500190cnnarm46d4w"},{"name":"chrome","_id":"cm46ou7i6001d0cnnh0701urh"},{"name":"devtool","_id":"cm46ou7i6001e0cnnedm808td"}]}}