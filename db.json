{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/matery/source/css/barrager.css","path":"css/barrager.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/bb.css","path":"css/bb.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/gallery.css","path":"css/gallery.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/dark.css","path":"css/dark.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/indexcover.css","path":"css/indexcover.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/post.css","path":"css/post.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/reward.css","path":"css/reward.css","modified":0,"renderable":1},{"_id":"themes/matery/source/js/jquery.barrager.js","path":"js/jquery.barrager.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/gallery-encrypt.js","path":"js/gallery-encrypt.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/crypto-js.js","path":"js/crypto-js.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/Meting.min.js","path":"libs/aplayer/Meting.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/fancybox/fancybox.js","path":"libs/fancybox/fancybox.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/fancybox/jquery.fancybox.css","path":"libs/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jquery/jquery-3.6.0.min.js","path":"libs/jquery/jquery-3.6.0.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/justifiedGallery/justifiedGallery.min.css","path":"libs/justifiedGallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/justifiedGallery/justifiedGallery.min.js","path":"libs/justifiedGallery/justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/mermaid/mermaid.js","path":"libs/mermaid/mermaid.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/mermaid/mermaid.min.js","path":"libs/mermaid/mermaid.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/mermaid/mermaid.min.css","path":"libs/mermaid/mermaid.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/TencentCaptcha.js","path":"libs/others/TencentCaptcha.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/sakura-reduce.js","path":"libs/others/sakura-reduce.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/sakura-half.js","path":"libs/others/sakura-half.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/sakura.js","path":"libs/others/sakura.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/sakura-small.js","path":"libs/others/sakura-small.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/star.js","path":"libs/others/star.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prism/prism.min.css","path":"libs/prism/prism.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/prism/prism.min.js","path":"libs/prism/prism.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/typed/typed.js","path":"libs/typed/typed.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/waline/Waline.min.js","path":"libs/waline/Waline.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/7.jpg","path":"medias/banner/7.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/9.jpg","path":"medias/banner/9.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/8.jpg","path":"medias/banner/8.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/barrager/0.png","path":"medias/barrager/0.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/barrager/2.png","path":"medias/barrager/2.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/barrager/1.png","path":"medias/barrager/1.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/barrager/close.png","path":"medias/barrager/close.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/images/01.jpg","path":"medias/images/01.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/images/02.jpg","path":"medias/images/02.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/images/03.jpg","path":"medias/images/03.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/css/all.min.css","path":"libs/awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","path":"libs/awesome/webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","path":"libs/awesome/webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"73390bdde1f0d07811a10c5e0db32db87543b20e","modified":1730790792583},{"_id":"source/_data/friends.json","hash":"0e00a93d02871b8b4bab4ae7f04c0f0b1c851a49","modified":1730819098498},{"_id":"source/404/index.md","hash":"99eafeb4c9feef8ac3f693544d514d52d82e09e4","modified":1732865681223},{"_id":"source/about/index.md","hash":"a6af6b4554f3b1eb8bd952f734ba135fead32316","modified":1665234318888},{"_id":"source/categories/index.md","hash":"b6a1b59dcaef01581000cc999346b88a37cee6b2","modified":1665234243368},{"_id":"source/contact/index.md","hash":"df200366f9e2c014b2b7957eed4ab9eb02cdde41","modified":1665234341558},{"_id":"source/friends/index.md","hash":"2be114a59665f3f4e39e39e1db1173e98d7b84c4","modified":1665234369419},{"_id":"source/tags/index.md","hash":"559af4a536f3f78c29a5743444905912844e0d92","modified":1665234285334},{"_id":"source/_posts/前端面试合集/前端面试题合集.md","hash":"7bb0dfe66d5713f5cb28b377849d8c129baa602b","modified":1669485841446},{"_id":"source/_posts/凡人修Vue3传/第一章.md","hash":"e4effddcddf4b21a780bb48ef4acba4ced03d2b3","modified":1669485596245},{"_id":"source/_posts/凡人修Vue3传/第二章.md","hash":"0046fd178dcc26fe9325606c2f952c3934a8639c","modified":1669485783730},{"_id":"source/_posts/中国共产党简史/一、近代中国民族复兴的艰难探索.md","hash":"a35de88e6dfb17bd5b7e0d089a921dd252c44924","modified":1669814916934},{"_id":"source/_posts/中国共产党简史/二、五四运动和马克思主义的传播.md","hash":"77c3d442ad2302188add4b3acbf82d2b6b3db76b","modified":1669814923161},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-12、在线浏览word并下载.md","hash":"e3a5585991b49cbc0d646f00ee2e75e93aadaee8","modified":1671270077932},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-10、数据流传递框架.md","hash":"8bd22a1214ef0e5904b5320e3ec3882b5fc243ae","modified":1671118359111},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-11、PDF.js的使用.md","hash":"64f1b42b86937e7b98ee9829d3f6dde4e97782af","modified":1671270698266},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-14、iview中table使用render渲染部分原子组件.md","hash":"eb40989f34b9a7ef17631f370349dab562854cfb","modified":1683461705970},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-13、动态绑定样式2.md","hash":"61529bbbd897eb4b5a16b5a3ed0f49186781a9aa","modified":1683460238947},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-1、this.$set().md","hash":"ed9c456b9670a9502d09b3ca436994b9940a5dac","modified":1669485805769},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-2、this.$nextTick().md","hash":"f197c484f453f1d04f2edfbdea23fdd7f3b87441","modified":1669485810235},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-3、component动态组件.md","hash":"fb503581b00cb766824d564c214c21576d6e9333","modified":1669485814251},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-7、iview组件之自定义select.md","hash":"0619deb5a49312a024f7779f696e446d71f4e31f","modified":1671118313679},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-4、作用域插槽.md","hash":"efa2ccdb9a955b67fc22ddc8e0487cc6036584f5","modified":1669485818318},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-5、provide与inject传值.md","hash":"5d44cfe7a770109c3c7e37993e7fad513acbfbdc","modified":1669485822075},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-9、动态绑定样式.md","hash":"a05d63f18970f162f349db83f93988775d7f0101","modified":1671118327288},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-6、iview组件之upload.md","hash":"baa0054009fe9cbac95c1d1faf40784e4f143778","modified":1669485825812},{"_id":"source/_posts/工作知识总结/工作知识难点摘要系列-8、this.$emit().md","hash":"0838981df271dc71f790221b7e59f3055f59ef34","modified":1671118320616},{"_id":"source/_posts/实用工具/好用工具大汇总-1.md","hash":"a5411c1716b98446b7962d6273e4d544775e553c","modified":1683460113581},{"_id":"source/_posts/自定义组件封装/自定义组件封装-2、iview-Table之动态合并单元格.md","hash":"d5d41f358fee39d7f2ee96039bf4fe65edac4acc","modified":1670249012251},{"_id":"source/_posts/浪潮之巅/第一章、帝国的余辉之百年帝国.md","hash":"4f2a94c175c278b6696cf426e0bb303f95f72888","modified":1683465128397},{"_id":"source/_posts/自定义组件封装/自定义组件封装-1、execl批量导入弹窗.md","hash":"38f008e434820f73c3b771589dd9bbf5fd90cf47","modified":1669485889185},{"_id":"source/_posts/自定义组件封装/自定义组件封装-3、audio标签的使用.md","hash":"52227cdd6fa16aeb64c99b3239866f83f9e2e05a","modified":1670747852734},{"_id":"source/_posts/浪潮之巅/第二章、帝国的余辉之几度繁荣.md","hash":"689eb71efac6ef7b36b10a55c39dfae09a4dda6c","modified":1683465124686},{"_id":"source/_posts/自定义组件封装/自定义组件封装-4、基于wavesurfer，regions 封装的可视化音标标注控件.md","hash":"76c785efc2b7f3dba75edd698858d9c18e5662da","modified":1683469331287},{"_id":"source/_posts/工作记录/工作记录-1：资源制作性能优化方案.md","hash":"58ba54170038da116cdf5c9cc02ef6b7c961809a","modified":1732869648954},{"_id":"themes/matery/.gitignore","hash":"727607929a51db7ea10968f547c26041eee9cfff","modified":1683615228000},{"_id":"themes/matery/README_CN.md","hash":"497c6645c55dce9f190ec7625de76083262e1707","modified":1683615228000},{"_id":"themes/matery/CHANGELOG.md","hash":"084ec8b110a20170d08a0aa5fd8accf601051835","modified":1683615228000},{"_id":"themes/matery/README.md","hash":"9d98fe84a60bd6b222740f238d83f0999eaa77a3","modified":1683615228000},{"_id":"themes/matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1683615228000},{"_id":"themes/matery/_config.yml","hash":"3879c78a45608e77b2a1ee81d49394e7d4e17fb2","modified":1731896437344},{"_id":"themes/matery/layout/404.ejs","hash":"36f8d3e530e8144bf80d0772284edd9b0da362fe","modified":1683615228000},{"_id":"themes/matery/layout/about.ejs","hash":"99a74316aed478efb0db823c4460ee2e660f101c","modified":1683615228000},{"_id":"themes/matery/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1683615228000},{"_id":"themes/matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1683615228000},{"_id":"themes/matery/layout/friends.ejs","hash":"534511d9f38f281b531e24c19d9c1526cc7e5e27","modified":1683615228000},{"_id":"themes/matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1683615228000},{"_id":"themes/matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1683615228000},{"_id":"themes/matery/layout/contact.ejs","hash":"71ef2540fa586cd0c3b1f216f59fa9ec85fc6a38","modified":1683615228000},{"_id":"themes/matery/layout/galleries.ejs","hash":"85b8b9e583ffa7a4ee6d0c2be4779cb2f7d91777","modified":1683615228000},{"_id":"themes/matery/layout/index.ejs","hash":"1656c2db90e24a360282d15c71144b4f14edb43d","modified":1683615228000},{"_id":"themes/matery/layout/layout.ejs","hash":"94c2fee85418370ca8f7d54050c852267e924eb7","modified":1683615228000},{"_id":"themes/matery/layout/gallery.ejs","hash":"fcc7364b03329148ba4920cddb0d34d5b7410788","modified":1683615228000},{"_id":"themes/matery/layout/musics.ejs","hash":"9ac6053e09ed2c8a844d7e93c3fdce4ded95248a","modified":1683615228000},{"_id":"themes/matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1683615228000},{"_id":"themes/matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1683615228000},{"_id":"themes/matery/layout/post.ejs","hash":"3d4f40121dbb75bcb71837c35ec5ee17cdffae31","modified":1683615228000},{"_id":"themes/matery/layout/movies.ejs","hash":"abce85ffdd99e787e3652fbd466447e032b626bd","modified":1683615228000},{"_id":"themes/matery/source/favicon.png","hash":"ef8cda37226e9404029cc8b1f3fb2071a1a74436","modified":1730810481650},{"_id":"themes/matery/languages/zh-CN.yml","hash":"a2695fdb7579a77daec7773a9bb8e71b9edbf16b","modified":1683615228000},{"_id":"themes/matery/languages/default.yml","hash":"2ed57824573d7bed71e56023ed92500734a8886d","modified":1683615228000},{"_id":"themes/matery/languages/zh-HK.yml","hash":"51c06005927e8bde5b3e23353d2bf2c32ed855f3","modified":1683615228000},{"_id":"themes/matery/languages/jp.yml","hash":"a811cec0b6d91f405e8c7386a57039cd8c3448bb","modified":1683615228000},{"_id":"themes/matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1683615228000},{"_id":"themes/matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1683615228000},{"_id":"themes/matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1683615228000},{"_id":"themes/matery/layout/_partial/background.ejs","hash":"12350c0d366141b5c27792bb414d4adc303b0a9f","modified":1683615228000},{"_id":"themes/matery/layout/_partial/bg-cover-content.ejs","hash":"9e6b10d5cf4b5faf0d851f4777f75a7297ce68b9","modified":1683615228000},{"_id":"themes/matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1683615228000},{"_id":"themes/matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1683615228000},{"_id":"themes/matery/layout/_partial/codeblock.ejs","hash":"086a06863a0f88888707409936aa06a09ff50e3a","modified":1683615228000},{"_id":"themes/matery/layout/_partial/cover-style.ejs","hash":"4288b9d91b2d71404e7a509a81a5d7f7a4b8b5e8","modified":1683615228000},{"_id":"themes/matery/layout/_partial/bg-video.ejs","hash":"963422029eb5158eb5f5bc97ce19b66e5399db97","modified":1683615228000},{"_id":"themes/matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1683615228000},{"_id":"themes/matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1683615228000},{"_id":"themes/matery/layout/_partial/footer.ejs","hash":"e8958bc066b3c2fcd4152604cc12f30020106848","modified":1683615228000},{"_id":"themes/matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1683615228000},{"_id":"themes/matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1683615228000},{"_id":"themes/matery/layout/_partial/head.ejs","hash":"f5c00f21af281a09dc7de89e82a3b442903451a7","modified":1683615228000},{"_id":"themes/matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1683615228000},{"_id":"themes/matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1683615228000},{"_id":"themes/matery/layout/_partial/index-cover.ejs","hash":"e8b44268b59add61af44b7338527523d10d9d742","modified":1683615228000},{"_id":"themes/matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1683615228000},{"_id":"themes/matery/layout/_partial/mobile-nav.ejs","hash":"52de0cf3ce13a3477b0a1659d2b8aa41db1f622d","modified":1683615228000},{"_id":"themes/matery/layout/_partial/navigation.ejs","hash":"0953217f4e19a51dfc5a0ffc7d066406df18060b","modified":1683615228000},{"_id":"themes/matery/layout/_partial/main-style.ejs","hash":"8819b334509682355a5e53fa0f307f90166d175c","modified":1683615228000},{"_id":"themes/matery/layout/_partial/post-detail-toc.ejs","hash":"70fccaea75ce48364222c4e5de0496e556b01cb1","modified":1683615228000},{"_id":"themes/matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1683615228000},{"_id":"themes/matery/layout/_partial/post-detail.ejs","hash":"6261f8191c3c1159f63ec7f9293bb93f7d2a3dbb","modified":1683615228000},{"_id":"themes/matery/layout/_partial/post-style.ejs","hash":"243c3ba783553f25955d524fd47a5bb59a5e732b","modified":1683615228000},{"_id":"themes/matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1683615228000},{"_id":"themes/matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1683615228000},{"_id":"themes/matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1683615228000},{"_id":"themes/matery/layout/_partial/reward-style.ejs","hash":"8256ed940c0185ccf01890d59fb4262f196e2323","modified":1683615228000},{"_id":"themes/matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1683615228000},{"_id":"themes/matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1683615228000},{"_id":"themes/matery/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1683615228000},{"_id":"themes/matery/layout/_partial/reward.ejs","hash":"236668e72b01db91f5bf29eec4c79e34e2746d98","modified":1683615228000},{"_id":"themes/matery/layout/_partial/valine.ejs","hash":"2ac48566bb806336f1e5bc5c66fc816a580d63c3","modified":1683615228000},{"_id":"themes/matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1683615228000},{"_id":"themes/matery/layout/_partial/twikoo.ejs","hash":"f9cb8c82b9d2a7cdb644e10718f1cdeb9400414c","modified":1683615228000},{"_id":"themes/matery/layout/_partial/waline.ejs","hash":"2658cb73ef984a30b248351d7858ee15596a6e7a","modified":1683615228000},{"_id":"themes/matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1683615228000},{"_id":"themes/matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1683615228000},{"_id":"themes/matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1683615228000},{"_id":"themes/matery/layout/_widget/day-night.ejs","hash":"ff21dd5e49e1fc9a9ab8c7d164fd4b32a8265ea2","modified":1683615228000},{"_id":"themes/matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1683615228000},{"_id":"themes/matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1683615228000},{"_id":"themes/matery/layout/_widget/musics.ejs","hash":"bfebdf0731fee0cd4fd51efa0da1d0184565ae25","modified":1683615228000},{"_id":"themes/matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1683615228000},{"_id":"themes/matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1683615228000},{"_id":"themes/matery/layout/_widget/music.ejs","hash":"bb25a6fa51eb5ebfba687b2cbadff6c7a4b4bfef","modified":1683615228000},{"_id":"themes/matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1683615228000},{"_id":"themes/matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1683615228000},{"_id":"themes/matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1683615228000},{"_id":"themes/matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1683615228000},{"_id":"themes/matery/scripts/tags/index.js","hash":"223a31ea3aa4a689d45a033c7d680cb4fff8d8af","modified":1683615228000},{"_id":"themes/matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1683615228000},{"_id":"themes/matery/layout/_widget/video.ejs","hash":"5e5ec78f8ab229d54786ef2e0ea2864af2dc459f","modified":1683615228000},{"_id":"themes/matery/scripts/tags/note.js","hash":"84b0122b92342834540f69b19600cb54c50ab69e","modified":1683615228000},{"_id":"themes/matery/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1683615228000},{"_id":"themes/matery/scripts/tags/button.js","hash":"ab02fb2da648f4f7afa0c2381aaca334bdeb54e6","modified":1683615228000},{"_id":"themes/matery/source/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1683615228000},{"_id":"themes/matery/source/css/gallery.css","hash":"015097ca1271dd44e6d663332587dbe58ae2ade8","modified":1683615228000},{"_id":"themes/matery/source/css/dark.css","hash":"be4ef08494f3c965d513d9413685c0e723f671cd","modified":1683615228000},{"_id":"themes/matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1683615228000},{"_id":"themes/matery/source/css/matery.css","hash":"2546c6ff43d227e0495fce5ad50c1730e6e24aab","modified":1731060170317},{"_id":"themes/matery/source/css/indexcover.css","hash":"00f4f498ae8514022004f2281cab8ff304cd0f37","modified":1683615228000},{"_id":"themes/matery/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1683615228000},{"_id":"themes/matery/source/css/reward.css","hash":"56f8d21c3bb1dc57c762a63d13b08161d8260738","modified":1683615228000},{"_id":"themes/matery/source/css/post.css","hash":"1ebbf9ddee7db4b3039d8d4e25f2605072ab6e24","modified":1683615228000},{"_id":"themes/matery/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1683615228000},{"_id":"themes/matery/source/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1683615228000},{"_id":"themes/matery/source/js/matery.js","hash":"aa957ea8cf6787f0ed6095fedc6cb9d7d1bf3522","modified":1683615228000},{"_id":"themes/matery/source/js/gallery-encrypt.js","hash":"f611a391d62da17b71f75577a72ad246ef6c5a71","modified":1683615228000},{"_id":"themes/matery/source/js/tw_cn.js","hash":"29157cdfa87aec28e56d3d5717d486bf4de07db6","modified":1683615228000},{"_id":"themes/matery/source/js/search.js","hash":"5caa2d6e3d34c334ac68dfaafc81a583d6123382","modified":1683615228000},{"_id":"themes/matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1683615228000},{"_id":"themes/matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1683615228000},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1683615228000},{"_id":"themes/matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1683615228000},{"_id":"themes/matery/source/libs/aplayer/Meting.min.js","hash":"f2b3d20b8bd64ccd031c64628f2b1323078ae324","modified":1683615228000},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1683615228000},{"_id":"themes/matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1683615228000},{"_id":"themes/matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1683615228000},{"_id":"themes/matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1683615228000},{"_id":"themes/matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1683615228000},{"_id":"themes/matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1683615228000},{"_id":"themes/matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1683615228000},{"_id":"themes/matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1683615228000},{"_id":"themes/matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1683615228000},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1683615228000},{"_id":"themes/matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1683615228000},{"_id":"themes/matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1683615228000},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1683615228000},{"_id":"themes/matery/source/libs/fancybox/jquery.fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1683615228000},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1683615228000},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1683615228000},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1683615228000},{"_id":"themes/matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1683615228000},{"_id":"themes/matery/source/libs/justifiedGallery/justifiedGallery.min.css","hash":"b9323091d50785ad6c617d7cae76a41a89eb44b3","modified":1683615228000},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1683615228000},{"_id":"themes/matery/source/libs/justifiedGallery/justifiedGallery.min.js","hash":"6f5433cc9f19ce2403e903e5d01a4c7b38f0969b","modified":1683615228000},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","hash":"d20252cf76c3be8af37a8415d13ad368c762b4d8","modified":1683615228000},{"_id":"themes/matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1683615228000},{"_id":"themes/matery/source/libs/mermaid/mermaid.min.css","hash":"1dbcd9312e57f2a0b569451d0028d88316614481","modified":1683615228000},{"_id":"themes/matery/source/libs/others/TencentCaptcha.js","hash":"fb4d34c48567b7b992aac1c75f0d24c3eb2cc3fa","modified":1683615228000},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1683615228000},{"_id":"themes/matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1683615228000},{"_id":"themes/matery/source/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1683615228000},{"_id":"themes/matery/source/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1683615228000},{"_id":"themes/matery/source/libs/others/snow.js","hash":"02b1eeaca737c47be637b304feb3d36d792ee0c4","modified":1683615228000},{"_id":"themes/matery/source/libs/others/sakura.js","hash":"b6ebe8f040c84f067300996a5f377846f01605fa","modified":1683615228000},{"_id":"themes/matery/source/libs/others/star.js","hash":"cf32f8ce2a1a51ba65d3b6063fe2ee1482550190","modified":1683615228000},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1683615228000},{"_id":"themes/matery/source/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1683615228000},{"_id":"themes/matery/source/libs/prism/prism.min.css","hash":"ed3896649670cf142e514685da2b060cca5fd43a","modified":1683615228000},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1683615228000},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","hash":"39055053a477e7d54b46cfb46591f84cc3818eeb","modified":1683615228000},{"_id":"themes/matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1683615228000},{"_id":"themes/matery/source/libs/typed/typed.js","hash":"eaf2798298790ec3fad17f6c68b5d3b02dfd069c","modified":1683615228000},{"_id":"themes/matery/source/medias/banner/3.jpg","hash":"71c3cb31ac7fbc295f386f77d54740fa00ad44d4","modified":1732527871024},{"_id":"themes/matery/source/medias/banner/9.jpg","hash":"bf837fbaa1d5185cd25cb06989d9e7f1dbd52f08","modified":1732527981667},{"_id":"themes/matery/source/medias/banner/8.jpg","hash":"8f42f6c6501bed487139a7dd9a41aad61dc1314d","modified":1732527947493},{"_id":"themes/matery/source/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1683615228000},{"_id":"themes/matery/source/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1683615228000},{"_id":"themes/matery/source/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1683615228000},{"_id":"themes/matery/source/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1683615228000},{"_id":"themes/matery/source/medias/reward/alipay.jpg","hash":"d06a9d5d26992156bc39530eadf2bf91e7773566","modified":1731058052054},{"_id":"themes/matery/source/medias/reward/wechat.png","hash":"1be8beb1e9267d8ccb05a43992f58d8fb9ae39e1","modified":1731058029098},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","hash":"3fc15c8154f8bd2d7bd1dfe55ae5ab1c33e5e40f","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"9b26d745a1e69b23d71b7ea36d5de1209c997901","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f7a09bcbd996fd634045d4e79b6504c945730686","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","hash":"37ab2a6a0810d5a6c10a355fe1d7af0042bd6a2a","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","hash":"49693fa946534a56d7e5d4274e1ce55b05d782c3","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","hash":"509c56c80732a1cd80df8f2b4b0ac1128c31999f","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"7873d80020ae04955bb57521bd249a6974d1180f","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"aab2633f69581c2e26e22a23712f1501d7fcec18","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","hash":"04f09ad797ced119d6608909d06e500f16a03bbb","modified":1683615228000},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1683615228000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1683615228000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1683615228000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1683615228000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1683615228000},{"_id":"themes/matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1683615228000},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1683615228000},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1683615228000},{"_id":"themes/matery/source/libs/fancybox/fancybox.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1683615228000},{"_id":"themes/matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1683615228000},{"_id":"themes/matery/source/libs/jquery/jquery-3.6.0.min.js","hash":"b82d238d4e31fdf618bae8ac11a6c812c03dd0d4","modified":1683615228000},{"_id":"themes/matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1683615228000},{"_id":"themes/matery/source/medias/banner/1.jpg","hash":"0fbb515925fa6b417b9cabc789f1927ba6f1fe12","modified":1732527504401},{"_id":"themes/matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1683615228000},{"_id":"themes/matery/source/medias/banner/6.jpg","hash":"c64397d94bad8cc34592ae814e8d80e2327f4197","modified":1732527605786},{"_id":"themes/matery/source/medias/banner/7.jpg","hash":"518e4a74f479c030efb5c91164fbd9566fac42f9","modified":1732527912802},{"_id":"themes/matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1683615228000},{"_id":"themes/matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/css/all.min.css","hash":"0ae47fa834fb55de7b50c79021aeabecfae50c9c","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"e219af1e3bbc2219359d3d0916e263b279c4abfd","modified":1683615228000},{"_id":"themes/matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1683615228000},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","hash":"490148a22ab2b03a880495cc733ecd1840c02ed6","modified":1683615228000},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","hash":"8eee32acbfac59744b4053a7290f503ef623d3ab","modified":1683615228000},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","hash":"52b4dd0ef20cff2a6b77f4164270d4d1c8d16faa","modified":1730810074851},{"_id":"themes/matery/source/libs/waline/Waline.min.js","hash":"94f70e622e2a1ab05adb205033a9ddf371c61534","modified":1683615228000},{"_id":"themes/matery/source/libs/valine/Valine.min.js","hash":"d081a412c63411a75a3a880ddece65335d1c3ee8","modified":1683615228000},{"_id":"themes/matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1683615228000},{"_id":"themes/matery/source/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/css/all.css","hash":"8d63fa8b0f60a50b07ac0f7e751f6f5e02ecdc44","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"fa5745d421c0fc90928626be98e9f8cf7580b327","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"1979128e8ba1517d85f5e4ee505abf486c51557c","modified":1683615228000},{"_id":"themes/matery/source/js/crypto-js.js","hash":"ddacd177f23f65ff97b93b0417048f51928ee17e","modified":1683615228000},{"_id":"themes/matery/source/libs/valine/av-min.js","hash":"db56ef6acb789da00d39bd6b97c1b09c2d429195","modified":1683615228000},{"_id":"themes/matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1683615228000},{"_id":"themes/matery/source/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1683615228000},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"e3339400ef6214cfa077d003daed2bfa659e2956","modified":1683615228000},{"_id":"themes/matery/source/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1683615228000},{"_id":"themes/matery/source/libs/prism/prism.min.js","hash":"6fc9b7be93e51b4017a61483c13187af0149f194","modified":1683615228000},{"_id":"themes/matery/source/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1683615228000},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1683615228000},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1683615228000},{"_id":"themes/matery/source/libs/mermaid/mermaid.min.js","hash":"6bee48c26c32b90f50519f125890fcbb04779da6","modified":1683615228000},{"_id":"themes/matery/source/libs/mermaid/mermaid.js","hash":"a7933bef8aba190825ba7716497209187ac1de5d","modified":1683615228000},{"_id":"themes/matery/source/medias/logo.png","hash":"f3d0e7e1ccaff37594ccf5655704404f1a40d597","modified":1730436884848},{"_id":"themes/matery/source/medias/avatar.jpg","hash":"c0a757dbc8cc1382f8cc04ccc47d61b7e3a8f2e9","modified":1730437080126}],"Category":[{"name":"我的Vue3","_id":"cm42hwwtc0004ssnn7hmxdx91"},{"name":"热爱前端的我","_id":"cm42hwwtt000issnnesgpewsd"},{"name":"我和我的国","_id":"cm42hwwtw000pssnn0ggbem23"},{"name":"热爱我的工作","_id":"cm42hwwu10010ssnn8y3g5r8o"},{"name":"组件封装","_id":"cm42hwwul002nssnn1pkb6ofu"},{"name":"我的IT世界观","_id":"cm42hwwun002vssnnddcrca7q"},{"name":"工作记录","_id":"cm42hwwuq003bssnnctah7pkn"}],"Data":[{"_id":"friends","data":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"},{"avatar":"https://www.lixl.cn/medias/avatar.jpg","name":"悟尘记","introduction":"人生就是一场修行，上善若水，厚德载物。","url":"https://www.lixl.cn/","title":"前去参观"},{"avatar":"https://wiki.hyperledger.org/download/attachments/2392069/fabric?version=1&modificationDate=1540928132000&api=v2","name":"Fabric","introduction":"A Blockchain Platform for the Enterprise","url":"https://hyperledger-fabric.readthedocs.io/en/master/","title":"前去学习"},{"avatar":"https://www.bootcdn.cn/assets/img/maoyun.svg","name":"BootCDN","introduction":"稳定、快速、免费的前端开源项目 CDN 加速服务。","url":"https://www.bootcdn.cn/","title":"前去加速"}]}],"Page":[{"title":"about","date":"2018-09-30T09:25:30.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-09-30 17:25:30\ntype: \"about\"\nlayout: \"about\"\n---","updated":"2022-10-08T13:05:18.888Z","path":"about/index.html","comments":1,"_id":"cm42hwwt00000ssnn1ifwccc4","content":"","excerpt":"","more":""},{"title":"404","date":"2018-09-30T09:25:30.000Z","type":"404","layout":"404","description":"Oops～，你好旅行者，这块还不支持探索！！！ :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2018-09-30 17:25:30\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，你好旅行者，这块还不支持探索！！！ :(\"\n---","updated":"2024-11-29T07:34:41.223Z","path":"404/index.html","comments":1,"_id":"cm42hwwt90002ssnn3mw591iw","content":"","excerpt":"","more":""},{"title":"contact","date":"2018-09-30T09:25:30.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2018-09-30 17:25:30\ntype: \"contact\"\nlayout: \"contact\"\n---","updated":"2022-10-08T13:05:41.558Z","path":"contact/index.html","comments":1,"_id":"cm42hwwte0006ssnn0zki9iaq","content":"","excerpt":"","more":""},{"title":"friends","date":"2018-12-12T13:25:30.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2018-12-12 21:25:30\ntype: \"friends\"\nlayout: \"friends\"\n---","updated":"2022-10-08T13:06:09.419Z","path":"friends/index.html","comments":1,"_id":"cm42hwwtm0008ssnn5m4f9whi","content":"","excerpt":"","more":""},{"title":"分类（开发中）","date":"2018-09-30T09:25:30.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类（开发中）\ndate: 2018-09-30 17:25:30\ntype: \"categories\"\nlayout: \"categories\"\n---","updated":"2022-10-08T13:04:03.368Z","path":"categories/index.html","comments":1,"_id":"cm42hwwto000assnn5c1j5745","content":"","excerpt":"","more":""},{"title":"标签页（开发中）","date":"2018-09-30T10:23:38.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签页（开发中）\ndate: 2018-09-30 18:23:38\ntype: \"tags\"\nlayout: \"tags\"\n---","updated":"2022-10-08T13:04:45.334Z","path":"tags/index.html","comments":1,"_id":"cm42hwwtr000fssnnan12gy9w","content":"","excerpt":"","more":""}],"Post":[{"title":"第一章：你好Vue","comments":1,"_content":"最近看到一篇文章，作者把他学习JavaScript的经历写成了小说，为啥我不行呢，最近想学Vue3，希望自己的学习可以给自己带来快乐。\n\n<h2>仅以此纪录我学习Vue3的过程(还未写)</h2>\n\n\n\n","source":"_posts/凡人修Vue3传/第一章.md","raw":"---\ntitle: 第一章：你好Vue\ntags: 凡人修Vue3传\ncategories: 我的Vue3\ncomments: true\n---\n最近看到一篇文章，作者把他学习JavaScript的经历写成了小说，为啥我不行呢，最近想学Vue3，希望自己的学习可以给自己带来快乐。\n\n<h2>仅以此纪录我学习Vue3的过程(还未写)</h2>\n\n\n\n","slug":"凡人修Vue3传/第一章","published":1,"date":"2024-11-05T14:59:24.461Z","updated":"2022-11-26T17:59:56.245Z","layout":"post","photos":[],"_id":"cm42hwwt40001ssnn60oq4rds","content":"<p>最近看到一篇文章，作者把他学习JavaScript的经历写成了小说，为啥我不行呢，最近想学Vue3，希望自己的学习可以给自己带来快乐。</p>\n<h2>仅以此纪录我学习Vue3的过程(还未写)</h2>\n\n\n\n","excerpt":"","more":"<p>最近看到一篇文章，作者把他学习JavaScript的经历写成了小说，为啥我不行呢，最近想学Vue3，希望自己的学习可以给自己带来快乐。</p>\n<h2>仅以此纪录我学习Vue3的过程(还未写)</h2>\n\n\n\n"},{"title":"第二章：小镇先生的三段斗之气","comments":1,"_content":"最近看到一篇文章，作者把他学习JavaScript的经历写成了小说，为啥我不行呢，最近想学Vue3，希望自己的学习可以给自己带来快乐。\n\n<h2>仅以此纪录我学习Vue3的过程(还未写)</h2>\n","source":"_posts/凡人修Vue3传/第二章.md","raw":"---\ntitle: 第二章：小镇先生的三段斗之气\ntags: 凡人修Vue3传\ncategories: 我的Vue3\ncomments: true\n---\n最近看到一篇文章，作者把他学习JavaScript的经历写成了小说，为啥我不行呢，最近想学Vue3，希望自己的学习可以给自己带来快乐。\n\n<h2>仅以此纪录我学习Vue3的过程(还未写)</h2>\n","slug":"凡人修Vue3传/第二章","published":1,"date":"2024-11-05T14:59:24.463Z","updated":"2022-11-26T18:03:03.730Z","layout":"post","photos":[],"_id":"cm42hwwta0003ssnn6yxlcpud","content":"<p>最近看到一篇文章，作者把他学习JavaScript的经历写成了小说，为啥我不行呢，最近想学Vue3，希望自己的学习可以给自己带来快乐。</p>\n<h2>仅以此纪录我学习Vue3的过程(还未写)</h2>\n","excerpt":"","more":"<p>最近看到一篇文章，作者把他学习JavaScript的经历写成了小说，为啥我不行呢，最近想学Vue3，希望自己的学习可以给自己带来快乐。</p>\n<h2>仅以此纪录我学习Vue3的过程(还未写)</h2>\n"},{"title":"前端面试合集","comments":1,"_content":"前端面试包括前端知识点，框架的运用，算法题，，通信协议以及浏览器知识，该栏目会记录所学的前端面试问题。\n\n<h2>仅以此纪录前端面试合集，慢慢积累，为跳槽做准备(还未写)</h2>\n","source":"_posts/前端面试合集/前端面试题合集.md","raw":"---\ntitle: 前端面试合集\ntags: 前端面试合集\ncategories: 热爱前端的我\ncomments: true\n---\n前端面试包括前端知识点，框架的运用，算法题，，通信协议以及浏览器知识，该栏目会记录所学的前端面试问题。\n\n<h2>仅以此纪录前端面试合集，慢慢积累，为跳槽做准备(还未写)</h2>\n","slug":"前端面试合集/前端面试题合集","published":1,"date":"2024-11-05T14:59:24.468Z","updated":"2022-11-26T18:04:01.446Z","layout":"post","photos":[],"_id":"cm42hwwtl0007ssnn60xa3sch","content":"<p>前端面试包括前端知识点，框架的运用，算法题，，通信协议以及浏览器知识，该栏目会记录所学的前端面试问题。</p>\n<h2>仅以此纪录前端面试合集，慢慢积累，为跳槽做准备(还未写)</h2>\n","excerpt":"","more":"<p>前端面试包括前端知识点，框架的运用，算法题，，通信协议以及浏览器知识，该栏目会记录所学的前端面试问题。</p>\n<h2>仅以此纪录前端面试合集，慢慢积累，为跳槽做准备(还未写)</h2>\n"},{"title":"第二章、五四运动和马克思主义的传播","comments":1,"summary":"青年是标志时代的最灵敏的晴雨表，清风正气、蓬勃朝气，你我正当时。仅以此记录党史已加深学习和印象，也希望本人可以在迷茫的人生阶段静下心来。","_content":"\n![](/images/五四运动.jpg)\n\n<p>&emsp;&emsp;中华民国的成立并没有给人们带来预期的民族独立、人民民主和社会进步，沉重的失望代替了希望。旧的路走不通了，就要寻找新的出路。一些先进知识分子从总结辛亥革命经验教训着手，廓清蒙昧、启发理智，使广大民众从封建思想束缚中解脱出来。思想启蒙的新文化运动成为引发社会大变动的先导。</p>\n\n<p>&emsp;&emsp;1915年9月，陈独秀在上海创办《青年杂志》，后改名为《新青年》，新文化运动由此发端。1917年他被聘请为北京大学文科学长，《新青年》编辑部迁到北京。北京大学和《新青年》成为文化运动的主要阵地。</p>\n\n<p>&emsp;&emsp;新文化运动的基本口号是拥护“德先生”（Democracy）和“赛先生”（Science），也就是提倡民主和科学。新文化运动的倡导者以进化论观点和个性解放思想为主要武器，猛烈抨击以孔子为代表的往圣先贤，大力提倡新道德，提倡新文学、反对旧文学，包括提倡白话文、反对文言文。通过批判孔学，动摇了封建正统思想的统治地位，打开了遏制新思想涌流的闸门，在中国社会掀起一股思想解放的潮流。</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>","source":"_posts/中国共产党简史/二、五四运动和马克思主义的传播.md","raw":"---\ntitle: 第二章、五四运动和马克思主义的传播\ntags: 党史学习\ncategories: 我和我的国\ncomments: true\nsummary: 青年是标志时代的最灵敏的晴雨表，清风正气、蓬勃朝气，你我正当时。仅以此记录党史已加深学习和印象，也希望本人可以在迷茫的人生阶段静下心来。\n---\n\n![](/images/五四运动.jpg)\n\n<p>&emsp;&emsp;中华民国的成立并没有给人们带来预期的民族独立、人民民主和社会进步，沉重的失望代替了希望。旧的路走不通了，就要寻找新的出路。一些先进知识分子从总结辛亥革命经验教训着手，廓清蒙昧、启发理智，使广大民众从封建思想束缚中解脱出来。思想启蒙的新文化运动成为引发社会大变动的先导。</p>\n\n<p>&emsp;&emsp;1915年9月，陈独秀在上海创办《青年杂志》，后改名为《新青年》，新文化运动由此发端。1917年他被聘请为北京大学文科学长，《新青年》编辑部迁到北京。北京大学和《新青年》成为文化运动的主要阵地。</p>\n\n<p>&emsp;&emsp;新文化运动的基本口号是拥护“德先生”（Democracy）和“赛先生”（Science），也就是提倡民主和科学。新文化运动的倡导者以进化论观点和个性解放思想为主要武器，猛烈抨击以孔子为代表的往圣先贤，大力提倡新道德，提倡新文学、反对旧文学，包括提倡白话文、反对文言文。通过批判孔学，动摇了封建正统思想的统治地位，打开了遏制新思想涌流的闸门，在中国社会掀起一股思想解放的潮流。</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>","slug":"中国共产党简史/二、五四运动和马克思主义的传播","published":1,"date":"2024-11-05T14:59:24.457Z","updated":"2022-11-30T13:28:43.161Z","layout":"post","photos":[],"_id":"cm42hwwtn0009ssnn425s9tyr","content":"<p><img src=\"/images/%E4%BA%94%E5%9B%9B%E8%BF%90%E5%8A%A8.jpg\"></p>\n<p>&emsp;&emsp;中华民国的成立并没有给人们带来预期的民族独立、人民民主和社会进步，沉重的失望代替了希望。旧的路走不通了，就要寻找新的出路。一些先进知识分子从总结辛亥革命经验教训着手，廓清蒙昧、启发理智，使广大民众从封建思想束缚中解脱出来。思想启蒙的新文化运动成为引发社会大变动的先导。</p>\n\n<p>&emsp;&emsp;1915年9月，陈独秀在上海创办《青年杂志》，后改名为《新青年》，新文化运动由此发端。1917年他被聘请为北京大学文科学长，《新青年》编辑部迁到北京。北京大学和《新青年》成为文化运动的主要阵地。</p>\n\n<p>&emsp;&emsp;新文化运动的基本口号是拥护“德先生”（Democracy）和“赛先生”（Science），也就是提倡民主和科学。新文化运动的倡导者以进化论观点和个性解放思想为主要武器，猛烈抨击以孔子为代表的往圣先贤，大力提倡新道德，提倡新文学、反对旧文学，包括提倡白话文、反对文言文。通过批判孔学，动摇了封建正统思想的统治地位，打开了遏制新思想涌流的闸门，在中国社会掀起一股思想解放的潮流。</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>","excerpt":"","more":"<p><img src=\"/images/%E4%BA%94%E5%9B%9B%E8%BF%90%E5%8A%A8.jpg\"></p>\n<p>&emsp;&emsp;中华民国的成立并没有给人们带来预期的民族独立、人民民主和社会进步，沉重的失望代替了希望。旧的路走不通了，就要寻找新的出路。一些先进知识分子从总结辛亥革命经验教训着手，廓清蒙昧、启发理智，使广大民众从封建思想束缚中解脱出来。思想启蒙的新文化运动成为引发社会大变动的先导。</p>\n\n<p>&emsp;&emsp;1915年9月，陈独秀在上海创办《青年杂志》，后改名为《新青年》，新文化运动由此发端。1917年他被聘请为北京大学文科学长，《新青年》编辑部迁到北京。北京大学和《新青年》成为文化运动的主要阵地。</p>\n\n<p>&emsp;&emsp;新文化运动的基本口号是拥护“德先生”（Democracy）和“赛先生”（Science），也就是提倡民主和科学。新文化运动的倡导者以进化论观点和个性解放思想为主要武器，猛烈抨击以孔子为代表的往圣先贤，大力提倡新道德，提倡新文学、反对旧文学，包括提倡白话文、反对文言文。通过批判孔学，动摇了封建正统思想的统治地位，打开了遏制新思想涌流的闸门，在中国社会掀起一股思想解放的潮流。</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>\n\n<p>&emsp;&emsp;</p>"},{"title":"第一章、近代中国的艰难探索","comments":1,"summary":"青年是标志时代的最灵敏的晴雨表，清风正气、蓬勃朝气，你我正当时。仅以此记录党史已加深学习和印象，也希望本人可以在迷茫的人生阶段静下心来。","_content":"\n![](/images/党史-1.jpeg)\n\n<p>&emsp;&emsp;1921年7月的一个夜晚，中国共产党第一次全国代表大会在上海法租界一座二层居民小楼中秘密开幕，一个一个以马克思列宁主义为行动指南的、完全新式的无产阶级政党诞生了。这是开天辟地的大事变，犹如擎起的一把熊熊火炬，给近代饱受战乱、灾难深重的中国人民送来了光明和希望。从此，中国人民谋求民族独立、人民解放和国家富强、人民幸福的斗争就有了主心骨，中国人民就从精神上由被动转为主动。</p>\n\n<p>&emsp;&emsp;在几千年的历史发展中，中华民族创造了悠久灿烂的中华文明，为人类做出了卓越贡献，成为世界上伟大的民族。近代以来，由于西方列强的入侵，由于封建统治的腐败，中国逐渐成为半殖民地半封建社会，山河破碎，生灵涂炭，中华民族遭受了前所未有的苦难。</p>\n\n<p>&emsp;&emsp;从1840年开始，西方列强通过对中国的多次侵略战争（其中主要的有1840年至1842年英国侵略中国的鸦片战争，1884年至1885年法国侵略中国的战争，1894年至1895年日本侵略中国的战争，1900年八国联军侵略中国的战争）和其他方法，强迫中国割地、赔款，贪婪的攫夺中国东北、西北的领土；还勒索中国的赔款，仅支付战争赔款一项，中国就损失白银几十亿两，而当时清政府每年的财政收入才不过8000多万辆白银。西方列强通过一个比一个苛刻的不平等条约，在中国取得许多重要特权。如设立港口，租界，开矿设厂，修筑铁路，设立银行、商行，建造教堂，驻扎军队，划分势力范围，享有领事裁判权和片面最惠国待遇，等等。数以百计的不平等条约、章程、专条，像一张无所不至的巨网，从政治、经济、军事、文化等各个方面束缚着中国，使中国在西方列强无尽的索取面前寸步难行，动辄得咎，而西方列强则据此为所欲为。他们控制中国的通商口岸、海关、对外贸易、交通运输，大量的倾销其商品，把中国变成他们的产品销售市场和榨取原料的基地。</p>\n\n<p>&emsp;&emsp;英法联军火烧圆明园，甲午战争北洋舰队全军覆没，英、美、法、德、俄、日、意、澳八国联军在北京野蛮烧杀淫掠......所有这些，都给中华民族留下了难以抹去的痛苦记忆。代表地主阶级和买办资产阶级利益的清政府，日益成为外国资本主义通知中国的工具，成为一个卖国的、腐朽无能的、扼杀中国生机的政权。帝国主义和中华民族的矛盾，封建主义和人民大众的矛盾，成为近代中国社会的主要矛盾。中国人民生活在水生火热之中，展现在中华民族面前的是一片濒临毁灭的悲惨暗淡的前景。</p>\n\n<p>&emsp;&emsp;从这时起，实现中华民族伟大复兴成为全民族最伟大的梦想；争取民族独立、人民解放是实现国家富强、人民幸福，成为中国人民的历史人物。中华民族有着自强不息的光荣传统，为了捍卫民族独立和尊严，捍卫中华文明，从未停止过抗争。在中国共产党成立以前，有许多献身于民族进步事业的爱国先驱，为了改变祖国的境遇和命运，前赴后继、不懈探索。可是，历次反对外国的侵略战争也好，太平天国的农民起义也好，“中体西用”的洋务运动也好，试图变法图强的戊戌维新也好，起自社会下层并有着广泛群众规模的义和团运动也好，由于没有找到科学的理论、正确的道路和可依靠的社会力量，一次又一次的失败了，无数志士仁人为此而抱终天之恨。</p>\n\n<p>&emsp;&emsp;1911年10月爆发的辛亥革命，推翻了清王朝的统治，建立了中华民国，结束了统治中国两千多年的君主专制制度。孙中山领导的辛亥革命虽然没有改变旧中国半封建半殖民地的社会性质，没有改变中国人民的悲惨命运，没有完成实现民族独立、人民解放的历史任务，但开创了完全意义上的近代民族民主革命，打开了中国进步的闸门，传播了民主共和理念，极大推动了中华民族思想解放，以巨大的震撼力和影响力推动了中国社会的变革，使反动统治秩序再也无法稳定下来。</p>\n\n<p>&emsp;&emsp;现实有时是残酷的，以袁世凯为首的北洋军阀，在帝国主义和国内反动势力的支持下，窃取了辛亥革命的果实，初生的资产阶级共和国在中国只存在了几个月即告夭折。袁世凯死后，北洋军阀分化为直、皖、奉三系。在帝国主义列强的操纵下，中国陷入了四分五裂的军阀割据和军阀混战的年代。在封建军阀专制统治下，中国在半殖民地半封建社会的深渊中愈陷愈深。</p>\n\n<p>&emsp;&emsp;无量金钱无量血，可怜购得假共和。辛亥革命之后，中国尝试过帝制复辟、议会制、多党制、总统制等各种形式，各种政治势力及其代表任务纷纷登场，都没能找到正确答案，就中国的社会性质和中国人民的悲惨命运没有改变。中国依然是山河破碎、积贫积弱，列强依然在中国横行霸道、攫取利益，中国人民依然生活在苦难和屈辱之中。</p>\n\n<p>&emsp;&emsp;历史充分证明：没有先进理论的指导，没有用先进理论武装起来的先进政党的领导，没有先进政党顺应历史潮流、勇担历史重任、敢于做出巨大牺牲，中国人命就无法打败压在自己头上的各种反动派，中华民族就无法改变被压迫、被奴役的命运。</p>\n\n<p>&emsp;&emsp;历史呼唤着真正能够带领中华民族实现伟大复兴的使命的承担着，这个任务光荣的落到了先进生产力的代表-中国工人阶级的肩上。</p>\n","source":"_posts/中国共产党简史/一、近代中国民族复兴的艰难探索.md","raw":"---\ntitle: 第一章、近代中国的艰难探索\ntags: 党史学习\ncategories: 我和我的国\ncomments: true\nsummary: 青年是标志时代的最灵敏的晴雨表，清风正气、蓬勃朝气，你我正当时。仅以此记录党史已加深学习和印象，也希望本人可以在迷茫的人生阶段静下心来。\n---\n\n![](/images/党史-1.jpeg)\n\n<p>&emsp;&emsp;1921年7月的一个夜晚，中国共产党第一次全国代表大会在上海法租界一座二层居民小楼中秘密开幕，一个一个以马克思列宁主义为行动指南的、完全新式的无产阶级政党诞生了。这是开天辟地的大事变，犹如擎起的一把熊熊火炬，给近代饱受战乱、灾难深重的中国人民送来了光明和希望。从此，中国人民谋求民族独立、人民解放和国家富强、人民幸福的斗争就有了主心骨，中国人民就从精神上由被动转为主动。</p>\n\n<p>&emsp;&emsp;在几千年的历史发展中，中华民族创造了悠久灿烂的中华文明，为人类做出了卓越贡献，成为世界上伟大的民族。近代以来，由于西方列强的入侵，由于封建统治的腐败，中国逐渐成为半殖民地半封建社会，山河破碎，生灵涂炭，中华民族遭受了前所未有的苦难。</p>\n\n<p>&emsp;&emsp;从1840年开始，西方列强通过对中国的多次侵略战争（其中主要的有1840年至1842年英国侵略中国的鸦片战争，1884年至1885年法国侵略中国的战争，1894年至1895年日本侵略中国的战争，1900年八国联军侵略中国的战争）和其他方法，强迫中国割地、赔款，贪婪的攫夺中国东北、西北的领土；还勒索中国的赔款，仅支付战争赔款一项，中国就损失白银几十亿两，而当时清政府每年的财政收入才不过8000多万辆白银。西方列强通过一个比一个苛刻的不平等条约，在中国取得许多重要特权。如设立港口，租界，开矿设厂，修筑铁路，设立银行、商行，建造教堂，驻扎军队，划分势力范围，享有领事裁判权和片面最惠国待遇，等等。数以百计的不平等条约、章程、专条，像一张无所不至的巨网，从政治、经济、军事、文化等各个方面束缚着中国，使中国在西方列强无尽的索取面前寸步难行，动辄得咎，而西方列强则据此为所欲为。他们控制中国的通商口岸、海关、对外贸易、交通运输，大量的倾销其商品，把中国变成他们的产品销售市场和榨取原料的基地。</p>\n\n<p>&emsp;&emsp;英法联军火烧圆明园，甲午战争北洋舰队全军覆没，英、美、法、德、俄、日、意、澳八国联军在北京野蛮烧杀淫掠......所有这些，都给中华民族留下了难以抹去的痛苦记忆。代表地主阶级和买办资产阶级利益的清政府，日益成为外国资本主义通知中国的工具，成为一个卖国的、腐朽无能的、扼杀中国生机的政权。帝国主义和中华民族的矛盾，封建主义和人民大众的矛盾，成为近代中国社会的主要矛盾。中国人民生活在水生火热之中，展现在中华民族面前的是一片濒临毁灭的悲惨暗淡的前景。</p>\n\n<p>&emsp;&emsp;从这时起，实现中华民族伟大复兴成为全民族最伟大的梦想；争取民族独立、人民解放是实现国家富强、人民幸福，成为中国人民的历史人物。中华民族有着自强不息的光荣传统，为了捍卫民族独立和尊严，捍卫中华文明，从未停止过抗争。在中国共产党成立以前，有许多献身于民族进步事业的爱国先驱，为了改变祖国的境遇和命运，前赴后继、不懈探索。可是，历次反对外国的侵略战争也好，太平天国的农民起义也好，“中体西用”的洋务运动也好，试图变法图强的戊戌维新也好，起自社会下层并有着广泛群众规模的义和团运动也好，由于没有找到科学的理论、正确的道路和可依靠的社会力量，一次又一次的失败了，无数志士仁人为此而抱终天之恨。</p>\n\n<p>&emsp;&emsp;1911年10月爆发的辛亥革命，推翻了清王朝的统治，建立了中华民国，结束了统治中国两千多年的君主专制制度。孙中山领导的辛亥革命虽然没有改变旧中国半封建半殖民地的社会性质，没有改变中国人民的悲惨命运，没有完成实现民族独立、人民解放的历史任务，但开创了完全意义上的近代民族民主革命，打开了中国进步的闸门，传播了民主共和理念，极大推动了中华民族思想解放，以巨大的震撼力和影响力推动了中国社会的变革，使反动统治秩序再也无法稳定下来。</p>\n\n<p>&emsp;&emsp;现实有时是残酷的，以袁世凯为首的北洋军阀，在帝国主义和国内反动势力的支持下，窃取了辛亥革命的果实，初生的资产阶级共和国在中国只存在了几个月即告夭折。袁世凯死后，北洋军阀分化为直、皖、奉三系。在帝国主义列强的操纵下，中国陷入了四分五裂的军阀割据和军阀混战的年代。在封建军阀专制统治下，中国在半殖民地半封建社会的深渊中愈陷愈深。</p>\n\n<p>&emsp;&emsp;无量金钱无量血，可怜购得假共和。辛亥革命之后，中国尝试过帝制复辟、议会制、多党制、总统制等各种形式，各种政治势力及其代表任务纷纷登场，都没能找到正确答案，就中国的社会性质和中国人民的悲惨命运没有改变。中国依然是山河破碎、积贫积弱，列强依然在中国横行霸道、攫取利益，中国人民依然生活在苦难和屈辱之中。</p>\n\n<p>&emsp;&emsp;历史充分证明：没有先进理论的指导，没有用先进理论武装起来的先进政党的领导，没有先进政党顺应历史潮流、勇担历史重任、敢于做出巨大牺牲，中国人命就无法打败压在自己头上的各种反动派，中华民族就无法改变被压迫、被奴役的命运。</p>\n\n<p>&emsp;&emsp;历史呼唤着真正能够带领中华民族实现伟大复兴的使命的承担着，这个任务光荣的落到了先进生产力的代表-中国工人阶级的肩上。</p>\n","slug":"中国共产党简史/一、近代中国民族复兴的艰难探索","published":1,"date":"2024-11-05T14:59:24.455Z","updated":"2022-11-30T13:28:36.934Z","layout":"post","photos":[],"_id":"cm42hwwto000bssnngbj0gtem","content":"<p><img src=\"/images/%E5%85%9A%E5%8F%B2-1.jpeg\"></p>\n<p>&emsp;&emsp;1921年7月的一个夜晚，中国共产党第一次全国代表大会在上海法租界一座二层居民小楼中秘密开幕，一个一个以马克思列宁主义为行动指南的、完全新式的无产阶级政党诞生了。这是开天辟地的大事变，犹如擎起的一把熊熊火炬，给近代饱受战乱、灾难深重的中国人民送来了光明和希望。从此，中国人民谋求民族独立、人民解放和国家富强、人民幸福的斗争就有了主心骨，中国人民就从精神上由被动转为主动。</p>\n\n<p>&emsp;&emsp;在几千年的历史发展中，中华民族创造了悠久灿烂的中华文明，为人类做出了卓越贡献，成为世界上伟大的民族。近代以来，由于西方列强的入侵，由于封建统治的腐败，中国逐渐成为半殖民地半封建社会，山河破碎，生灵涂炭，中华民族遭受了前所未有的苦难。</p>\n\n<p>&emsp;&emsp;从1840年开始，西方列强通过对中国的多次侵略战争（其中主要的有1840年至1842年英国侵略中国的鸦片战争，1884年至1885年法国侵略中国的战争，1894年至1895年日本侵略中国的战争，1900年八国联军侵略中国的战争）和其他方法，强迫中国割地、赔款，贪婪的攫夺中国东北、西北的领土；还勒索中国的赔款，仅支付战争赔款一项，中国就损失白银几十亿两，而当时清政府每年的财政收入才不过8000多万辆白银。西方列强通过一个比一个苛刻的不平等条约，在中国取得许多重要特权。如设立港口，租界，开矿设厂，修筑铁路，设立银行、商行，建造教堂，驻扎军队，划分势力范围，享有领事裁判权和片面最惠国待遇，等等。数以百计的不平等条约、章程、专条，像一张无所不至的巨网，从政治、经济、军事、文化等各个方面束缚着中国，使中国在西方列强无尽的索取面前寸步难行，动辄得咎，而西方列强则据此为所欲为。他们控制中国的通商口岸、海关、对外贸易、交通运输，大量的倾销其商品，把中国变成他们的产品销售市场和榨取原料的基地。</p>\n\n<p>&emsp;&emsp;英法联军火烧圆明园，甲午战争北洋舰队全军覆没，英、美、法、德、俄、日、意、澳八国联军在北京野蛮烧杀淫掠......所有这些，都给中华民族留下了难以抹去的痛苦记忆。代表地主阶级和买办资产阶级利益的清政府，日益成为外国资本主义通知中国的工具，成为一个卖国的、腐朽无能的、扼杀中国生机的政权。帝国主义和中华民族的矛盾，封建主义和人民大众的矛盾，成为近代中国社会的主要矛盾。中国人民生活在水生火热之中，展现在中华民族面前的是一片濒临毁灭的悲惨暗淡的前景。</p>\n\n<p>&emsp;&emsp;从这时起，实现中华民族伟大复兴成为全民族最伟大的梦想；争取民族独立、人民解放是实现国家富强、人民幸福，成为中国人民的历史人物。中华民族有着自强不息的光荣传统，为了捍卫民族独立和尊严，捍卫中华文明，从未停止过抗争。在中国共产党成立以前，有许多献身于民族进步事业的爱国先驱，为了改变祖国的境遇和命运，前赴后继、不懈探索。可是，历次反对外国的侵略战争也好，太平天国的农民起义也好，“中体西用”的洋务运动也好，试图变法图强的戊戌维新也好，起自社会下层并有着广泛群众规模的义和团运动也好，由于没有找到科学的理论、正确的道路和可依靠的社会力量，一次又一次的失败了，无数志士仁人为此而抱终天之恨。</p>\n\n<p>&emsp;&emsp;1911年10月爆发的辛亥革命，推翻了清王朝的统治，建立了中华民国，结束了统治中国两千多年的君主专制制度。孙中山领导的辛亥革命虽然没有改变旧中国半封建半殖民地的社会性质，没有改变中国人民的悲惨命运，没有完成实现民族独立、人民解放的历史任务，但开创了完全意义上的近代民族民主革命，打开了中国进步的闸门，传播了民主共和理念，极大推动了中华民族思想解放，以巨大的震撼力和影响力推动了中国社会的变革，使反动统治秩序再也无法稳定下来。</p>\n\n<p>&emsp;&emsp;现实有时是残酷的，以袁世凯为首的北洋军阀，在帝国主义和国内反动势力的支持下，窃取了辛亥革命的果实，初生的资产阶级共和国在中国只存在了几个月即告夭折。袁世凯死后，北洋军阀分化为直、皖、奉三系。在帝国主义列强的操纵下，中国陷入了四分五裂的军阀割据和军阀混战的年代。在封建军阀专制统治下，中国在半殖民地半封建社会的深渊中愈陷愈深。</p>\n\n<p>&emsp;&emsp;无量金钱无量血，可怜购得假共和。辛亥革命之后，中国尝试过帝制复辟、议会制、多党制、总统制等各种形式，各种政治势力及其代表任务纷纷登场，都没能找到正确答案，就中国的社会性质和中国人民的悲惨命运没有改变。中国依然是山河破碎、积贫积弱，列强依然在中国横行霸道、攫取利益，中国人民依然生活在苦难和屈辱之中。</p>\n\n<p>&emsp;&emsp;历史充分证明：没有先进理论的指导，没有用先进理论武装起来的先进政党的领导，没有先进政党顺应历史潮流、勇担历史重任、敢于做出巨大牺牲，中国人命就无法打败压在自己头上的各种反动派，中华民族就无法改变被压迫、被奴役的命运。</p>\n\n<p>&emsp;&emsp;历史呼唤着真正能够带领中华民族实现伟大复兴的使命的承担着，这个任务光荣的落到了先进生产力的代表-中国工人阶级的肩上。</p>\n","excerpt":"","more":"<p><img src=\"/images/%E5%85%9A%E5%8F%B2-1.jpeg\"></p>\n<p>&emsp;&emsp;1921年7月的一个夜晚，中国共产党第一次全国代表大会在上海法租界一座二层居民小楼中秘密开幕，一个一个以马克思列宁主义为行动指南的、完全新式的无产阶级政党诞生了。这是开天辟地的大事变，犹如擎起的一把熊熊火炬，给近代饱受战乱、灾难深重的中国人民送来了光明和希望。从此，中国人民谋求民族独立、人民解放和国家富强、人民幸福的斗争就有了主心骨，中国人民就从精神上由被动转为主动。</p>\n\n<p>&emsp;&emsp;在几千年的历史发展中，中华民族创造了悠久灿烂的中华文明，为人类做出了卓越贡献，成为世界上伟大的民族。近代以来，由于西方列强的入侵，由于封建统治的腐败，中国逐渐成为半殖民地半封建社会，山河破碎，生灵涂炭，中华民族遭受了前所未有的苦难。</p>\n\n<p>&emsp;&emsp;从1840年开始，西方列强通过对中国的多次侵略战争（其中主要的有1840年至1842年英国侵略中国的鸦片战争，1884年至1885年法国侵略中国的战争，1894年至1895年日本侵略中国的战争，1900年八国联军侵略中国的战争）和其他方法，强迫中国割地、赔款，贪婪的攫夺中国东北、西北的领土；还勒索中国的赔款，仅支付战争赔款一项，中国就损失白银几十亿两，而当时清政府每年的财政收入才不过8000多万辆白银。西方列强通过一个比一个苛刻的不平等条约，在中国取得许多重要特权。如设立港口，租界，开矿设厂，修筑铁路，设立银行、商行，建造教堂，驻扎军队，划分势力范围，享有领事裁判权和片面最惠国待遇，等等。数以百计的不平等条约、章程、专条，像一张无所不至的巨网，从政治、经济、军事、文化等各个方面束缚着中国，使中国在西方列强无尽的索取面前寸步难行，动辄得咎，而西方列强则据此为所欲为。他们控制中国的通商口岸、海关、对外贸易、交通运输，大量的倾销其商品，把中国变成他们的产品销售市场和榨取原料的基地。</p>\n\n<p>&emsp;&emsp;英法联军火烧圆明园，甲午战争北洋舰队全军覆没，英、美、法、德、俄、日、意、澳八国联军在北京野蛮烧杀淫掠......所有这些，都给中华民族留下了难以抹去的痛苦记忆。代表地主阶级和买办资产阶级利益的清政府，日益成为外国资本主义通知中国的工具，成为一个卖国的、腐朽无能的、扼杀中国生机的政权。帝国主义和中华民族的矛盾，封建主义和人民大众的矛盾，成为近代中国社会的主要矛盾。中国人民生活在水生火热之中，展现在中华民族面前的是一片濒临毁灭的悲惨暗淡的前景。</p>\n\n<p>&emsp;&emsp;从这时起，实现中华民族伟大复兴成为全民族最伟大的梦想；争取民族独立、人民解放是实现国家富强、人民幸福，成为中国人民的历史人物。中华民族有着自强不息的光荣传统，为了捍卫民族独立和尊严，捍卫中华文明，从未停止过抗争。在中国共产党成立以前，有许多献身于民族进步事业的爱国先驱，为了改变祖国的境遇和命运，前赴后继、不懈探索。可是，历次反对外国的侵略战争也好，太平天国的农民起义也好，“中体西用”的洋务运动也好，试图变法图强的戊戌维新也好，起自社会下层并有着广泛群众规模的义和团运动也好，由于没有找到科学的理论、正确的道路和可依靠的社会力量，一次又一次的失败了，无数志士仁人为此而抱终天之恨。</p>\n\n<p>&emsp;&emsp;1911年10月爆发的辛亥革命，推翻了清王朝的统治，建立了中华民国，结束了统治中国两千多年的君主专制制度。孙中山领导的辛亥革命虽然没有改变旧中国半封建半殖民地的社会性质，没有改变中国人民的悲惨命运，没有完成实现民族独立、人民解放的历史任务，但开创了完全意义上的近代民族民主革命，打开了中国进步的闸门，传播了民主共和理念，极大推动了中华民族思想解放，以巨大的震撼力和影响力推动了中国社会的变革，使反动统治秩序再也无法稳定下来。</p>\n\n<p>&emsp;&emsp;现实有时是残酷的，以袁世凯为首的北洋军阀，在帝国主义和国内反动势力的支持下，窃取了辛亥革命的果实，初生的资产阶级共和国在中国只存在了几个月即告夭折。袁世凯死后，北洋军阀分化为直、皖、奉三系。在帝国主义列强的操纵下，中国陷入了四分五裂的军阀割据和军阀混战的年代。在封建军阀专制统治下，中国在半殖民地半封建社会的深渊中愈陷愈深。</p>\n\n<p>&emsp;&emsp;无量金钱无量血，可怜购得假共和。辛亥革命之后，中国尝试过帝制复辟、议会制、多党制、总统制等各种形式，各种政治势力及其代表任务纷纷登场，都没能找到正确答案，就中国的社会性质和中国人民的悲惨命运没有改变。中国依然是山河破碎、积贫积弱，列强依然在中国横行霸道、攫取利益，中国人民依然生活在苦难和屈辱之中。</p>\n\n<p>&emsp;&emsp;历史充分证明：没有先进理论的指导，没有用先进理论武装起来的先进政党的领导，没有先进政党顺应历史潮流、勇担历史重任、敢于做出巨大牺牲，中国人命就无法打败压在自己头上的各种反动派，中华民族就无法改变被压迫、被奴役的命运。</p>\n\n<p>&emsp;&emsp;历史呼唤着真正能够带领中华民族实现伟大复兴的使命的承担着，这个任务光荣的落到了先进生产力的代表-中国工人阶级的肩上。</p>\n"},{"title":"十二、在线预览Word","comments":1,"_content":"\n# 一、在线浏览word并下载\n\n## 1、简单介绍\n<p>&emsp;&emsp;上篇文章介绍了在线浏览pdf工具，今天来写一篇在线浏览word并支持下载功能。我真是又努力又聪明啊。。。简直是放屁，其实是甲方爸爸改需求了，pdf变成word了，完了我那个pdf刚弄好，正开心着呢。害，我这小垃圾没弄过word啊，又去问了老大，哈哈哈哈哈哈哈哈。。。好吧弄好了，来记录下的。。。。。。</p>\n\n## 2、实现流程\n### 2.1、基本步骤\n<p>&emsp;&emsp;首先啊，一样的，我们也是要上传word文档的啦,上传过word之后啊，我们一样拿到后端返回的文件标识：xxxxxxxxxxx.doc</p>\n\n<p>&emsp;&emsp;那么怎么预览呢，我这里是用的v-html属性，因为调用的接口后端返回的是xml字符串。我来说一下步骤：首先你得自己配置一个路由，因为你要打开新的网页必须有地址，那么你得配一个路由地址，这个地址指向你新建的一个.vue文件，那么就是在这个文件里拿到xml字符串并显示的。随后啊，我们点击按钮（在新窗口打开word）。注意看哪个路径，我这里是路由路径拼接上了两个参数，因为我们要在新建的vue里调用接口，但是参数是在其他的.vue文件的，那么怎么把参数传过去的，这里我用的就是通过路由来传参。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <Upload ref=\"uploadStandardWord\" style=\"display:inline-block\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"exceededSizeFun\" :on-format-error=\"formatError\" :on-success=\"(response)=>handleSuccess(response)\" :on-error=\"handleError\">\n    </Upload>\n    <button @click=\"openPDF\">在新窗口打开word</button>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\nimport { getWordData } from '@/assets/js/utils';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  uploadObj: {\n    action: string;\n    accept: string;\n    maxSize: number;\n    format: Array<string>;\n    data: any;\n  } = {\n      action: '/graphApi/api/v1/common/source/file/upload',\n      accept: '.doc, .docx',\n      format: ['doc', 'docx'],\n      maxSize: 1024 * 1024,\n      data: {}\n    }\n\n  public openPDF() {\n    window.open(`#/home/atlasManage/viewWord?identifier=${this.currentRow.identifier}&path=${this.currentRow.specifications[0].value}`);\n  }\n}\n<script>\n```\n\n<p>&emsp;&emsp;欧凯哦开，上个文件我们点击后要打开一个新的网页了，那么这个网页就是指向一个.vue文件嘛。。这个文件是这样的。我们通过路由拿到参数，然后拿参数调用接口，这个data啊，就是后端返回的xml字符串。</p>\n\n<p>&emsp;&emsp;最后加一个下载功能，那么下载功能啊，当然是要接口的路径的，然后拼接上我这里是标识和path(上传后返回的文件标识：xxxxxxx.doc)，这两个都是从路由里拿的。所以你看到了吧，在上一个文件，我们在路由路径里拼接了两个参数，是用的上滴。。。因为这个本身是一个下载路径，多以window.open打开后就会自动下载拉，真棒。。。。。</p>\n\n```javascript\n<template>\n  <div>\n    <div v-html=\"data\"></div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component} from 'vue-property-decorator';\nimport { sjRollMakingWordView } from '@/http/api/Atlas';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class ViewWord extends Vue {\n\n  data: any = '';\n\n  public async viewWordContent() {\n    const tempQuery = this.$route.query;\n    const params = {\n      identifier: tempQuery.identifier,//一个标识，每个项目参数不同不用太在意\n      path: tempQuery.path//上传后返回的文件标识：xxxxxxx.doc\n    }\n    const res = await sjRollMakingWordView(params);\n    if(res) {\n      this.data = res.data;\n    }\n  }\n\n  public async downLoadWord() {\n    const tempQuery = this.$route.query;\n    window.open(`/graphApi/api/v1/common/source/file/download?identifier=${tempQuery.identifier}&path=${tempQuery.path}`);\n  }\n\n  mounted () {\n    this.viewWordContent()\n  }\n  \n}\n</script>\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n<p>&emsp;&emsp;</p>\n<p>&emsp;&emsp;</p>\n<p>&emsp;&emsp;</p>\n<p>&emsp;&emsp;</p>","source":"_posts/工作知识总结/工作知识难点摘要系列-12、在线浏览word并下载.md","raw":"---\ntitle: 十二、在线预览Word\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 一、在线浏览word并下载\n\n## 1、简单介绍\n<p>&emsp;&emsp;上篇文章介绍了在线浏览pdf工具，今天来写一篇在线浏览word并支持下载功能。我真是又努力又聪明啊。。。简直是放屁，其实是甲方爸爸改需求了，pdf变成word了，完了我那个pdf刚弄好，正开心着呢。害，我这小垃圾没弄过word啊，又去问了老大，哈哈哈哈哈哈哈哈。。。好吧弄好了，来记录下的。。。。。。</p>\n\n## 2、实现流程\n### 2.1、基本步骤\n<p>&emsp;&emsp;首先啊，一样的，我们也是要上传word文档的啦,上传过word之后啊，我们一样拿到后端返回的文件标识：xxxxxxxxxxx.doc</p>\n\n<p>&emsp;&emsp;那么怎么预览呢，我这里是用的v-html属性，因为调用的接口后端返回的是xml字符串。我来说一下步骤：首先你得自己配置一个路由，因为你要打开新的网页必须有地址，那么你得配一个路由地址，这个地址指向你新建的一个.vue文件，那么就是在这个文件里拿到xml字符串并显示的。随后啊，我们点击按钮（在新窗口打开word）。注意看哪个路径，我这里是路由路径拼接上了两个参数，因为我们要在新建的vue里调用接口，但是参数是在其他的.vue文件的，那么怎么把参数传过去的，这里我用的就是通过路由来传参。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <Upload ref=\"uploadStandardWord\" style=\"display:inline-block\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"exceededSizeFun\" :on-format-error=\"formatError\" :on-success=\"(response)=>handleSuccess(response)\" :on-error=\"handleError\">\n    </Upload>\n    <button @click=\"openPDF\">在新窗口打开word</button>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\nimport { getWordData } from '@/assets/js/utils';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  uploadObj: {\n    action: string;\n    accept: string;\n    maxSize: number;\n    format: Array<string>;\n    data: any;\n  } = {\n      action: '/graphApi/api/v1/common/source/file/upload',\n      accept: '.doc, .docx',\n      format: ['doc', 'docx'],\n      maxSize: 1024 * 1024,\n      data: {}\n    }\n\n  public openPDF() {\n    window.open(`#/home/atlasManage/viewWord?identifier=${this.currentRow.identifier}&path=${this.currentRow.specifications[0].value}`);\n  }\n}\n<script>\n```\n\n<p>&emsp;&emsp;欧凯哦开，上个文件我们点击后要打开一个新的网页了，那么这个网页就是指向一个.vue文件嘛。。这个文件是这样的。我们通过路由拿到参数，然后拿参数调用接口，这个data啊，就是后端返回的xml字符串。</p>\n\n<p>&emsp;&emsp;最后加一个下载功能，那么下载功能啊，当然是要接口的路径的，然后拼接上我这里是标识和path(上传后返回的文件标识：xxxxxxx.doc)，这两个都是从路由里拿的。所以你看到了吧，在上一个文件，我们在路由路径里拼接了两个参数，是用的上滴。。。因为这个本身是一个下载路径，多以window.open打开后就会自动下载拉，真棒。。。。。</p>\n\n```javascript\n<template>\n  <div>\n    <div v-html=\"data\"></div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component} from 'vue-property-decorator';\nimport { sjRollMakingWordView } from '@/http/api/Atlas';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class ViewWord extends Vue {\n\n  data: any = '';\n\n  public async viewWordContent() {\n    const tempQuery = this.$route.query;\n    const params = {\n      identifier: tempQuery.identifier,//一个标识，每个项目参数不同不用太在意\n      path: tempQuery.path//上传后返回的文件标识：xxxxxxx.doc\n    }\n    const res = await sjRollMakingWordView(params);\n    if(res) {\n      this.data = res.data;\n    }\n  }\n\n  public async downLoadWord() {\n    const tempQuery = this.$route.query;\n    window.open(`/graphApi/api/v1/common/source/file/download?identifier=${tempQuery.identifier}&path=${tempQuery.path}`);\n  }\n\n  mounted () {\n    this.viewWordContent()\n  }\n  \n}\n</script>\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n<p>&emsp;&emsp;</p>\n<p>&emsp;&emsp;</p>\n<p>&emsp;&emsp;</p>\n<p>&emsp;&emsp;</p>","slug":"工作知识总结/工作知识难点摘要系列-12、在线浏览word并下载","published":1,"date":"2024-11-05T14:59:24.481Z","updated":"2022-12-17T09:41:17.932Z","layout":"post","photos":[],"_id":"cm42hwwtr000gssnn0fzb8yul","content":"<h1 id=\"一、在线浏览word并下载\"><a href=\"#一、在线浏览word并下载\" class=\"headerlink\" title=\"一、在线浏览word并下载\"></a>一、在线浏览word并下载</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;上篇文章介绍了在线浏览pdf工具，今天来写一篇在线浏览word并支持下载功能。我真是又努力又聪明啊。。。简直是放屁，其实是甲方爸爸改需求了，pdf变成word了，完了我那个pdf刚弄好，正开心着呢。害，我这小垃圾没弄过word啊，又去问了老大，哈哈哈哈哈哈哈哈。。。好吧弄好了，来记录下的。。。。。。</p>\n\n<h2 id=\"2、实现流程\"><a href=\"#2、实现流程\" class=\"headerlink\" title=\"2、实现流程\"></a>2、实现流程</h2><h3 id=\"2-1、基本步骤\"><a href=\"#2-1、基本步骤\" class=\"headerlink\" title=\"2.1、基本步骤\"></a>2.1、基本步骤</h3><p>&emsp;&emsp;首先啊，一样的，我们也是要上传word文档的啦,上传过word之后啊，我们一样拿到后端返回的文件标识：xxxxxxxxxxx.doc</p>\n\n<p>&emsp;&emsp;那么怎么预览呢，我这里是用的v-html属性，因为调用的接口后端返回的是xml字符串。我来说一下步骤：首先你得自己配置一个路由，因为你要打开新的网页必须有地址，那么你得配一个路由地址，这个地址指向你新建的一个.vue文件，那么就是在这个文件里拿到xml字符串并显示的。随后啊，我们点击按钮（在新窗口打开word）。注意看哪个路径，我这里是路由路径拼接上了两个参数，因为我们要在新建的vue里调用接口，但是参数是在其他的.vue文件的，那么怎么把参数传过去的，这里我用的就是通过路由来传参。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"uploadStandardWord\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"display:inline-block\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"exceededSizeFun\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"formatError\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"openPDF\"</span><span class=\"token operator\">></span>在新窗口打开word<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getWordData <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/assets/js/utils'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">uploadObj</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token string\">'/graphApi/api/v1/common/source/file/upload'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> <span class=\"token string\">'.doc, .docx'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'doc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'docx'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">openPDF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#/home/atlasManage/viewWord?identifier=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentRow<span class=\"token punctuation\">.</span>identifier<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&amp;path=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentRow<span class=\"token punctuation\">.</span>specifications<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<p>&emsp;&emsp;欧凯哦开，上个文件我们点击后要打开一个新的网页了，那么这个网页就是指向一个.vue文件嘛。。这个文件是这样的。我们通过路由拿到参数，然后拿参数调用接口，这个data啊，就是后端返回的xml字符串。</p>\n\n<p>&emsp;&emsp;最后加一个下载功能，那么下载功能啊，当然是要接口的路径的，然后拼接上我这里是标识和path(上传后返回的文件标识：xxxxxxx.doc)，这两个都是从路由里拿的。所以你看到了吧，在上一个文件，我们在路由路径里拼接了两个参数，是用的上滴。。。因为这个本身是一个下载路径，多以window.open打开后就会自动下载拉，真棒。。。。。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div v<span class=\"token operator\">-</span>html<span class=\"token operator\">=</span><span class=\"token string\">\"data\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> sjRollMakingWordView <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/http/api/Atlas'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ViewWord</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">viewWordContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> tempQuery <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">identifier</span><span class=\"token operator\">:</span> tempQuery<span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">,</span><span class=\"token comment\">//一个标识，每个项目参数不同不用太在意</span>\n      <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> tempQuery<span class=\"token punctuation\">.</span>path<span class=\"token comment\">//上传后返回的文件标识：xxxxxxx.doc</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">sjRollMakingWordView</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">downLoadWord</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> tempQuery <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/graphApi/api/v1/common/source/file/download?identifier=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>tempQuery<span class=\"token punctuation\">.</span>identifier<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&amp;path=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>tempQuery<span class=\"token punctuation\">.</span>path<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">viewWordContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<p>&emsp;&emsp;</p>\n<p>&emsp;&emsp;</p>\n<p>&emsp;&emsp;</p>\n<p>&emsp;&emsp;</p>","excerpt":"","more":"<h1 id=\"一、在线浏览word并下载\"><a href=\"#一、在线浏览word并下载\" class=\"headerlink\" title=\"一、在线浏览word并下载\"></a>一、在线浏览word并下载</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;上篇文章介绍了在线浏览pdf工具，今天来写一篇在线浏览word并支持下载功能。我真是又努力又聪明啊。。。简直是放屁，其实是甲方爸爸改需求了，pdf变成word了，完了我那个pdf刚弄好，正开心着呢。害，我这小垃圾没弄过word啊，又去问了老大，哈哈哈哈哈哈哈哈。。。好吧弄好了，来记录下的。。。。。。</p>\n\n<h2 id=\"2、实现流程\"><a href=\"#2、实现流程\" class=\"headerlink\" title=\"2、实现流程\"></a>2、实现流程</h2><h3 id=\"2-1、基本步骤\"><a href=\"#2-1、基本步骤\" class=\"headerlink\" title=\"2.1、基本步骤\"></a>2.1、基本步骤</h3><p>&emsp;&emsp;首先啊，一样的，我们也是要上传word文档的啦,上传过word之后啊，我们一样拿到后端返回的文件标识：xxxxxxxxxxx.doc</p>\n\n<p>&emsp;&emsp;那么怎么预览呢，我这里是用的v-html属性，因为调用的接口后端返回的是xml字符串。我来说一下步骤：首先你得自己配置一个路由，因为你要打开新的网页必须有地址，那么你得配一个路由地址，这个地址指向你新建的一个.vue文件，那么就是在这个文件里拿到xml字符串并显示的。随后啊，我们点击按钮（在新窗口打开word）。注意看哪个路径，我这里是路由路径拼接上了两个参数，因为我们要在新建的vue里调用接口，但是参数是在其他的.vue文件的，那么怎么把参数传过去的，这里我用的就是通过路由来传参。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"uploadStandardWord\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"display:inline-block\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"exceededSizeFun\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"formatError\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"openPDF\"</span><span class=\"token operator\">></span>在新窗口打开word<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getWordData <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/assets/js/utils'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">uploadObj</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token string\">'/graphApi/api/v1/common/source/file/upload'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> <span class=\"token string\">'.doc, .docx'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'doc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'docx'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">openPDF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#/home/atlasManage/viewWord?identifier=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentRow<span class=\"token punctuation\">.</span>identifier<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&amp;path=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentRow<span class=\"token punctuation\">.</span>specifications<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<p>&emsp;&emsp;欧凯哦开，上个文件我们点击后要打开一个新的网页了，那么这个网页就是指向一个.vue文件嘛。。这个文件是这样的。我们通过路由拿到参数，然后拿参数调用接口，这个data啊，就是后端返回的xml字符串。</p>\n\n<p>&emsp;&emsp;最后加一个下载功能，那么下载功能啊，当然是要接口的路径的，然后拼接上我这里是标识和path(上传后返回的文件标识：xxxxxxx.doc)，这两个都是从路由里拿的。所以你看到了吧，在上一个文件，我们在路由路径里拼接了两个参数，是用的上滴。。。因为这个本身是一个下载路径，多以window.open打开后就会自动下载拉，真棒。。。。。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div v<span class=\"token operator\">-</span>html<span class=\"token operator\">=</span><span class=\"token string\">\"data\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> sjRollMakingWordView <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/http/api/Atlas'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ViewWord</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">viewWordContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> tempQuery <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">identifier</span><span class=\"token operator\">:</span> tempQuery<span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">,</span><span class=\"token comment\">//一个标识，每个项目参数不同不用太在意</span>\n      <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> tempQuery<span class=\"token punctuation\">.</span>path<span class=\"token comment\">//上传后返回的文件标识：xxxxxxx.doc</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">sjRollMakingWordView</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">downLoadWord</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> tempQuery <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/graphApi/api/v1/common/source/file/download?identifier=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>tempQuery<span class=\"token punctuation\">.</span>identifier<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&amp;path=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>tempQuery<span class=\"token punctuation\">.</span>path<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">viewWordContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<p>&emsp;&emsp;</p>\n<p>&emsp;&emsp;</p>\n<p>&emsp;&emsp;</p>\n<p>&emsp;&emsp;</p>"},{"title":"十、数据流传递框架","comments":1,"_content":"\n# 一、数据流传递框架\n\n## 1、简单介绍\n<p>&emsp;&emsp;先说一下为啥写这个都咚咚，主要是想了解一下在开发一个完整模块的时候怎么实现数据的收集，上传，逐层传递后的渲染，帮助自己理解整个模块的开发。偷偷学习了组内大佬的开发思路，不能被露哥发现喽，偷学。。。哈哈哈哈！！！感谢露哥，感谢露哥，感谢露哥，嘿嘿嘿！！！</p>\n\n## 2、基本框架\n<p>&emsp;&emsp;首先，我们来看一下整体的HTML的结构，父组件套子组件，子组件再套子组件，那我们我们的数据是在第一层组件请求来的，所以我们的数据是要传递下去的，这里比较重要的就是我们的第二层组件和第三层组件都是根据数据来渲染的，并且组件基本上都是用v-model绑定数据，这样我们在做一下操作的时候就会动态将绑定的数据更改，最后传回到外层组件，也就是我们的收集数据。那来简单的看一下HTML结构吧，比如我们要展示单词的信息，并且可以手动修改。</p>\n\n## 2.1、第一层\n<p>&emsp;&emsp;先来看第一层，第一层很简单，引入一个子组件，子组件绑定一个id。</p>\n\n```javascript\n<template>\n  <div class=\"first-container\">\n    <Button @click=\"getDcId\">点击修改单词ID</Button>\n    <EditDrawer :id=\"currentId\"></EditDrawer>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n    EditDrawer: () => import('./EditDrawer.vue')\n  }\n})\nexport default class TestCase extends Vue {\n\n  currentId:string = '';\n\n  //当点击按钮的时候，我们改变currentId的值，这个值会传到子组件的\n  public getDcId() {\n    this.currentId = 'abandon';\n  }\n}\n<script>\n```\n\n## 2.2、第二层\n<p>&emsp;&emsp;然后我们来看第一层的子组件(EditDrawer.vue)，也就是我们的第二层，我们在第二层以id作为参数调用接口请求该单词的所有信息。这一层很重要，我们在这一层拿到请求数据并且把数据传下去了（利用dcInfo字段），同时也在这一层做了收集数据的最后一步，收集到所有的数据（用的Save方法）。</p>\n\n```javascript\n<template>\n  <div class=\"next-container\">\n    <div class=\"other-operate\">\n      /* 在这里你可以写一些其他的东西嘛，就是不要觉局限于一个页面就引入一个组件 */\n    </div>\n    <Button @click=\"Save()\">点击修改单词ID</Button>\n    <div class=\"main-container\">\n      /* 在这里，我们把数据传下去了，层层往下传就好了 */\n      <ProEdit :dataInfo=\"dcInfo\" ref=\"proEdit\"></ProEdit>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator';\n//调用接口\nimport { getDcDetail } from '@/http/api/http.ts';\n\n@Component({\n  components: {\n    ProEdit: () => import('./PropertyManage/index.vue')\n  }\n})\nexport default class TestCase extends Vue {\n\n  dcInfo:any = {};\n\n  //接受id\n  @Prop({\n    type: String,\n    default: ''\n  })\n  id: string;\n\n  //监听id，一旦传入id,就请求数据\n  @Watch('id',{\n    deep: true,\n    immediate: true\n  })\n  public getIdMessage(val) {\n    if(val) {\n      this.getDcInfo();\n    }\n  }\n\n  public async getDcInfo():Promise<any> {\n    const res = await getDcDetail({\n      id:this.id;\n    })\n    if(res) {\n      //实际情况下肯定不会这么简单了，是要对请求过来的数据做对应处理的，知道就好\n      this.dcInfo = res;\n    }\n  }\n\n  //可以看到我们用了$refs访问了子组件的方法收集了所有的数据，然后调用了接口，把数据传给了后端\n  public Save() {\n    const data = (this.$refs.proEdit as any).getData();\n    const res = await saveDc(data);\n    if (res) {\n      this.$Message.success('暂存成功！');\n    }\n  }\n}\n<script>\n```\n\n## 2.3、第三层\n<p>&emsp;&emsp;然后我们来看第三层，这一层主要是把信息散发出去，因为数据是分为好几个小模块的，会在代码里写，大家注意看数据的结构，我们把数据分发下去。并且这个组件里有个getData方法收集数据，还记得我们在第二层里用的save方法就是在调用这个getData么</p>\n\n<p>&emsp;&emsp;这里用的component动态生成组件，我的其他文章（工作知识难点系列）里有解释，看不懂的小伙伴可以去看一下。</p>\n\n<p>&emsp;&emsp;这里的dataInfo就是数据的主体，它有三个部分，每个部分有对应的数据去渲染一个component组件，并且在component组件里，利用v-model绑定了数据的每一部分，这样改变数据的时候我们就可以直接双向绑定，改变的数据会直接传到这一层，所以我们只要改数据，这一层的dataInfon拿到的永远都是更新的数据。</p>\n\n```javascript\n<template>\n  <div class=\"last-container\">\n    <div class=\"module-container\">\n      <div v-for=\"(item, index) in moduleArr\" :key=\"index\">\n        <component :is=\"item.code\" :data=\"dataInfo[item.code]\" :ref=\"item.code\" :id=\"dataInfo.baseInfo.id\"></component>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator';\n\n@Component({\n  components: {\n    FirstSection: () => import('./FirstSection.vue'),\n    SecondSection: () => import('./SecondSection.vue'),\n    ThirdSection: () => import('./ThirdSection.vue')\n  }\n})\nexport default class TestCase extends Vue {\n\n//通过传值拿到dataInfo,组件会根据dataInfo去渲染\n  @Prop({\n    type: Object,\n    default: () => {\n      return {}\n    }\n  })\n  dataInfo: any;\n\n  //通过循环moduleArr实现三个部分的分别渲染，每一部分引入自己对应的信息\n  public moduleArr: Array<{\n    name: string;\n    code: string;\n  }> = [{\n    name: '第一部分信息',\n    code: 'FirstSection',\n  }, {\n    name: '第二部分信息',\n    code: 'SecondSection',\n  }, {\n    name: '第三部分信息',\n    code: 'ThirdSection',\n  }];\n\n  public getData () {\n    //正常这里是要做一些数据处理的，更具具体情况做不同的事情，大家心里有数就好我这里就\n    //直接返回数据了，应为这个dataInfo就是最新的数据\n    return dataInfo;\n  }\n\n  /* 为了防止大家看不懂，我把数据模拟结构写一下，简单模拟，别太当真\n  const dataInfo = {\n    FirstSection: {\n      name: '我是第一部分',\n      content: '我是第一部分的内容'\n    },\n    SecondSection: {\n      name: '我是第一部分',\n      content: '我是第一部分的内容'\n    },\n    ThirdSection: {\n      name: '我是第一部分',\n      content: '我是第一部分的内容'\n    }\n  } */\n}\n<script>\n```\n\n## 2.4、第四层\n<p>&emsp;&emsp;为了大家，能够理解为啥上一层的dataInfo是一直更新的，并且更了解结构，我写了第四层，就拿数据的第一部分为例吧。我们直接用v-modal绑定的data的两个字段，这样在改变input输入框的值的时候，结果会直接改变data的值，并且会把data传到上一层的dataInfo，这样上一层的dataInfo就是一直都是最新的，所以在第二层点击保存的时候，用了第三层的方法，直接返回dataInfo是可以的。</p>\n\n```javascript\n<template>\n  <div class=\"last-last-container\">\n    <Input type=\"text\" v-model=\"data.name\" clearable />\n    <Input type=\"text\" v-model=\"data.content\" clearable />\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator';\n\n@Component({\n  components: {\n  }\n})\nexport default class TestCase extends Vue {\n\n  //这里我们接收了上一层的dataInfo的第一部分信息\n  @Prop({\n    type: Object,\n    default: () => {\n      return {}\n    }\n  })\n  data: any;\n}\n<script>\n```\n\n\n<p>&emsp;&emsp;写完啦，好累呀。。。。最后感谢露哥！！！！露哥也听不见。。。。。。</p>\n","source":"_posts/工作知识总结/工作知识难点摘要系列-10、数据流传递框架.md","raw":"---\ntitle: 十、数据流传递框架\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 一、数据流传递框架\n\n## 1、简单介绍\n<p>&emsp;&emsp;先说一下为啥写这个都咚咚，主要是想了解一下在开发一个完整模块的时候怎么实现数据的收集，上传，逐层传递后的渲染，帮助自己理解整个模块的开发。偷偷学习了组内大佬的开发思路，不能被露哥发现喽，偷学。。。哈哈哈哈！！！感谢露哥，感谢露哥，感谢露哥，嘿嘿嘿！！！</p>\n\n## 2、基本框架\n<p>&emsp;&emsp;首先，我们来看一下整体的HTML的结构，父组件套子组件，子组件再套子组件，那我们我们的数据是在第一层组件请求来的，所以我们的数据是要传递下去的，这里比较重要的就是我们的第二层组件和第三层组件都是根据数据来渲染的，并且组件基本上都是用v-model绑定数据，这样我们在做一下操作的时候就会动态将绑定的数据更改，最后传回到外层组件，也就是我们的收集数据。那来简单的看一下HTML结构吧，比如我们要展示单词的信息，并且可以手动修改。</p>\n\n## 2.1、第一层\n<p>&emsp;&emsp;先来看第一层，第一层很简单，引入一个子组件，子组件绑定一个id。</p>\n\n```javascript\n<template>\n  <div class=\"first-container\">\n    <Button @click=\"getDcId\">点击修改单词ID</Button>\n    <EditDrawer :id=\"currentId\"></EditDrawer>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n    EditDrawer: () => import('./EditDrawer.vue')\n  }\n})\nexport default class TestCase extends Vue {\n\n  currentId:string = '';\n\n  //当点击按钮的时候，我们改变currentId的值，这个值会传到子组件的\n  public getDcId() {\n    this.currentId = 'abandon';\n  }\n}\n<script>\n```\n\n## 2.2、第二层\n<p>&emsp;&emsp;然后我们来看第一层的子组件(EditDrawer.vue)，也就是我们的第二层，我们在第二层以id作为参数调用接口请求该单词的所有信息。这一层很重要，我们在这一层拿到请求数据并且把数据传下去了（利用dcInfo字段），同时也在这一层做了收集数据的最后一步，收集到所有的数据（用的Save方法）。</p>\n\n```javascript\n<template>\n  <div class=\"next-container\">\n    <div class=\"other-operate\">\n      /* 在这里你可以写一些其他的东西嘛，就是不要觉局限于一个页面就引入一个组件 */\n    </div>\n    <Button @click=\"Save()\">点击修改单词ID</Button>\n    <div class=\"main-container\">\n      /* 在这里，我们把数据传下去了，层层往下传就好了 */\n      <ProEdit :dataInfo=\"dcInfo\" ref=\"proEdit\"></ProEdit>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator';\n//调用接口\nimport { getDcDetail } from '@/http/api/http.ts';\n\n@Component({\n  components: {\n    ProEdit: () => import('./PropertyManage/index.vue')\n  }\n})\nexport default class TestCase extends Vue {\n\n  dcInfo:any = {};\n\n  //接受id\n  @Prop({\n    type: String,\n    default: ''\n  })\n  id: string;\n\n  //监听id，一旦传入id,就请求数据\n  @Watch('id',{\n    deep: true,\n    immediate: true\n  })\n  public getIdMessage(val) {\n    if(val) {\n      this.getDcInfo();\n    }\n  }\n\n  public async getDcInfo():Promise<any> {\n    const res = await getDcDetail({\n      id:this.id;\n    })\n    if(res) {\n      //实际情况下肯定不会这么简单了，是要对请求过来的数据做对应处理的，知道就好\n      this.dcInfo = res;\n    }\n  }\n\n  //可以看到我们用了$refs访问了子组件的方法收集了所有的数据，然后调用了接口，把数据传给了后端\n  public Save() {\n    const data = (this.$refs.proEdit as any).getData();\n    const res = await saveDc(data);\n    if (res) {\n      this.$Message.success('暂存成功！');\n    }\n  }\n}\n<script>\n```\n\n## 2.3、第三层\n<p>&emsp;&emsp;然后我们来看第三层，这一层主要是把信息散发出去，因为数据是分为好几个小模块的，会在代码里写，大家注意看数据的结构，我们把数据分发下去。并且这个组件里有个getData方法收集数据，还记得我们在第二层里用的save方法就是在调用这个getData么</p>\n\n<p>&emsp;&emsp;这里用的component动态生成组件，我的其他文章（工作知识难点系列）里有解释，看不懂的小伙伴可以去看一下。</p>\n\n<p>&emsp;&emsp;这里的dataInfo就是数据的主体，它有三个部分，每个部分有对应的数据去渲染一个component组件，并且在component组件里，利用v-model绑定了数据的每一部分，这样改变数据的时候我们就可以直接双向绑定，改变的数据会直接传到这一层，所以我们只要改数据，这一层的dataInfon拿到的永远都是更新的数据。</p>\n\n```javascript\n<template>\n  <div class=\"last-container\">\n    <div class=\"module-container\">\n      <div v-for=\"(item, index) in moduleArr\" :key=\"index\">\n        <component :is=\"item.code\" :data=\"dataInfo[item.code]\" :ref=\"item.code\" :id=\"dataInfo.baseInfo.id\"></component>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator';\n\n@Component({\n  components: {\n    FirstSection: () => import('./FirstSection.vue'),\n    SecondSection: () => import('./SecondSection.vue'),\n    ThirdSection: () => import('./ThirdSection.vue')\n  }\n})\nexport default class TestCase extends Vue {\n\n//通过传值拿到dataInfo,组件会根据dataInfo去渲染\n  @Prop({\n    type: Object,\n    default: () => {\n      return {}\n    }\n  })\n  dataInfo: any;\n\n  //通过循环moduleArr实现三个部分的分别渲染，每一部分引入自己对应的信息\n  public moduleArr: Array<{\n    name: string;\n    code: string;\n  }> = [{\n    name: '第一部分信息',\n    code: 'FirstSection',\n  }, {\n    name: '第二部分信息',\n    code: 'SecondSection',\n  }, {\n    name: '第三部分信息',\n    code: 'ThirdSection',\n  }];\n\n  public getData () {\n    //正常这里是要做一些数据处理的，更具具体情况做不同的事情，大家心里有数就好我这里就\n    //直接返回数据了，应为这个dataInfo就是最新的数据\n    return dataInfo;\n  }\n\n  /* 为了防止大家看不懂，我把数据模拟结构写一下，简单模拟，别太当真\n  const dataInfo = {\n    FirstSection: {\n      name: '我是第一部分',\n      content: '我是第一部分的内容'\n    },\n    SecondSection: {\n      name: '我是第一部分',\n      content: '我是第一部分的内容'\n    },\n    ThirdSection: {\n      name: '我是第一部分',\n      content: '我是第一部分的内容'\n    }\n  } */\n}\n<script>\n```\n\n## 2.4、第四层\n<p>&emsp;&emsp;为了大家，能够理解为啥上一层的dataInfo是一直更新的，并且更了解结构，我写了第四层，就拿数据的第一部分为例吧。我们直接用v-modal绑定的data的两个字段，这样在改变input输入框的值的时候，结果会直接改变data的值，并且会把data传到上一层的dataInfo，这样上一层的dataInfo就是一直都是最新的，所以在第二层点击保存的时候，用了第三层的方法，直接返回dataInfo是可以的。</p>\n\n```javascript\n<template>\n  <div class=\"last-last-container\">\n    <Input type=\"text\" v-model=\"data.name\" clearable />\n    <Input type=\"text\" v-model=\"data.content\" clearable />\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator';\n\n@Component({\n  components: {\n  }\n})\nexport default class TestCase extends Vue {\n\n  //这里我们接收了上一层的dataInfo的第一部分信息\n  @Prop({\n    type: Object,\n    default: () => {\n      return {}\n    }\n  })\n  data: any;\n}\n<script>\n```\n\n\n<p>&emsp;&emsp;写完啦，好累呀。。。。最后感谢露哥！！！！露哥也听不见。。。。。。</p>\n","slug":"工作知识总结/工作知识难点摘要系列-10、数据流传递框架","published":1,"date":"2024-11-05T14:59:24.476Z","updated":"2022-12-15T15:32:39.111Z","layout":"post","photos":[],"_id":"cm42hwwts000hssnn62cg431i","content":"<h1 id=\"一、数据流传递框架\"><a href=\"#一、数据流传递框架\" class=\"headerlink\" title=\"一、数据流传递框架\"></a>一、数据流传递框架</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;先说一下为啥写这个都咚咚，主要是想了解一下在开发一个完整模块的时候怎么实现数据的收集，上传，逐层传递后的渲染，帮助自己理解整个模块的开发。偷偷学习了组内大佬的开发思路，不能被露哥发现喽，偷学。。。哈哈哈哈！！！感谢露哥，感谢露哥，感谢露哥，嘿嘿嘿！！！</p>\n\n<h2 id=\"2、基本框架\"><a href=\"#2、基本框架\" class=\"headerlink\" title=\"2、基本框架\"></a>2、基本框架</h2><p>&emsp;&emsp;首先，我们来看一下整体的HTML的结构，父组件套子组件，子组件再套子组件，那我们我们的数据是在第一层组件请求来的，所以我们的数据是要传递下去的，这里比较重要的就是我们的第二层组件和第三层组件都是根据数据来渲染的，并且组件基本上都是用v-model绑定数据，这样我们在做一下操作的时候就会动态将绑定的数据更改，最后传回到外层组件，也就是我们的收集数据。那来简单的看一下HTML结构吧，比如我们要展示单词的信息，并且可以手动修改。</p>\n\n<h2 id=\"2-1、第一层\"><a href=\"#2-1、第一层\" class=\"headerlink\" title=\"2.1、第一层\"></a>2.1、第一层</h2><p>&emsp;&emsp;先来看第一层，第一层很简单，引入一个子组件，子组件绑定一个id。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"first-container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Button @click<span class=\"token operator\">=</span><span class=\"token string\">\"getDcId\"</span><span class=\"token operator\">></span>点击修改单词<span class=\"token constant\">ID</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>EditDrawer <span class=\"token operator\">:</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"currentId\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EditDrawer<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">EditDrawer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./EditDrawer.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token literal-property property\">currentId</span><span class=\"token operator\">:</span>string <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//当点击按钮的时候，我们改变currentId的值，这个值会传到子组件的</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getDcId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentId <span class=\"token operator\">=</span> <span class=\"token string\">'abandon'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h2 id=\"2-2、第二层\"><a href=\"#2-2、第二层\" class=\"headerlink\" title=\"2.2、第二层\"></a>2.2、第二层</h2><p>&emsp;&emsp;然后我们来看第一层的子组件(EditDrawer.vue)，也就是我们的第二层，我们在第二层以id作为参数调用接口请求该单词的所有信息。这一层很重要，我们在这一层拿到请求数据并且把数据传下去了（利用dcInfo字段），同时也在这一层做了收集数据的最后一步，收集到所有的数据（用的Save方法）。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"next-container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"other-operate\"</span><span class=\"token operator\">></span>\n      <span class=\"token comment\">/* 在这里你可以写一些其他的东西嘛，就是不要觉局限于一个页面就引入一个组件 */</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Button @click<span class=\"token operator\">=</span><span class=\"token string\">\"Save()\"</span><span class=\"token operator\">></span>点击修改单词<span class=\"token constant\">ID</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"main-container\"</span><span class=\"token operator\">></span>\n      <span class=\"token comment\">/* 在这里，我们把数据传下去了，层层往下传就好了 */</span>\n      <span class=\"token operator\">&lt;</span>ProEdit <span class=\"token operator\">:</span>dataInfo<span class=\"token operator\">=</span><span class=\"token string\">\"dcInfo\"</span> ref<span class=\"token operator\">=</span><span class=\"token string\">\"proEdit\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ProEdit<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Prop<span class=\"token punctuation\">,</span> Watch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//调用接口</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getDcDetail <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/http/api/http.ts'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">ProEdit</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./PropertyManage/index.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token literal-property property\">dcInfo</span><span class=\"token operator\">:</span>any <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//接受id</span>\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//监听id，一旦传入id,就请求数据</span>\n  @<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getIdMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDcInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">getDcInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>Promise<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getDcDetail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//实际情况下肯定不会这么简单了，是要对请求过来的数据做对应处理的，知道就好</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dcInfo <span class=\"token operator\">=</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">//可以看到我们用了$refs访问了子组件的方法收集了所有的数据，然后调用了接口，把数据传给了后端</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">Save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>proEdit <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">saveDc</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">'暂存成功！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h2 id=\"2-3、第三层\"><a href=\"#2-3、第三层\" class=\"headerlink\" title=\"2.3、第三层\"></a>2.3、第三层</h2><p>&emsp;&emsp;然后我们来看第三层，这一层主要是把信息散发出去，因为数据是分为好几个小模块的，会在代码里写，大家注意看数据的结构，我们把数据分发下去。并且这个组件里有个getData方法收集数据，还记得我们在第二层里用的save方法就是在调用这个getData么</p>\n\n<p>&emsp;&emsp;这里用的component动态生成组件，我的其他文章（工作知识难点系列）里有解释，看不懂的小伙伴可以去看一下。</p>\n\n<p>&emsp;&emsp;这里的dataInfo就是数据的主体，它有三个部分，每个部分有对应的数据去渲染一个component组件，并且在component组件里，利用v-model绑定了数据的每一部分，这样改变数据的时候我们就可以直接双向绑定，改变的数据会直接传到这一层，所以我们只要改数据，这一层的dataInfon拿到的永远都是更新的数据。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"last-container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"module-container\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(item, index) in moduleArr\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"item.code\"</span> <span class=\"token operator\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"dataInfo[item.code]\"</span> <span class=\"token operator\">:</span>ref<span class=\"token operator\">=</span><span class=\"token string\">\"item.code\"</span> <span class=\"token operator\">:</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"dataInfo.baseInfo.id\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Prop<span class=\"token punctuation\">,</span> Watch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">FirstSection</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./FirstSection.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">SecondSection</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./SecondSection.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">ThirdSection</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./ThirdSection.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token comment\">//通过传值拿到dataInfo,组件会根据dataInfo去渲染</span>\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> Object<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">dataInfo</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//通过循环moduleArr实现三个部分的分别渲染，每一部分引入自己对应的信息</span>\n  <span class=\"token keyword\">public</span> <span class=\"token literal-property property\">moduleArr</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'第一部分信息'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token string\">'FirstSection'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'第二部分信息'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token string\">'SecondSection'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'第三部分信息'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token string\">'ThirdSection'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getData</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//正常这里是要做一些数据处理的，更具具体情况做不同的事情，大家心里有数就好我这里就</span>\n    <span class=\"token comment\">//直接返回数据了，应为这个dataInfo就是最新的数据</span>\n    <span class=\"token keyword\">return</span> dataInfo<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">/* 为了防止大家看不懂，我把数据模拟结构写一下，简单模拟，别太当真\n  const dataInfo = &#123;\n    FirstSection: &#123;\n      name: '我是第一部分',\n      content: '我是第一部分的内容'\n    &#125;,\n    SecondSection: &#123;\n      name: '我是第一部分',\n      content: '我是第一部分的内容'\n    &#125;,\n    ThirdSection: &#123;\n      name: '我是第一部分',\n      content: '我是第一部分的内容'\n    &#125;\n  &#125; */</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h2 id=\"2-4、第四层\"><a href=\"#2-4、第四层\" class=\"headerlink\" title=\"2.4、第四层\"></a>2.4、第四层</h2><p>&emsp;&emsp;为了大家，能够理解为啥上一层的dataInfo是一直更新的，并且更了解结构，我写了第四层，就拿数据的第一部分为例吧。我们直接用v-modal绑定的data的两个字段，这样在改变input输入框的值的时候，结果会直接改变data的值，并且会把data传到上一层的dataInfo，这样上一层的dataInfo就是一直都是最新的，所以在第二层点击保存的时候，用了第三层的方法，直接返回dataInfo是可以的。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"last-last-container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"data.name\"</span> clearable <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"data.content\"</span> clearable <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Prop<span class=\"token punctuation\">,</span> Watch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">//这里我们接收了上一层的dataInfo的第一部分信息</span>\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> Object<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n\n<p>&emsp;&emsp;写完啦，好累呀。。。。最后感谢露哥！！！！露哥也听不见。。。。。。</p>\n","excerpt":"","more":"<h1 id=\"一、数据流传递框架\"><a href=\"#一、数据流传递框架\" class=\"headerlink\" title=\"一、数据流传递框架\"></a>一、数据流传递框架</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;先说一下为啥写这个都咚咚，主要是想了解一下在开发一个完整模块的时候怎么实现数据的收集，上传，逐层传递后的渲染，帮助自己理解整个模块的开发。偷偷学习了组内大佬的开发思路，不能被露哥发现喽，偷学。。。哈哈哈哈！！！感谢露哥，感谢露哥，感谢露哥，嘿嘿嘿！！！</p>\n\n<h2 id=\"2、基本框架\"><a href=\"#2、基本框架\" class=\"headerlink\" title=\"2、基本框架\"></a>2、基本框架</h2><p>&emsp;&emsp;首先，我们来看一下整体的HTML的结构，父组件套子组件，子组件再套子组件，那我们我们的数据是在第一层组件请求来的，所以我们的数据是要传递下去的，这里比较重要的就是我们的第二层组件和第三层组件都是根据数据来渲染的，并且组件基本上都是用v-model绑定数据，这样我们在做一下操作的时候就会动态将绑定的数据更改，最后传回到外层组件，也就是我们的收集数据。那来简单的看一下HTML结构吧，比如我们要展示单词的信息，并且可以手动修改。</p>\n\n<h2 id=\"2-1、第一层\"><a href=\"#2-1、第一层\" class=\"headerlink\" title=\"2.1、第一层\"></a>2.1、第一层</h2><p>&emsp;&emsp;先来看第一层，第一层很简单，引入一个子组件，子组件绑定一个id。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"first-container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Button @click<span class=\"token operator\">=</span><span class=\"token string\">\"getDcId\"</span><span class=\"token operator\">></span>点击修改单词<span class=\"token constant\">ID</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>EditDrawer <span class=\"token operator\">:</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"currentId\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>EditDrawer<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">EditDrawer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./EditDrawer.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token literal-property property\">currentId</span><span class=\"token operator\">:</span>string <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//当点击按钮的时候，我们改变currentId的值，这个值会传到子组件的</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getDcId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentId <span class=\"token operator\">=</span> <span class=\"token string\">'abandon'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h2 id=\"2-2、第二层\"><a href=\"#2-2、第二层\" class=\"headerlink\" title=\"2.2、第二层\"></a>2.2、第二层</h2><p>&emsp;&emsp;然后我们来看第一层的子组件(EditDrawer.vue)，也就是我们的第二层，我们在第二层以id作为参数调用接口请求该单词的所有信息。这一层很重要，我们在这一层拿到请求数据并且把数据传下去了（利用dcInfo字段），同时也在这一层做了收集数据的最后一步，收集到所有的数据（用的Save方法）。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"next-container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"other-operate\"</span><span class=\"token operator\">></span>\n      <span class=\"token comment\">/* 在这里你可以写一些其他的东西嘛，就是不要觉局限于一个页面就引入一个组件 */</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Button @click<span class=\"token operator\">=</span><span class=\"token string\">\"Save()\"</span><span class=\"token operator\">></span>点击修改单词<span class=\"token constant\">ID</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"main-container\"</span><span class=\"token operator\">></span>\n      <span class=\"token comment\">/* 在这里，我们把数据传下去了，层层往下传就好了 */</span>\n      <span class=\"token operator\">&lt;</span>ProEdit <span class=\"token operator\">:</span>dataInfo<span class=\"token operator\">=</span><span class=\"token string\">\"dcInfo\"</span> ref<span class=\"token operator\">=</span><span class=\"token string\">\"proEdit\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ProEdit<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Prop<span class=\"token punctuation\">,</span> Watch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//调用接口</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getDcDetail <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/http/api/http.ts'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">ProEdit</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./PropertyManage/index.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token literal-property property\">dcInfo</span><span class=\"token operator\">:</span>any <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//接受id</span>\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//监听id，一旦传入id,就请求数据</span>\n  @<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getIdMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDcInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">getDcInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>Promise<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getDcDetail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//实际情况下肯定不会这么简单了，是要对请求过来的数据做对应处理的，知道就好</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dcInfo <span class=\"token operator\">=</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">//可以看到我们用了$refs访问了子组件的方法收集了所有的数据，然后调用了接口，把数据传给了后端</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">Save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>proEdit <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">saveDc</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">'暂存成功！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h2 id=\"2-3、第三层\"><a href=\"#2-3、第三层\" class=\"headerlink\" title=\"2.3、第三层\"></a>2.3、第三层</h2><p>&emsp;&emsp;然后我们来看第三层，这一层主要是把信息散发出去，因为数据是分为好几个小模块的，会在代码里写，大家注意看数据的结构，我们把数据分发下去。并且这个组件里有个getData方法收集数据，还记得我们在第二层里用的save方法就是在调用这个getData么</p>\n\n<p>&emsp;&emsp;这里用的component动态生成组件，我的其他文章（工作知识难点系列）里有解释，看不懂的小伙伴可以去看一下。</p>\n\n<p>&emsp;&emsp;这里的dataInfo就是数据的主体，它有三个部分，每个部分有对应的数据去渲染一个component组件，并且在component组件里，利用v-model绑定了数据的每一部分，这样改变数据的时候我们就可以直接双向绑定，改变的数据会直接传到这一层，所以我们只要改数据，这一层的dataInfon拿到的永远都是更新的数据。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"last-container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"module-container\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(item, index) in moduleArr\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"item.code\"</span> <span class=\"token operator\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"dataInfo[item.code]\"</span> <span class=\"token operator\">:</span>ref<span class=\"token operator\">=</span><span class=\"token string\">\"item.code\"</span> <span class=\"token operator\">:</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"dataInfo.baseInfo.id\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Prop<span class=\"token punctuation\">,</span> Watch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">FirstSection</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./FirstSection.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">SecondSection</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./SecondSection.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">ThirdSection</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./ThirdSection.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token comment\">//通过传值拿到dataInfo,组件会根据dataInfo去渲染</span>\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> Object<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">dataInfo</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//通过循环moduleArr实现三个部分的分别渲染，每一部分引入自己对应的信息</span>\n  <span class=\"token keyword\">public</span> <span class=\"token literal-property property\">moduleArr</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'第一部分信息'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token string\">'FirstSection'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'第二部分信息'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token string\">'SecondSection'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'第三部分信息'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token string\">'ThirdSection'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getData</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//正常这里是要做一些数据处理的，更具具体情况做不同的事情，大家心里有数就好我这里就</span>\n    <span class=\"token comment\">//直接返回数据了，应为这个dataInfo就是最新的数据</span>\n    <span class=\"token keyword\">return</span> dataInfo<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">/* 为了防止大家看不懂，我把数据模拟结构写一下，简单模拟，别太当真\n  const dataInfo = &#123;\n    FirstSection: &#123;\n      name: '我是第一部分',\n      content: '我是第一部分的内容'\n    &#125;,\n    SecondSection: &#123;\n      name: '我是第一部分',\n      content: '我是第一部分的内容'\n    &#125;,\n    ThirdSection: &#123;\n      name: '我是第一部分',\n      content: '我是第一部分的内容'\n    &#125;\n  &#125; */</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h2 id=\"2-4、第四层\"><a href=\"#2-4、第四层\" class=\"headerlink\" title=\"2.4、第四层\"></a>2.4、第四层</h2><p>&emsp;&emsp;为了大家，能够理解为啥上一层的dataInfo是一直更新的，并且更了解结构，我写了第四层，就拿数据的第一部分为例吧。我们直接用v-modal绑定的data的两个字段，这样在改变input输入框的值的时候，结果会直接改变data的值，并且会把data传到上一层的dataInfo，这样上一层的dataInfo就是一直都是最新的，所以在第二层点击保存的时候，用了第三层的方法，直接返回dataInfo是可以的。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"last-last-container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"data.name\"</span> clearable <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"data.content\"</span> clearable <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Prop<span class=\"token punctuation\">,</span> Watch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">//这里我们接收了上一层的dataInfo的第一部分信息</span>\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> Object<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n\n<p>&emsp;&emsp;写完啦，好累呀。。。。最后感谢露哥！！！！露哥也听不见。。。。。。</p>\n"},{"title":"十一、在线预览PDF","comments":1,"_content":"\n# 一、PDF.js的使用\n\n## 1、简单介绍\n<p>&emsp;&emsp;最近做了个事，工作中遇到一个需求，就是要在线显示pdf，那咋办，我这垃圾小白也没做过。于是乎问了老大，老大说用pdf.js。然后乎我就去看了一下，发现好用又简单。既然这么实用那就给记下来吧！！！！！</p>\n\n## 2、使用PDF.js\n\n### 2.1、下载pdf.js\n<p>&emsp;&emsp;首先啊，我们不需要额外下载插件，而是直接去官网，下载pdf.js的文件。下面附上下载链接</p>\n\n[pdf.js官网](http://mozilla.github.io/pdf.js)\n\n![](/images/pdfjs.jpg)\n\n### 2.2、在项目中添加pdf.js\n\n<p>&emsp;&emsp;下载后的文件结构是这样的，三个子文件，build、web、license。这个license是可以直接删除的，没啥用。</p>\n\n![](/images/jiegou.png)\n\n<p>&emsp;&emsp;那么我们呢直接把整个文件夹放进我们项目中的public文件夹下面就好啦！这样就可以用啦</p>\n\n![](/images/mulu.jpg)\n\n### 2.3、在项目中使用pdf.js\n\n<p>&emsp;&emsp;那么怎么使用呢？首先啊，我们还是得用到upload组件，因为我们要上传pdf文件给后台，upload组件在音频那块已经说过了，这里简单说一下吧。。。那个那个回调函数就不写了啊，大家可以去看audio音频的那个文章，也是这个系列的。那么我们上传过pdf之后啊，后台会返回这个文件的标识：xxxxxxxxx.pdf</p>\n\n<p>&emsp;&emsp;有了这个标识后我们应该怎么办呢，当然是调用接口啦，比如说这个接口叫：getPdfData,假装引用一下。接口是后端写的，我们以上传返回后的文件标识为参数调用改接口，然后接口会返回一个地址，这就是文件的地址了。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <Upload ref=\"uploadStandardWord\" style=\"display:inline-block\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"exceededSizeFun\" :on-format-error=\"formatError\" :on-success=\"(response)=>handleSuccess(response)\" :on-error=\"handleError\">\n    </Upload>\n    <button @click=\"openPDF\">在新窗口打开pdf</button>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\nimport { getPdfData } from '@/assets/js/utils';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  uploadObj: {\n    action: string;\n    accept: string;\n    maxSize: number;\n    format: Array<string>;\n    data: any;\n  } = {\n      action: '/graphApi/api/v1/common/source/file/upload',\n      accept: '.pdf',\n      format: ['pdf'],\n      maxSize: 1024 * 1024, //1个G\n      data: {}\n    }\n\n  public async openPDF() {\n    //params是接口参数，问后端\n    const res = awiat getPdfData(params);\n    if(res) {\n      //window.open就是在新窗口打开网页，然后引用pdf.js的文件，并且把地址传进去就好了，是不是很简单\n      window.open(`/pdf/web/viewer.html?file=${encodeURIComponent(res.pdfUrl)}`);\n    }\n  }\n}\n<script>\n```","source":"_posts/工作知识总结/工作知识难点摘要系列-11、PDF.js的使用.md","raw":"---\ntitle: 十一、在线预览PDF\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 一、PDF.js的使用\n\n## 1、简单介绍\n<p>&emsp;&emsp;最近做了个事，工作中遇到一个需求，就是要在线显示pdf，那咋办，我这垃圾小白也没做过。于是乎问了老大，老大说用pdf.js。然后乎我就去看了一下，发现好用又简单。既然这么实用那就给记下来吧！！！！！</p>\n\n## 2、使用PDF.js\n\n### 2.1、下载pdf.js\n<p>&emsp;&emsp;首先啊，我们不需要额外下载插件，而是直接去官网，下载pdf.js的文件。下面附上下载链接</p>\n\n[pdf.js官网](http://mozilla.github.io/pdf.js)\n\n![](/images/pdfjs.jpg)\n\n### 2.2、在项目中添加pdf.js\n\n<p>&emsp;&emsp;下载后的文件结构是这样的，三个子文件，build、web、license。这个license是可以直接删除的，没啥用。</p>\n\n![](/images/jiegou.png)\n\n<p>&emsp;&emsp;那么我们呢直接把整个文件夹放进我们项目中的public文件夹下面就好啦！这样就可以用啦</p>\n\n![](/images/mulu.jpg)\n\n### 2.3、在项目中使用pdf.js\n\n<p>&emsp;&emsp;那么怎么使用呢？首先啊，我们还是得用到upload组件，因为我们要上传pdf文件给后台，upload组件在音频那块已经说过了，这里简单说一下吧。。。那个那个回调函数就不写了啊，大家可以去看audio音频的那个文章，也是这个系列的。那么我们上传过pdf之后啊，后台会返回这个文件的标识：xxxxxxxxx.pdf</p>\n\n<p>&emsp;&emsp;有了这个标识后我们应该怎么办呢，当然是调用接口啦，比如说这个接口叫：getPdfData,假装引用一下。接口是后端写的，我们以上传返回后的文件标识为参数调用改接口，然后接口会返回一个地址，这就是文件的地址了。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <Upload ref=\"uploadStandardWord\" style=\"display:inline-block\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"exceededSizeFun\" :on-format-error=\"formatError\" :on-success=\"(response)=>handleSuccess(response)\" :on-error=\"handleError\">\n    </Upload>\n    <button @click=\"openPDF\">在新窗口打开pdf</button>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\nimport { getPdfData } from '@/assets/js/utils';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  uploadObj: {\n    action: string;\n    accept: string;\n    maxSize: number;\n    format: Array<string>;\n    data: any;\n  } = {\n      action: '/graphApi/api/v1/common/source/file/upload',\n      accept: '.pdf',\n      format: ['pdf'],\n      maxSize: 1024 * 1024, //1个G\n      data: {}\n    }\n\n  public async openPDF() {\n    //params是接口参数，问后端\n    const res = awiat getPdfData(params);\n    if(res) {\n      //window.open就是在新窗口打开网页，然后引用pdf.js的文件，并且把地址传进去就好了，是不是很简单\n      window.open(`/pdf/web/viewer.html?file=${encodeURIComponent(res.pdfUrl)}`);\n    }\n  }\n}\n<script>\n```","slug":"工作知识总结/工作知识难点摘要系列-11、PDF.js的使用","published":1,"date":"2024-11-05T14:59:24.479Z","updated":"2022-12-17T09:51:38.266Z","layout":"post","photos":[],"_id":"cm42hwwtu000mssnnem57f3g9","content":"<h1 id=\"一、PDF-js的使用\"><a href=\"#一、PDF-js的使用\" class=\"headerlink\" title=\"一、PDF.js的使用\"></a>一、PDF.js的使用</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;最近做了个事，工作中遇到一个需求，就是要在线显示pdf，那咋办，我这垃圾小白也没做过。于是乎问了老大，老大说用pdf.js。然后乎我就去看了一下，发现好用又简单。既然这么实用那就给记下来吧！！！！！</p>\n\n<h2 id=\"2、使用PDF-js\"><a href=\"#2、使用PDF-js\" class=\"headerlink\" title=\"2、使用PDF.js\"></a>2、使用PDF.js</h2><h3 id=\"2-1、下载pdf-js\"><a href=\"#2-1、下载pdf-js\" class=\"headerlink\" title=\"2.1、下载pdf.js\"></a>2.1、下载pdf.js</h3><p>&emsp;&emsp;首先啊，我们不需要额外下载插件，而是直接去官网，下载pdf.js的文件。下面附上下载链接</p>\n\n<p><a href=\"http://mozilla.github.io/pdf.js\">pdf.js官网</a></p>\n<p><img src=\"/images/pdfjs.jpg\"></p>\n<h3 id=\"2-2、在项目中添加pdf-js\"><a href=\"#2-2、在项目中添加pdf-js\" class=\"headerlink\" title=\"2.2、在项目中添加pdf.js\"></a>2.2、在项目中添加pdf.js</h3><p>&emsp;&emsp;下载后的文件结构是这样的，三个子文件，build、web、license。这个license是可以直接删除的，没啥用。</p>\n\n<p><img src=\"/images/jiegou.png\"></p>\n<p>&emsp;&emsp;那么我们呢直接把整个文件夹放进我们项目中的public文件夹下面就好啦！这样就可以用啦</p>\n\n<p><img src=\"/images/mulu.jpg\"></p>\n<h3 id=\"2-3、在项目中使用pdf-js\"><a href=\"#2-3、在项目中使用pdf-js\" class=\"headerlink\" title=\"2.3、在项目中使用pdf.js\"></a>2.3、在项目中使用pdf.js</h3><p>&emsp;&emsp;那么怎么使用呢？首先啊，我们还是得用到upload组件，因为我们要上传pdf文件给后台，upload组件在音频那块已经说过了，这里简单说一下吧。。。那个那个回调函数就不写了啊，大家可以去看audio音频的那个文章，也是这个系列的。那么我们上传过pdf之后啊，后台会返回这个文件的标识：xxxxxxxxx.pdf</p>\n\n<p>&emsp;&emsp;有了这个标识后我们应该怎么办呢，当然是调用接口啦，比如说这个接口叫：getPdfData,假装引用一下。接口是后端写的，我们以上传返回后的文件标识为参数调用改接口，然后接口会返回一个地址，这就是文件的地址了。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"uploadStandardWord\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"display:inline-block\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"exceededSizeFun\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"formatError\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"openPDF\"</span><span class=\"token operator\">></span>在新窗口打开pdf<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getPdfData <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/assets/js/utils'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">uploadObj</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token string\">'/graphApi/api/v1/common/source/file/upload'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> <span class=\"token string\">'.pdf'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'pdf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//1个G</span>\n      <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">openPDF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//params是接口参数，问后端</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> awiat <span class=\"token function\">getPdfData</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//window.open就是在新窗口打开网页，然后引用pdf.js的文件，并且把地址传进去就好了，是不是很简单</span>\n      window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/pdf/web/viewer.html?file=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>pdfUrl<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>","excerpt":"","more":"<h1 id=\"一、PDF-js的使用\"><a href=\"#一、PDF-js的使用\" class=\"headerlink\" title=\"一、PDF.js的使用\"></a>一、PDF.js的使用</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;最近做了个事，工作中遇到一个需求，就是要在线显示pdf，那咋办，我这垃圾小白也没做过。于是乎问了老大，老大说用pdf.js。然后乎我就去看了一下，发现好用又简单。既然这么实用那就给记下来吧！！！！！</p>\n\n<h2 id=\"2、使用PDF-js\"><a href=\"#2、使用PDF-js\" class=\"headerlink\" title=\"2、使用PDF.js\"></a>2、使用PDF.js</h2><h3 id=\"2-1、下载pdf-js\"><a href=\"#2-1、下载pdf-js\" class=\"headerlink\" title=\"2.1、下载pdf.js\"></a>2.1、下载pdf.js</h3><p>&emsp;&emsp;首先啊，我们不需要额外下载插件，而是直接去官网，下载pdf.js的文件。下面附上下载链接</p>\n\n<p><a href=\"http://mozilla.github.io/pdf.js\">pdf.js官网</a></p>\n<p><img src=\"/images/pdfjs.jpg\"></p>\n<h3 id=\"2-2、在项目中添加pdf-js\"><a href=\"#2-2、在项目中添加pdf-js\" class=\"headerlink\" title=\"2.2、在项目中添加pdf.js\"></a>2.2、在项目中添加pdf.js</h3><p>&emsp;&emsp;下载后的文件结构是这样的，三个子文件，build、web、license。这个license是可以直接删除的，没啥用。</p>\n\n<p><img src=\"/images/jiegou.png\"></p>\n<p>&emsp;&emsp;那么我们呢直接把整个文件夹放进我们项目中的public文件夹下面就好啦！这样就可以用啦</p>\n\n<p><img src=\"/images/mulu.jpg\"></p>\n<h3 id=\"2-3、在项目中使用pdf-js\"><a href=\"#2-3、在项目中使用pdf-js\" class=\"headerlink\" title=\"2.3、在项目中使用pdf.js\"></a>2.3、在项目中使用pdf.js</h3><p>&emsp;&emsp;那么怎么使用呢？首先啊，我们还是得用到upload组件，因为我们要上传pdf文件给后台，upload组件在音频那块已经说过了，这里简单说一下吧。。。那个那个回调函数就不写了啊，大家可以去看audio音频的那个文章，也是这个系列的。那么我们上传过pdf之后啊，后台会返回这个文件的标识：xxxxxxxxx.pdf</p>\n\n<p>&emsp;&emsp;有了这个标识后我们应该怎么办呢，当然是调用接口啦，比如说这个接口叫：getPdfData,假装引用一下。接口是后端写的，我们以上传返回后的文件标识为参数调用改接口，然后接口会返回一个地址，这就是文件的地址了。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"uploadStandardWord\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"display:inline-block\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"exceededSizeFun\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"formatError\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"openPDF\"</span><span class=\"token operator\">></span>在新窗口打开pdf<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getPdfData <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/assets/js/utils'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">uploadObj</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token string\">'/graphApi/api/v1/common/source/file/upload'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> <span class=\"token string\">'.pdf'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'pdf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//1个G</span>\n      <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">openPDF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//params是接口参数，问后端</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> awiat <span class=\"token function\">getPdfData</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//window.open就是在新窗口打开网页，然后引用pdf.js的文件，并且把地址传进去就好了，是不是很简单</span>\n      window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/pdf/web/viewer.html?file=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>pdfUrl<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>"},{"title":"十三、动态绑定样式(补充)","comments":1,"_content":"\n# 一、动态绑定样式(补充)\n\n## 1、简单介绍\n<p>&emsp;&emsp;上次写了个动态样式绑定写的太简单了，后来发现还有一些比较有意思的场景没有考虑到，现在给他补充一下的。好的，那么我们接下来开始吧！！！！！！</p>\n\n## 2、多种方式\n### 2.1、普通对象动态添加（比较常见）\n\n```javascript\n<template>\n\t<view>\n    \t/* 动态添加颜色 */\n\t\t<view :style=\"{color:fontColor}\"> </view>\n\t\t/* 2.动态添加边距 */\n\t\t<view :style=\"{ paddingTop: num + 'px' }\"></view>\n\t\t/* 3.动态添加背景图片 */\n\t\t<view :style=\"{backgroundImage: 'url(' + imageURL + ')','background-repeat':'no-repeat', 'backgroundSize':'100% 100%'}\"></view>\n\t</view>\n</template>\n \n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\timageURL: 'https://app-file.beitaichufang.com/img/H5/web/banner/banner23.jpg', //图片\n\t\t\t\tnum:20, //字体大小\n\t\t\t\tfontColor:'red' //字体颜色\n\t\t\t}\n\t\t}\n\t}\n</script>\n```\n\n### 2.2、数组对象动态添加（加多个样式，有点意思）\n```javascript\n<template>\n\t<view>\n    \t/* 1.动态添加颜色，动态添加边距 */\n\t\t<view :style=\"[{paddingTop: num + 'px'},{color:fontColor}]\"></view>\n    \t/* 2.动态添加背景图片  */\n\t\t<view :style=\"[{'background-image':`url(${imageURL})`},{'background-repeat':'no-repeat'},{'background-size':'100% 100%'}]\"></view>\n\t</view>\n</template>\n \n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\timageURL: 'https://app-file.beitaichufang.com/img/H5/web/banner/banner23.jpg', //图片\n\t\t\t\tnum:20, //字体大小\n\t\t\t\tfontColor:'red' //字体颜色\n\t\t\t}\n\t\t}\n\t}\n</script>\n```\n\n### 2.3、三目运算动态添加\n```javascript\n<template>\n\t<view>\n    \t/* 如果flag为true   颜色就为red色 */\n\t\t<view :style=\"[{color:(flag?fontColor:'green')},{fontSize:'20px'}]\">green</view>\n\t\t<view :style=\"[{color:(!flag?fontColor:'green')}]\">red</view>\n\t\t/* 如果flag为false  颜色就为green色 */\n    \t<view :style=\"[flag?{top:searchTop + 'px',width:searchWidth + 'px'}:{top:'100px',width:'100%'}]\"></view>\n\t</view>\n</template>\n \n<script>\n   export default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tfontColor:'red',\n\t\t\t\tflag:false,\n        \t\tsearchTop:20,\n        \t\tsearchWidth:100\n\t\t    }\n\t    }\n    }\n</script>\n```\n\n### 2.4、动态设置class\n```javascript\n<template>\n     <view :class=\"flag?'flaGreen':'flagRed'\">I's Xq</view>\n</template>\n\n<script>\n   export default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tflag:false\n\t\t\t}\n\t    }\n    }\n</script>\n<style>\n\t.flaGreen{\n\t\tcolor: green\n\t}\n\t.flagRed{\n\t\tcolor: red\n\t}\n</style>\n```\n","source":"_posts/工作知识总结/工作知识难点摘要系列-13、动态绑定样式2.md","raw":"---\ntitle: 十三、动态绑定样式(补充)\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 一、动态绑定样式(补充)\n\n## 1、简单介绍\n<p>&emsp;&emsp;上次写了个动态样式绑定写的太简单了，后来发现还有一些比较有意思的场景没有考虑到，现在给他补充一下的。好的，那么我们接下来开始吧！！！！！！</p>\n\n## 2、多种方式\n### 2.1、普通对象动态添加（比较常见）\n\n```javascript\n<template>\n\t<view>\n    \t/* 动态添加颜色 */\n\t\t<view :style=\"{color:fontColor}\"> </view>\n\t\t/* 2.动态添加边距 */\n\t\t<view :style=\"{ paddingTop: num + 'px' }\"></view>\n\t\t/* 3.动态添加背景图片 */\n\t\t<view :style=\"{backgroundImage: 'url(' + imageURL + ')','background-repeat':'no-repeat', 'backgroundSize':'100% 100%'}\"></view>\n\t</view>\n</template>\n \n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\timageURL: 'https://app-file.beitaichufang.com/img/H5/web/banner/banner23.jpg', //图片\n\t\t\t\tnum:20, //字体大小\n\t\t\t\tfontColor:'red' //字体颜色\n\t\t\t}\n\t\t}\n\t}\n</script>\n```\n\n### 2.2、数组对象动态添加（加多个样式，有点意思）\n```javascript\n<template>\n\t<view>\n    \t/* 1.动态添加颜色，动态添加边距 */\n\t\t<view :style=\"[{paddingTop: num + 'px'},{color:fontColor}]\"></view>\n    \t/* 2.动态添加背景图片  */\n\t\t<view :style=\"[{'background-image':`url(${imageURL})`},{'background-repeat':'no-repeat'},{'background-size':'100% 100%'}]\"></view>\n\t</view>\n</template>\n \n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\timageURL: 'https://app-file.beitaichufang.com/img/H5/web/banner/banner23.jpg', //图片\n\t\t\t\tnum:20, //字体大小\n\t\t\t\tfontColor:'red' //字体颜色\n\t\t\t}\n\t\t}\n\t}\n</script>\n```\n\n### 2.3、三目运算动态添加\n```javascript\n<template>\n\t<view>\n    \t/* 如果flag为true   颜色就为red色 */\n\t\t<view :style=\"[{color:(flag?fontColor:'green')},{fontSize:'20px'}]\">green</view>\n\t\t<view :style=\"[{color:(!flag?fontColor:'green')}]\">red</view>\n\t\t/* 如果flag为false  颜色就为green色 */\n    \t<view :style=\"[flag?{top:searchTop + 'px',width:searchWidth + 'px'}:{top:'100px',width:'100%'}]\"></view>\n\t</view>\n</template>\n \n<script>\n   export default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tfontColor:'red',\n\t\t\t\tflag:false,\n        \t\tsearchTop:20,\n        \t\tsearchWidth:100\n\t\t    }\n\t    }\n    }\n</script>\n```\n\n### 2.4、动态设置class\n```javascript\n<template>\n     <view :class=\"flag?'flaGreen':'flagRed'\">I's Xq</view>\n</template>\n\n<script>\n   export default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tflag:false\n\t\t\t}\n\t    }\n    }\n</script>\n<style>\n\t.flaGreen{\n\t\tcolor: green\n\t}\n\t.flagRed{\n\t\tcolor: red\n\t}\n</style>\n```\n","slug":"工作知识总结/工作知识难点摘要系列-13、动态绑定样式2","published":1,"date":"2024-11-05T14:59:24.483Z","updated":"2023-05-07T11:50:38.947Z","layout":"post","photos":[],"_id":"cm42hwwtv000nssnngx4e2zv7","content":"<h1 id=\"一、动态绑定样式-补充\"><a href=\"#一、动态绑定样式-补充\" class=\"headerlink\" title=\"一、动态绑定样式(补充)\"></a>一、动态绑定样式(补充)</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;上次写了个动态样式绑定写的太简单了，后来发现还有一些比较有意思的场景没有考虑到，现在给他补充一下的。好的，那么我们接下来开始吧！！！！！！</p>\n\n<h2 id=\"2、多种方式\"><a href=\"#2、多种方式\" class=\"headerlink\" title=\"2、多种方式\"></a>2、多种方式</h2><h3 id=\"2-1、普通对象动态添加（比较常见）\"><a href=\"#2-1、普通对象动态添加（比较常见）\" class=\"headerlink\" title=\"2.1、普通对象动态添加（比较常见）\"></a>2.1、普通对象动态添加（比较常见）</h3><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">></span>\n    \t<span class=\"token comment\">/* 动态添加颜色 */</span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"&#123;color:fontColor&#125;\"</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t\t<span class=\"token comment\">/* 2.动态添加边距 */</span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"&#123; paddingTop: num + 'px' &#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t\t<span class=\"token comment\">/* 3.动态添加背景图片 */</span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"&#123;backgroundImage: 'url(' + imageURL + ')','background-repeat':'no-repeat', 'backgroundSize':'100% 100%'&#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n \n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token literal-property property\">imageURL</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://app-file.beitaichufang.com/img/H5/web/banner/banner23.jpg'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//图片</span>\n\t\t\t\t<span class=\"token literal-property property\">num</span><span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//字体大小</span>\n\t\t\t\t<span class=\"token literal-property property\">fontColor</span><span class=\"token operator\">:</span><span class=\"token string\">'red'</span> <span class=\"token comment\">//字体颜色</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"2-2、数组对象动态添加（加多个样式，有点意思）\"><a href=\"#2-2、数组对象动态添加（加多个样式，有点意思）\" class=\"headerlink\" title=\"2.2、数组对象动态添加（加多个样式，有点意思）\"></a>2.2、数组对象动态添加（加多个样式，有点意思）</h3><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">></span>\n    \t<span class=\"token comment\">/* 1.动态添加颜色，动态添加边距 */</span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"[&#123;paddingTop: num + 'px'&#125;,&#123;color:fontColor&#125;]\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n    \t<span class=\"token comment\">/* 2.动态添加背景图片  */</span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"[&#123;'background-image':`url($&#123;imageURL&#125;)`&#125;,&#123;'background-repeat':'no-repeat'&#125;,&#123;'background-size':'100% 100%'&#125;]\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n \n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token literal-property property\">imageURL</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://app-file.beitaichufang.com/img/H5/web/banner/banner23.jpg'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//图片</span>\n\t\t\t\t<span class=\"token literal-property property\">num</span><span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//字体大小</span>\n\t\t\t\t<span class=\"token literal-property property\">fontColor</span><span class=\"token operator\">:</span><span class=\"token string\">'red'</span> <span class=\"token comment\">//字体颜色</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"2-3、三目运算动态添加\"><a href=\"#2-3、三目运算动态添加\" class=\"headerlink\" title=\"2.3、三目运算动态添加\"></a>2.3、三目运算动态添加</h3><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">></span>\n    \t<span class=\"token comment\">/* 如果flag为true   颜色就为red色 */</span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"[&#123;color:(flag?fontColor:'green')&#125;,&#123;fontSize:'20px'&#125;]\"</span><span class=\"token operator\">></span>green<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"[&#123;color:(!flag?fontColor:'green')&#125;]\"</span><span class=\"token operator\">></span>red<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t\t<span class=\"token comment\">/* 如果flag为false  颜色就为green色 */</span>\n    \t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"[flag?&#123;top:searchTop + 'px',width:searchWidth + 'px'&#125;:&#123;top:'100px',width:'100%'&#125;]\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n \n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n   <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token literal-property property\">fontColor</span><span class=\"token operator\">:</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token literal-property property\">flag</span><span class=\"token operator\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        \t\t<span class=\"token literal-property property\">searchTop</span><span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n        \t\t<span class=\"token literal-property property\">searchWidth</span><span class=\"token operator\">:</span><span class=\"token number\">100</span>\n\t\t    <span class=\"token punctuation\">&#125;</span>\n\t    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"2-4、动态设置class\"><a href=\"#2-4、动态设置class\" class=\"headerlink\" title=\"2.4、动态设置class\"></a>2.4、动态设置class</h3><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"flag?'flaGreen':'flagRed'\"</span><span class=\"token operator\">></span><span class=\"token constant\">I</span>'s Xq<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n   <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token literal-property property\">flag</span><span class=\"token operator\">:</span><span class=\"token boolean\">false</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n\t<span class=\"token punctuation\">.</span>flaGreen<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> green\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">.</span>flagRed<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> red\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre>\n","excerpt":"","more":"<h1 id=\"一、动态绑定样式-补充\"><a href=\"#一、动态绑定样式-补充\" class=\"headerlink\" title=\"一、动态绑定样式(补充)\"></a>一、动态绑定样式(补充)</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;上次写了个动态样式绑定写的太简单了，后来发现还有一些比较有意思的场景没有考虑到，现在给他补充一下的。好的，那么我们接下来开始吧！！！！！！</p>\n\n<h2 id=\"2、多种方式\"><a href=\"#2、多种方式\" class=\"headerlink\" title=\"2、多种方式\"></a>2、多种方式</h2><h3 id=\"2-1、普通对象动态添加（比较常见）\"><a href=\"#2-1、普通对象动态添加（比较常见）\" class=\"headerlink\" title=\"2.1、普通对象动态添加（比较常见）\"></a>2.1、普通对象动态添加（比较常见）</h3><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">></span>\n    \t<span class=\"token comment\">/* 动态添加颜色 */</span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"&#123;color:fontColor&#125;\"</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t\t<span class=\"token comment\">/* 2.动态添加边距 */</span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"&#123; paddingTop: num + 'px' &#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t\t<span class=\"token comment\">/* 3.动态添加背景图片 */</span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"&#123;backgroundImage: 'url(' + imageURL + ')','background-repeat':'no-repeat', 'backgroundSize':'100% 100%'&#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n \n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token literal-property property\">imageURL</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://app-file.beitaichufang.com/img/H5/web/banner/banner23.jpg'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//图片</span>\n\t\t\t\t<span class=\"token literal-property property\">num</span><span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//字体大小</span>\n\t\t\t\t<span class=\"token literal-property property\">fontColor</span><span class=\"token operator\">:</span><span class=\"token string\">'red'</span> <span class=\"token comment\">//字体颜色</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"2-2、数组对象动态添加（加多个样式，有点意思）\"><a href=\"#2-2、数组对象动态添加（加多个样式，有点意思）\" class=\"headerlink\" title=\"2.2、数组对象动态添加（加多个样式，有点意思）\"></a>2.2、数组对象动态添加（加多个样式，有点意思）</h3><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">></span>\n    \t<span class=\"token comment\">/* 1.动态添加颜色，动态添加边距 */</span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"[&#123;paddingTop: num + 'px'&#125;,&#123;color:fontColor&#125;]\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n    \t<span class=\"token comment\">/* 2.动态添加背景图片  */</span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"[&#123;'background-image':`url($&#123;imageURL&#125;)`&#125;,&#123;'background-repeat':'no-repeat'&#125;,&#123;'background-size':'100% 100%'&#125;]\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n \n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token literal-property property\">imageURL</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://app-file.beitaichufang.com/img/H5/web/banner/banner23.jpg'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//图片</span>\n\t\t\t\t<span class=\"token literal-property property\">num</span><span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//字体大小</span>\n\t\t\t\t<span class=\"token literal-property property\">fontColor</span><span class=\"token operator\">:</span><span class=\"token string\">'red'</span> <span class=\"token comment\">//字体颜色</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"2-3、三目运算动态添加\"><a href=\"#2-3、三目运算动态添加\" class=\"headerlink\" title=\"2.3、三目运算动态添加\"></a>2.3、三目运算动态添加</h3><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">></span>\n    \t<span class=\"token comment\">/* 如果flag为true   颜色就为red色 */</span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"[&#123;color:(flag?fontColor:'green')&#125;,&#123;fontSize:'20px'&#125;]\"</span><span class=\"token operator\">></span>green<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t\t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"[&#123;color:(!flag?fontColor:'green')&#125;]\"</span><span class=\"token operator\">></span>red<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t\t<span class=\"token comment\">/* 如果flag为false  颜色就为green色 */</span>\n    \t<span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"[flag?&#123;top:searchTop + 'px',width:searchWidth + 'px'&#125;:&#123;top:'100px',width:'100%'&#125;]\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n \n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n   <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token literal-property property\">fontColor</span><span class=\"token operator\">:</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token literal-property property\">flag</span><span class=\"token operator\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        \t\t<span class=\"token literal-property property\">searchTop</span><span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n        \t\t<span class=\"token literal-property property\">searchWidth</span><span class=\"token operator\">:</span><span class=\"token number\">100</span>\n\t\t    <span class=\"token punctuation\">&#125;</span>\n\t    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"2-4、动态设置class\"><a href=\"#2-4、动态设置class\" class=\"headerlink\" title=\"2.4、动态设置class\"></a>2.4、动态设置class</h3><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span>view <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"flag?'flaGreen':'flagRed'\"</span><span class=\"token operator\">></span><span class=\"token constant\">I</span>'s Xq<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n   <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token literal-property property\">flag</span><span class=\"token operator\">:</span><span class=\"token boolean\">false</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n\t<span class=\"token punctuation\">.</span>flaGreen<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> green\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">.</span>flagRed<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> red\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre>\n"},{"title":"一、this.$set()","comments":1,"_content":"\n# 一、工作知识难点摘要之this.$set()\n## 1、this.$set()的使用\n### 1.1、为什么要有this.$set()\n<p>&emsp;&emsp;在我们使用vue进行开发的过程中，可能会遇到一种情况：生成vue实例后，再次给数据赋值时，有时候并不会自动更新到视图上去； 当我们去看vue文档的时候，会发现有这么一句话：如果在实例创建之后添加新的属性到实例上，它不会触发视图更新。如下代码，给 student 对象新增 age 属性。</p>\n\n```javascript\n<script lang=\"ts\">\n  import { Vue, Component } from 'vue-property-decorator';\n  @Component({\n    components: {\n      \n    }\n  })\n  export default class TestCase extends Vue {\n    student:any = {\n      name: '小先生',\n      gender: '男'\n    }\n    mounted () {\n      this.student.age = 24\n    }\n  }\n<script>\n```\n\n<p>&emsp;&emsp;受 ES5 的限制，Vue.js 不能检测到对象属性的添加或删除。因为 Vue.js 在初始化实例时将属性转为 getter/setter，所以属性必须在 data 对象上才能让 Vue.js 转换它，才能让它是响应的，this.$set()的出现就是为了解决这个问题。</p>\n\n<p>&emsp;&emsp;开发背景：平常在做项目的时候，后端接口返回 json 数据，数据是要渲染到页面的，这个时候并不会有什么问题。但是当因为某些特殊需求，需要在返回的数据对象里面添加一个字段，添加是添加进去了，但是页面渲染却没有变化，因为不是响应式的。如果我们要让这个新字段是响应式的，就要使用到this.$set()来注入数据。</p>\n\n### 1.2、this.$set()的使用\n<p>&emsp;&emsp;this.$set(target, key, value);</p>\n\n<p>&emsp;&emsp;<strong>target</strong>：表示数据源，即要操作的数组或者对象;</p>\n\n<p>&emsp;&emsp;<strong>key</strong>：要操作的对象的某一个属性;</p>\n\n<p>&emsp;&emsp;<strong>value</strong>：更改的数据.</p>\n\n<p>&emsp;&emsp;当我们要给student添加age属性时，可写为：this.$set(this.student, 'age', 18),这种写法会给 student 添加的 age 添加getter/setter方法，可以被监听，页面也可以实时渲染。<p>\n\n### 1.3、this.$set()实例\n\n<p><strong>注意</strong>：不用this.$set()方法，age是不会被渲染出来的。。。。</p>\n\n![](/images/set.gif)\n\n\n","source":"_posts/工作知识总结/工作知识难点摘要系列-1、this.$set().md","raw":"---\ntitle: 一、this.$set()\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 一、工作知识难点摘要之this.$set()\n## 1、this.$set()的使用\n### 1.1、为什么要有this.$set()\n<p>&emsp;&emsp;在我们使用vue进行开发的过程中，可能会遇到一种情况：生成vue实例后，再次给数据赋值时，有时候并不会自动更新到视图上去； 当我们去看vue文档的时候，会发现有这么一句话：如果在实例创建之后添加新的属性到实例上，它不会触发视图更新。如下代码，给 student 对象新增 age 属性。</p>\n\n```javascript\n<script lang=\"ts\">\n  import { Vue, Component } from 'vue-property-decorator';\n  @Component({\n    components: {\n      \n    }\n  })\n  export default class TestCase extends Vue {\n    student:any = {\n      name: '小先生',\n      gender: '男'\n    }\n    mounted () {\n      this.student.age = 24\n    }\n  }\n<script>\n```\n\n<p>&emsp;&emsp;受 ES5 的限制，Vue.js 不能检测到对象属性的添加或删除。因为 Vue.js 在初始化实例时将属性转为 getter/setter，所以属性必须在 data 对象上才能让 Vue.js 转换它，才能让它是响应的，this.$set()的出现就是为了解决这个问题。</p>\n\n<p>&emsp;&emsp;开发背景：平常在做项目的时候，后端接口返回 json 数据，数据是要渲染到页面的，这个时候并不会有什么问题。但是当因为某些特殊需求，需要在返回的数据对象里面添加一个字段，添加是添加进去了，但是页面渲染却没有变化，因为不是响应式的。如果我们要让这个新字段是响应式的，就要使用到this.$set()来注入数据。</p>\n\n### 1.2、this.$set()的使用\n<p>&emsp;&emsp;this.$set(target, key, value);</p>\n\n<p>&emsp;&emsp;<strong>target</strong>：表示数据源，即要操作的数组或者对象;</p>\n\n<p>&emsp;&emsp;<strong>key</strong>：要操作的对象的某一个属性;</p>\n\n<p>&emsp;&emsp;<strong>value</strong>：更改的数据.</p>\n\n<p>&emsp;&emsp;当我们要给student添加age属性时，可写为：this.$set(this.student, 'age', 18),这种写法会给 student 添加的 age 添加getter/setter方法，可以被监听，页面也可以实时渲染。<p>\n\n### 1.3、this.$set()实例\n\n<p><strong>注意</strong>：不用this.$set()方法，age是不会被渲染出来的。。。。</p>\n\n![](/images/set.gif)\n\n\n","slug":"工作知识总结/工作知识难点摘要系列-1、this.$set()","published":1,"date":"2024-11-05T14:59:24.487Z","updated":"2022-11-26T18:03:25.769Z","layout":"post","photos":[],"_id":"cm42hwwtx000rssnn641geivv","content":"<h1 id=\"一、工作知识难点摘要之this-set\"><a href=\"#一、工作知识难点摘要之this-set\" class=\"headerlink\" title=\"一、工作知识难点摘要之this.$set()\"></a>一、工作知识难点摘要之this.$set()</h1><h2 id=\"1、this-set-的使用\"><a href=\"#1、this-set-的使用\" class=\"headerlink\" title=\"1、this.$set()的使用\"></a>1、this.$set()的使用</h2><h3 id=\"1-1、为什么要有this-set\"><a href=\"#1-1、为什么要有this-set\" class=\"headerlink\" title=\"1.1、为什么要有this.$set()\"></a>1.1、为什么要有this.$set()</h3><p>&emsp;&emsp;在我们使用vue进行开发的过程中，可能会遇到一种情况：生成vue实例后，再次给数据赋值时，有时候并不会自动更新到视图上去； 当我们去看vue文档的时候，会发现有这么一句话：如果在实例创建之后添加新的属性到实例上，它不会触发视图更新。如下代码，给 student 对象新增 age 属性。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n  @<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      \n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">student</span><span class=\"token operator\">:</span>any <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'小先生'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">gender</span><span class=\"token operator\">:</span> <span class=\"token string\">'男'</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>student<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">24</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<p>&emsp;&emsp;受 ES5 的限制，Vue.js 不能检测到对象属性的添加或删除。因为 Vue.js 在初始化实例时将属性转为 getter/setter，所以属性必须在 data 对象上才能让 Vue.js 转换它，才能让它是响应的，this.$set()的出现就是为了解决这个问题。</p>\n\n<p>&emsp;&emsp;开发背景：平常在做项目的时候，后端接口返回 json 数据，数据是要渲染到页面的，这个时候并不会有什么问题。但是当因为某些特殊需求，需要在返回的数据对象里面添加一个字段，添加是添加进去了，但是页面渲染却没有变化，因为不是响应式的。如果我们要让这个新字段是响应式的，就要使用到this.$set()来注入数据。</p>\n\n<h3 id=\"1-2、this-set-的使用\"><a href=\"#1-2、this-set-的使用\" class=\"headerlink\" title=\"1.2、this.$set()的使用\"></a>1.2、this.$set()的使用</h3><p>&emsp;&emsp;this.$set(target, key, value);</p>\n\n<p>&emsp;&emsp;<strong>target</strong>：表示数据源，即要操作的数组或者对象;</p>\n\n<p>&emsp;&emsp;<strong>key</strong>：要操作的对象的某一个属性;</p>\n\n<p>&emsp;&emsp;<strong>value</strong>：更改的数据.</p>\n\n<p>&emsp;&emsp;当我们要给student添加age属性时，可写为：this.$set(this.student, 'age', 18),这种写法会给 student 添加的 age 添加getter/setter方法，可以被监听，页面也可以实时渲染。<p>\n\n<h3 id=\"1-3、this-set-实例\"><a href=\"#1-3、this-set-实例\" class=\"headerlink\" title=\"1.3、this.$set()实例\"></a>1.3、this.$set()实例</h3><p><strong>注意</strong>：不用this.$set()方法，age是不会被渲染出来的。。。。</p>\n\n<p><img src=\"/images/set.gif\"></p>\n","excerpt":"","more":"<h1 id=\"一、工作知识难点摘要之this-set\"><a href=\"#一、工作知识难点摘要之this-set\" class=\"headerlink\" title=\"一、工作知识难点摘要之this.$set()\"></a>一、工作知识难点摘要之this.$set()</h1><h2 id=\"1、this-set-的使用\"><a href=\"#1、this-set-的使用\" class=\"headerlink\" title=\"1、this.$set()的使用\"></a>1、this.$set()的使用</h2><h3 id=\"1-1、为什么要有this-set\"><a href=\"#1-1、为什么要有this-set\" class=\"headerlink\" title=\"1.1、为什么要有this.$set()\"></a>1.1、为什么要有this.$set()</h3><p>&emsp;&emsp;在我们使用vue进行开发的过程中，可能会遇到一种情况：生成vue实例后，再次给数据赋值时，有时候并不会自动更新到视图上去； 当我们去看vue文档的时候，会发现有这么一句话：如果在实例创建之后添加新的属性到实例上，它不会触发视图更新。如下代码，给 student 对象新增 age 属性。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n  @<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      \n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">student</span><span class=\"token operator\">:</span>any <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'小先生'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">gender</span><span class=\"token operator\">:</span> <span class=\"token string\">'男'</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>student<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">24</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<p>&emsp;&emsp;受 ES5 的限制，Vue.js 不能检测到对象属性的添加或删除。因为 Vue.js 在初始化实例时将属性转为 getter/setter，所以属性必须在 data 对象上才能让 Vue.js 转换它，才能让它是响应的，this.$set()的出现就是为了解决这个问题。</p>\n\n<p>&emsp;&emsp;开发背景：平常在做项目的时候，后端接口返回 json 数据，数据是要渲染到页面的，这个时候并不会有什么问题。但是当因为某些特殊需求，需要在返回的数据对象里面添加一个字段，添加是添加进去了，但是页面渲染却没有变化，因为不是响应式的。如果我们要让这个新字段是响应式的，就要使用到this.$set()来注入数据。</p>\n\n<h3 id=\"1-2、this-set-的使用\"><a href=\"#1-2、this-set-的使用\" class=\"headerlink\" title=\"1.2、this.$set()的使用\"></a>1.2、this.$set()的使用</h3><p>&emsp;&emsp;this.$set(target, key, value);</p>\n\n<p>&emsp;&emsp;<strong>target</strong>：表示数据源，即要操作的数组或者对象;</p>\n\n<p>&emsp;&emsp;<strong>key</strong>：要操作的对象的某一个属性;</p>\n\n<p>&emsp;&emsp;<strong>value</strong>：更改的数据.</p>\n\n<p>&emsp;&emsp;当我们要给student添加age属性时，可写为：this.$set(this.student, 'age', 18),这种写法会给 student 添加的 age 添加getter/setter方法，可以被监听，页面也可以实时渲染。<p>\n\n<h3 id=\"1-3、this-set-实例\"><a href=\"#1-3、this-set-实例\" class=\"headerlink\" title=\"1.3、this.$set()实例\"></a>1.3、this.$set()实例</h3><p><strong>注意</strong>：不用this.$set()方法，age是不会被渲染出来的。。。。</p>\n\n<p><img src=\"/images/set.gif\"></p>\n"},{"title":"十四、iview中table使用render渲染部分原子组件","comments":1,"_content":"\n# 一、在线浏览word并下载\n\n## 1、简单介绍\n<p>&emsp;&emsp;最近遇到了很多场景就是要在table里渲染组件（比如select、switch、radio），然后直接操作控制table的行数据以及动态显示，这里记录一下，这个以后应该能经常用到。。。。</p>\n\n## 2、组件渲染\n### 2.1、switch和radio组件的渲染\n<p>&emsp;&emsp;简单介绍一下场景，需要一个表格，表格有四列，第三列放switch,第四列放radio，同时第三列的switch关闭的同时禁用radio，来吧看下，当然不懂的小伙伴可以先看下iview官网了解一下table组件。。还有一个很重要的，大家看第零列，在用render的时候我们做了条件判断并且用了循环去渲染option，其次我们渲染了div这种不是表单标签的普通标签，再写属性的时候是用domprops包裹的！！！！！</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <Table :data=\"tableData\" :columns=\"tableColumns\" :border=\"true\"><Table>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n// 比较有意思的是，我们在渲染radio的时候写的是Radio，但是渲染switch用的是i-switch,这是iview的组件写法，不知道为啥写成Switch就是不行。然后还有一个需要注意的地方就是radio渲染是先渲染了一个RadioGroup，然后在RadioGroup里再渲染两个radio。注意列3的key是isShow,列4的key是isrequired。\npublic stNodeColumns = [\n    { \n      title: '列0',\n      key: 'stNode',\n      align: 'left',\n      width: 140,\n      render: (h, params) => {\n        if (Array.isArray(params.row.stNode)) {\n          return h('Select', {\n            props: {\n              value: params.row.stSelectNode,\n              multiple: false,\n              disabled: flag\n            },\n            on: {\n              'on-change': (e) => {\n                this.setSelectNode(params.row, e);\n              }\n            }\n          },\n          params.row.stNode.map(val => {\n            return h('Option', {\n              props: {\n                value: val.value\n              }\n            }, val.label)\n          }))\n        } else {\n          return h('div', {\n          domProps: {\n            innerHTML: params.row.stNode\n          }\n        })\n        }\n      }\n    },\n    {\n      title: '列1',\n      key: 'col-one',\n      align: 'left',\n      width: 160\n    },\n    {\n      title: '列2',\n      key: 'col-two',\n      align: 'left'\n    },\n    {\n      title: '列3',\n      key: 'isShow',\n      align: 'center',\n      ellipsis: true,\n      tooltip: true,\n      render: (h, params) => {\n        return h('i-switch', {\n          props: {\n            value: params.row.isShow\n          },\n          on: {\n            'on-change': (e) => {\n              this.changeStRequired(params.row,e)\n            }\n          }\n        })\n      }\n    },\n    {\n      title: '列4',\n      key: 'isRequired',\n      width: 150,\n      align: 'left',\n      ellipsis: true,\n      tooltip: true,\n      render: (h, params) => {\n        return h('RadioGroup', {\n          props: {\n            value: this.issirequie(params.row)\n          },\n          on: {\n            'on-change': (e) => {\n              this.changeRequired(params.row,e);\n            }\n          }\n        },\n        [h('Radio', {\n          props: {\n            label: '必填',\n            disabled: !params.row.isShow\n          }\n        }),\n        h('Radio', {\n          props: {\n            label: '选填',\n            disabled: !params.row.isShow\n          }\n        })\n        ])\n      }\n    }\n  ]\n\n  // 通过传过来的数据控制radioGroup的值，也同时控制了显示\n  public issirequie(row: any) {\n    if (row.isRequired === 0 && row.isShow) {\n      return '必填';\n    } else if (row.isRequired === 1 && row.isShow) {\n      return '选填';\n    } else {\n      return null;\n    }\n  }\n\n  // 改变radio选项时触发的事件\n  public changeRequired(row,e) {\n    if(e === '必填') {\n      row.isRequired = 0\n      this.tableData[row._index].isRequired = 0;\n    } else if('选填') {\n      row.isRequired = 1\n      this.tableData[row._index].isRequired = 1;\n    }\n  }\n\n  // 改变switch时，同时会控制radio是否可用\n  public changeStRequired(row,e) {\n    row.isRequired = null;\n    row.isShow = !row.isShow;\n    this.tableData[row._index].isShow = row.isShow;\n  }\n}\n<script>\n```\n\n## 注意：需要注意的是，我们再每次触发三个函数的时候同时都更新了tableData的值，应为这是table绑定的行数据他更新后，列表也会随时更新！！","source":"_posts/工作知识总结/工作知识难点摘要系列-14、iview中table使用render渲染部分原子组件.md","raw":"---\ntitle: 十四、iview中table使用render渲染部分原子组件\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 一、在线浏览word并下载\n\n## 1、简单介绍\n<p>&emsp;&emsp;最近遇到了很多场景就是要在table里渲染组件（比如select、switch、radio），然后直接操作控制table的行数据以及动态显示，这里记录一下，这个以后应该能经常用到。。。。</p>\n\n## 2、组件渲染\n### 2.1、switch和radio组件的渲染\n<p>&emsp;&emsp;简单介绍一下场景，需要一个表格，表格有四列，第三列放switch,第四列放radio，同时第三列的switch关闭的同时禁用radio，来吧看下，当然不懂的小伙伴可以先看下iview官网了解一下table组件。。还有一个很重要的，大家看第零列，在用render的时候我们做了条件判断并且用了循环去渲染option，其次我们渲染了div这种不是表单标签的普通标签，再写属性的时候是用domprops包裹的！！！！！</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <Table :data=\"tableData\" :columns=\"tableColumns\" :border=\"true\"><Table>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n// 比较有意思的是，我们在渲染radio的时候写的是Radio，但是渲染switch用的是i-switch,这是iview的组件写法，不知道为啥写成Switch就是不行。然后还有一个需要注意的地方就是radio渲染是先渲染了一个RadioGroup，然后在RadioGroup里再渲染两个radio。注意列3的key是isShow,列4的key是isrequired。\npublic stNodeColumns = [\n    { \n      title: '列0',\n      key: 'stNode',\n      align: 'left',\n      width: 140,\n      render: (h, params) => {\n        if (Array.isArray(params.row.stNode)) {\n          return h('Select', {\n            props: {\n              value: params.row.stSelectNode,\n              multiple: false,\n              disabled: flag\n            },\n            on: {\n              'on-change': (e) => {\n                this.setSelectNode(params.row, e);\n              }\n            }\n          },\n          params.row.stNode.map(val => {\n            return h('Option', {\n              props: {\n                value: val.value\n              }\n            }, val.label)\n          }))\n        } else {\n          return h('div', {\n          domProps: {\n            innerHTML: params.row.stNode\n          }\n        })\n        }\n      }\n    },\n    {\n      title: '列1',\n      key: 'col-one',\n      align: 'left',\n      width: 160\n    },\n    {\n      title: '列2',\n      key: 'col-two',\n      align: 'left'\n    },\n    {\n      title: '列3',\n      key: 'isShow',\n      align: 'center',\n      ellipsis: true,\n      tooltip: true,\n      render: (h, params) => {\n        return h('i-switch', {\n          props: {\n            value: params.row.isShow\n          },\n          on: {\n            'on-change': (e) => {\n              this.changeStRequired(params.row,e)\n            }\n          }\n        })\n      }\n    },\n    {\n      title: '列4',\n      key: 'isRequired',\n      width: 150,\n      align: 'left',\n      ellipsis: true,\n      tooltip: true,\n      render: (h, params) => {\n        return h('RadioGroup', {\n          props: {\n            value: this.issirequie(params.row)\n          },\n          on: {\n            'on-change': (e) => {\n              this.changeRequired(params.row,e);\n            }\n          }\n        },\n        [h('Radio', {\n          props: {\n            label: '必填',\n            disabled: !params.row.isShow\n          }\n        }),\n        h('Radio', {\n          props: {\n            label: '选填',\n            disabled: !params.row.isShow\n          }\n        })\n        ])\n      }\n    }\n  ]\n\n  // 通过传过来的数据控制radioGroup的值，也同时控制了显示\n  public issirequie(row: any) {\n    if (row.isRequired === 0 && row.isShow) {\n      return '必填';\n    } else if (row.isRequired === 1 && row.isShow) {\n      return '选填';\n    } else {\n      return null;\n    }\n  }\n\n  // 改变radio选项时触发的事件\n  public changeRequired(row,e) {\n    if(e === '必填') {\n      row.isRequired = 0\n      this.tableData[row._index].isRequired = 0;\n    } else if('选填') {\n      row.isRequired = 1\n      this.tableData[row._index].isRequired = 1;\n    }\n  }\n\n  // 改变switch时，同时会控制radio是否可用\n  public changeStRequired(row,e) {\n    row.isRequired = null;\n    row.isShow = !row.isShow;\n    this.tableData[row._index].isShow = row.isShow;\n  }\n}\n<script>\n```\n\n## 注意：需要注意的是，我们再每次触发三个函数的时候同时都更新了tableData的值，应为这是table绑定的行数据他更新后，列表也会随时更新！！","slug":"工作知识总结/工作知识难点摘要系列-14、iview中table使用render渲染部分原子组件","published":1,"date":"2024-11-05T14:59:24.485Z","updated":"2023-05-07T12:15:05.970Z","layout":"post","photos":[],"_id":"cm42hwwty000tssnndd5celt7","content":"<h1 id=\"一、在线浏览word并下载\"><a href=\"#一、在线浏览word并下载\" class=\"headerlink\" title=\"一、在线浏览word并下载\"></a>一、在线浏览word并下载</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;最近遇到了很多场景就是要在table里渲染组件（比如select、switch、radio），然后直接操作控制table的行数据以及动态显示，这里记录一下，这个以后应该能经常用到。。。。</p>\n\n<h2 id=\"2、组件渲染\"><a href=\"#2、组件渲染\" class=\"headerlink\" title=\"2、组件渲染\"></a>2、组件渲染</h2><h3 id=\"2-1、switch和radio组件的渲染\"><a href=\"#2-1、switch和radio组件的渲染\" class=\"headerlink\" title=\"2.1、switch和radio组件的渲染\"></a>2.1、switch和radio组件的渲染</h3><p>&emsp;&emsp;简单介绍一下场景，需要一个表格，表格有四列，第三列放switch,第四列放radio，同时第三列的switch关闭的同时禁用radio，来吧看下，当然不懂的小伙伴可以先看下iview官网了解一下table组件。。还有一个很重要的，大家看第零列，在用render的时候我们做了条件判断并且用了循环去渲染option，其次我们渲染了div这种不是表单标签的普通标签，再写属性的时候是用domprops包裹的！！！！！</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Table <span class=\"token operator\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"tableData\"</span> <span class=\"token operator\">:</span>columns<span class=\"token operator\">=</span><span class=\"token string\">\"tableColumns\"</span> <span class=\"token operator\">:</span>border<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>Table<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">// 比较有意思的是，我们在渲染radio的时候写的是Radio，但是渲染switch用的是i-switch,这是iview的组件写法，不知道为啥写成Switch就是不行。然后还有一个需要注意的地方就是radio渲染是先渲染了一个RadioGroup，然后在RadioGroup里再渲染两个radio。注意列3的key是isShow,列4的key是isrequired。</span>\n<span class=\"token keyword\">public</span> stNodeColumns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span> \n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'列0'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'stNode'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">align</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">140</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">h<span class=\"token punctuation\">,</span> params</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>stNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Select'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>stSelectNode<span class=\"token punctuation\">,</span>\n              <span class=\"token literal-property property\">multiple</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n              <span class=\"token literal-property property\">disabled</span><span class=\"token operator\">:</span> flag\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">on</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token string-property property\">'on-change'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSelectNode</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n          params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>stNode<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Option'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> val<span class=\"token punctuation\">.</span>value\n              <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">domProps</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">innerHTML</span><span class=\"token operator\">:</span> params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>stNode\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'列1'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'col-one'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">align</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">160</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'列2'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'col-two'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">align</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'列3'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'isShow'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">align</span><span class=\"token operator\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">ellipsis</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">tooltip</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">h<span class=\"token punctuation\">,</span> params</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'i-switch'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>isShow\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">on</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token string-property property\">'on-change'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">changeStRequired</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'列4'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'isRequired'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">align</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">ellipsis</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">tooltip</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">h<span class=\"token punctuation\">,</span> params</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'RadioGroup'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">issirequie</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">on</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token string-property property\">'on-change'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">changeRequired</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Radio'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span> <span class=\"token string\">'必填'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">disabled</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>isShow\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Radio'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span> <span class=\"token string\">'选填'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">disabled</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>isShow\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">]</span>\n\n  <span class=\"token comment\">// 通过传过来的数据控制radioGroup的值，也同时控制了显示</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">issirequie</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">row</span><span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> row<span class=\"token punctuation\">.</span>isShow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'必填'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> row<span class=\"token punctuation\">.</span>isShow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'选填'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 改变radio选项时触发的事件</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">changeRequired</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">row<span class=\"token punctuation\">,</span>e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">===</span> <span class=\"token string\">'必填'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      row<span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableData<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">.</span>_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">'选填'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      row<span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableData<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">.</span>_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 改变switch时，同时会控制radio是否可用</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">changeStRequired</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">row<span class=\"token punctuation\">,</span>e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    row<span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    row<span class=\"token punctuation\">.</span>isShow <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>row<span class=\"token punctuation\">.</span>isShow<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableData<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">.</span>_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isShow <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>isShow<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h2 id=\"注意：需要注意的是，我们再每次触发三个函数的时候同时都更新了tableData的值，应为这是table绑定的行数据他更新后，列表也会随时更新！！\"><a href=\"#注意：需要注意的是，我们再每次触发三个函数的时候同时都更新了tableData的值，应为这是table绑定的行数据他更新后，列表也会随时更新！！\" class=\"headerlink\" title=\"注意：需要注意的是，我们再每次触发三个函数的时候同时都更新了tableData的值，应为这是table绑定的行数据他更新后，列表也会随时更新！！\"></a>注意：需要注意的是，我们再每次触发三个函数的时候同时都更新了tableData的值，应为这是table绑定的行数据他更新后，列表也会随时更新！！</h2>","excerpt":"","more":"<h1 id=\"一、在线浏览word并下载\"><a href=\"#一、在线浏览word并下载\" class=\"headerlink\" title=\"一、在线浏览word并下载\"></a>一、在线浏览word并下载</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;最近遇到了很多场景就是要在table里渲染组件（比如select、switch、radio），然后直接操作控制table的行数据以及动态显示，这里记录一下，这个以后应该能经常用到。。。。</p>\n\n<h2 id=\"2、组件渲染\"><a href=\"#2、组件渲染\" class=\"headerlink\" title=\"2、组件渲染\"></a>2、组件渲染</h2><h3 id=\"2-1、switch和radio组件的渲染\"><a href=\"#2-1、switch和radio组件的渲染\" class=\"headerlink\" title=\"2.1、switch和radio组件的渲染\"></a>2.1、switch和radio组件的渲染</h3><p>&emsp;&emsp;简单介绍一下场景，需要一个表格，表格有四列，第三列放switch,第四列放radio，同时第三列的switch关闭的同时禁用radio，来吧看下，当然不懂的小伙伴可以先看下iview官网了解一下table组件。。还有一个很重要的，大家看第零列，在用render的时候我们做了条件判断并且用了循环去渲染option，其次我们渲染了div这种不是表单标签的普通标签，再写属性的时候是用domprops包裹的！！！！！</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Table <span class=\"token operator\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"tableData\"</span> <span class=\"token operator\">:</span>columns<span class=\"token operator\">=</span><span class=\"token string\">\"tableColumns\"</span> <span class=\"token operator\">:</span>border<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>Table<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">// 比较有意思的是，我们在渲染radio的时候写的是Radio，但是渲染switch用的是i-switch,这是iview的组件写法，不知道为啥写成Switch就是不行。然后还有一个需要注意的地方就是radio渲染是先渲染了一个RadioGroup，然后在RadioGroup里再渲染两个radio。注意列3的key是isShow,列4的key是isrequired。</span>\n<span class=\"token keyword\">public</span> stNodeColumns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span> \n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'列0'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'stNode'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">align</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">140</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">h<span class=\"token punctuation\">,</span> params</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>stNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Select'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>stSelectNode<span class=\"token punctuation\">,</span>\n              <span class=\"token literal-property property\">multiple</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n              <span class=\"token literal-property property\">disabled</span><span class=\"token operator\">:</span> flag\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">on</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token string-property property\">'on-change'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSelectNode</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n          params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>stNode<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Option'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> val<span class=\"token punctuation\">.</span>value\n              <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">domProps</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">innerHTML</span><span class=\"token operator\">:</span> params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>stNode\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'列1'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'col-one'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">align</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">160</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'列2'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'col-two'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">align</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'列3'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'isShow'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">align</span><span class=\"token operator\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">ellipsis</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">tooltip</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">h<span class=\"token punctuation\">,</span> params</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'i-switch'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>isShow\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">on</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token string-property property\">'on-change'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">changeStRequired</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'列4'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'isRequired'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">align</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">ellipsis</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">tooltip</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">h<span class=\"token punctuation\">,</span> params</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'RadioGroup'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">issirequie</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">on</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token string-property property\">'on-change'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">changeRequired</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Radio'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span> <span class=\"token string\">'必填'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">disabled</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>isShow\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Radio'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span> <span class=\"token string\">'选填'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">disabled</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span>params<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>isShow\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">]</span>\n\n  <span class=\"token comment\">// 通过传过来的数据控制radioGroup的值，也同时控制了显示</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">issirequie</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">row</span><span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> row<span class=\"token punctuation\">.</span>isShow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'必填'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> row<span class=\"token punctuation\">.</span>isShow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'选填'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 改变radio选项时触发的事件</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">changeRequired</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">row<span class=\"token punctuation\">,</span>e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">===</span> <span class=\"token string\">'必填'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      row<span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableData<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">.</span>_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">'选填'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      row<span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableData<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">.</span>_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 改变switch时，同时会控制radio是否可用</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">changeStRequired</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">row<span class=\"token punctuation\">,</span>e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    row<span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    row<span class=\"token punctuation\">.</span>isShow <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>row<span class=\"token punctuation\">.</span>isShow<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableData<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">.</span>_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isShow <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>isShow<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h2 id=\"注意：需要注意的是，我们再每次触发三个函数的时候同时都更新了tableData的值，应为这是table绑定的行数据他更新后，列表也会随时更新！！\"><a href=\"#注意：需要注意的是，我们再每次触发三个函数的时候同时都更新了tableData的值，应为这是table绑定的行数据他更新后，列表也会随时更新！！\" class=\"headerlink\" title=\"注意：需要注意的是，我们再每次触发三个函数的时候同时都更新了tableData的值，应为这是table绑定的行数据他更新后，列表也会随时更新！！\"></a>注意：需要注意的是，我们再每次触发三个函数的时候同时都更新了tableData的值，应为这是table绑定的行数据他更新后，列表也会随时更新！！</h2>"},{"title":"二、this.$nextTick()","comments":1,"_content":"\n# 二、工作知识难点摘要之this.$nextTick()\n## 1、this.$nextTick()的使用\n### 1.1、为什么要有this.$nextTick()\n<p>&emsp;&emsp;一句话，用我的理解，this.$nextTick就是为了应对DOM的，因为在vue中，DOM的更新是异步的。Vue的响应式并不是只数据发生变化之后，DOM就立刻发生变化，而是按照一定的策略进行DOM的更新。这样的好处是可以避免一些对DOM不必要的操作，提高渲染性能。</p>\n\n<p>&emsp;&emsp;其实这是和JS当中的事件循环是息息相关的，就是Vue不可能对每一个数据变化都做一次渲染，它会把这些变化先放在一个异步的队列当中，同时它还会对这个队列里面的操作进行去重，比如你修改了这个数据三次，它只会保留最后一次。这些变化是都可以通过队列的形式保存起来，那现在的问题就来到了，那vue是在事件循环的哪个时机来对DOM进行修改呢？</p>\n\n<p>&emsp;&emsp;Vue有两种选择，一个是在本次事件循环的最后进行一次DOM更新，另一种是把DOM更新放在下一轮的事件循环当中。这时，尤雨溪拍了拍胸脯说：“这两种方法，我都有!”  但是因为本轮事件循环最后执行会比放在下一轮事件循环要快很多，所以Vue优先选择第一种，只有当环境不支持的时候才触发第二种机制。</p>\n\n<p>&emsp;&emsp;虽然性能上提高了很多，但这个时候问题就出现了，我们都知道在一轮事件循环中，<span style=\"color: red\">同步执行栈中代码执行完成之后，才会执行异步队列当中的内容，</span> 那我们获取DOM的操作是一个同步的呀！！那岂不是虽然我已经把数据改掉了，但是它的更新异步的，而在获取的时候，它还没有来得及改。</p>\n\n<p>&emsp;&emsp;总结:nextTick当中的操作不会立即执行，而是等数据更新、DOM更新完成之后再执行，这样我们拿到的肯定就是最新的了。再准确一点来讲就是this.$nextTick()方法将回调延迟到下次DOM更新循环之后执行。</p>\n\n</p>&emsp;&emsp;<strong>使用场景</strong>：1、created中获取DOM的操作需要使用它，因为created钩子还未创建DOM，此时无法访问DOM，必须要延迟；\n2、当我们把DOM的某些数据改掉时，DOM还未立即更新，但是我们想通过DOM拿到最新的结果，比如用this.$ref访问组件或者标签，得用它。</p>\n\n[B站讲解视频](https://www.bilibili.com/video/BV1vK4y1U7sq/?spm_id_from=333.788.recommend_more_video.4&vd_source=bc93e908334fea5384c4d1d3b8e66bbc)","source":"_posts/工作知识总结/工作知识难点摘要系列-2、this.$nextTick().md","raw":"---\ntitle: 二、this.$nextTick()\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 二、工作知识难点摘要之this.$nextTick()\n## 1、this.$nextTick()的使用\n### 1.1、为什么要有this.$nextTick()\n<p>&emsp;&emsp;一句话，用我的理解，this.$nextTick就是为了应对DOM的，因为在vue中，DOM的更新是异步的。Vue的响应式并不是只数据发生变化之后，DOM就立刻发生变化，而是按照一定的策略进行DOM的更新。这样的好处是可以避免一些对DOM不必要的操作，提高渲染性能。</p>\n\n<p>&emsp;&emsp;其实这是和JS当中的事件循环是息息相关的，就是Vue不可能对每一个数据变化都做一次渲染，它会把这些变化先放在一个异步的队列当中，同时它还会对这个队列里面的操作进行去重，比如你修改了这个数据三次，它只会保留最后一次。这些变化是都可以通过队列的形式保存起来，那现在的问题就来到了，那vue是在事件循环的哪个时机来对DOM进行修改呢？</p>\n\n<p>&emsp;&emsp;Vue有两种选择，一个是在本次事件循环的最后进行一次DOM更新，另一种是把DOM更新放在下一轮的事件循环当中。这时，尤雨溪拍了拍胸脯说：“这两种方法，我都有!”  但是因为本轮事件循环最后执行会比放在下一轮事件循环要快很多，所以Vue优先选择第一种，只有当环境不支持的时候才触发第二种机制。</p>\n\n<p>&emsp;&emsp;虽然性能上提高了很多，但这个时候问题就出现了，我们都知道在一轮事件循环中，<span style=\"color: red\">同步执行栈中代码执行完成之后，才会执行异步队列当中的内容，</span> 那我们获取DOM的操作是一个同步的呀！！那岂不是虽然我已经把数据改掉了，但是它的更新异步的，而在获取的时候，它还没有来得及改。</p>\n\n<p>&emsp;&emsp;总结:nextTick当中的操作不会立即执行，而是等数据更新、DOM更新完成之后再执行，这样我们拿到的肯定就是最新的了。再准确一点来讲就是this.$nextTick()方法将回调延迟到下次DOM更新循环之后执行。</p>\n\n</p>&emsp;&emsp;<strong>使用场景</strong>：1、created中获取DOM的操作需要使用它，因为created钩子还未创建DOM，此时无法访问DOM，必须要延迟；\n2、当我们把DOM的某些数据改掉时，DOM还未立即更新，但是我们想通过DOM拿到最新的结果，比如用this.$ref访问组件或者标签，得用它。</p>\n\n[B站讲解视频](https://www.bilibili.com/video/BV1vK4y1U7sq/?spm_id_from=333.788.recommend_more_video.4&vd_source=bc93e908334fea5384c4d1d3b8e66bbc)","slug":"工作知识总结/工作知识难点摘要系列-2、this.$nextTick()","published":1,"date":"2024-11-05T14:59:24.489Z","updated":"2022-11-26T18:03:30.235Z","layout":"post","photos":[],"_id":"cm42hwwu0000xssnnd2u70vkf","content":"<h1 id=\"二、工作知识难点摘要之this-nextTick\"><a href=\"#二、工作知识难点摘要之this-nextTick\" class=\"headerlink\" title=\"二、工作知识难点摘要之this.$nextTick()\"></a>二、工作知识难点摘要之this.$nextTick()</h1><h2 id=\"1、this-nextTick-的使用\"><a href=\"#1、this-nextTick-的使用\" class=\"headerlink\" title=\"1、this.$nextTick()的使用\"></a>1、this.$nextTick()的使用</h2><h3 id=\"1-1、为什么要有this-nextTick\"><a href=\"#1-1、为什么要有this-nextTick\" class=\"headerlink\" title=\"1.1、为什么要有this.$nextTick()\"></a>1.1、为什么要有this.$nextTick()</h3><p>&emsp;&emsp;一句话，用我的理解，this.$nextTick就是为了应对DOM的，因为在vue中，DOM的更新是异步的。Vue的响应式并不是只数据发生变化之后，DOM就立刻发生变化，而是按照一定的策略进行DOM的更新。这样的好处是可以避免一些对DOM不必要的操作，提高渲染性能。</p>\n\n<p>&emsp;&emsp;其实这是和JS当中的事件循环是息息相关的，就是Vue不可能对每一个数据变化都做一次渲染，它会把这些变化先放在一个异步的队列当中，同时它还会对这个队列里面的操作进行去重，比如你修改了这个数据三次，它只会保留最后一次。这些变化是都可以通过队列的形式保存起来，那现在的问题就来到了，那vue是在事件循环的哪个时机来对DOM进行修改呢？</p>\n\n<p>&emsp;&emsp;Vue有两种选择，一个是在本次事件循环的最后进行一次DOM更新，另一种是把DOM更新放在下一轮的事件循环当中。这时，尤雨溪拍了拍胸脯说：“这两种方法，我都有!”  但是因为本轮事件循环最后执行会比放在下一轮事件循环要快很多，所以Vue优先选择第一种，只有当环境不支持的时候才触发第二种机制。</p>\n\n<p>&emsp;&emsp;虽然性能上提高了很多，但这个时候问题就出现了，我们都知道在一轮事件循环中，<span style=\"color: red\">同步执行栈中代码执行完成之后，才会执行异步队列当中的内容，</span> 那我们获取DOM的操作是一个同步的呀！！那岂不是虽然我已经把数据改掉了，但是它的更新异步的，而在获取的时候，它还没有来得及改。</p>\n\n<p>&emsp;&emsp;总结:nextTick当中的操作不会立即执行，而是等数据更新、DOM更新完成之后再执行，这样我们拿到的肯定就是最新的了。再准确一点来讲就是this.$nextTick()方法将回调延迟到下次DOM更新循环之后执行。</p>\n\n</p>&emsp;&emsp;<strong>使用场景</strong>：1、created中获取DOM的操作需要使用它，因为created钩子还未创建DOM，此时无法访问DOM，必须要延迟；\n2、当我们把DOM的某些数据改掉时，DOM还未立即更新，但是我们想通过DOM拿到最新的结果，比如用this.$ref访问组件或者标签，得用它。</p>\n\n<p><a href=\"https://www.bilibili.com/video/BV1vK4y1U7sq/?spm_id_from=333.788.recommend_more_video.4&vd_source=bc93e908334fea5384c4d1d3b8e66bbc\">B站讲解视频</a></p>\n","excerpt":"","more":"<h1 id=\"二、工作知识难点摘要之this-nextTick\"><a href=\"#二、工作知识难点摘要之this-nextTick\" class=\"headerlink\" title=\"二、工作知识难点摘要之this.$nextTick()\"></a>二、工作知识难点摘要之this.$nextTick()</h1><h2 id=\"1、this-nextTick-的使用\"><a href=\"#1、this-nextTick-的使用\" class=\"headerlink\" title=\"1、this.$nextTick()的使用\"></a>1、this.$nextTick()的使用</h2><h3 id=\"1-1、为什么要有this-nextTick\"><a href=\"#1-1、为什么要有this-nextTick\" class=\"headerlink\" title=\"1.1、为什么要有this.$nextTick()\"></a>1.1、为什么要有this.$nextTick()</h3><p>&emsp;&emsp;一句话，用我的理解，this.$nextTick就是为了应对DOM的，因为在vue中，DOM的更新是异步的。Vue的响应式并不是只数据发生变化之后，DOM就立刻发生变化，而是按照一定的策略进行DOM的更新。这样的好处是可以避免一些对DOM不必要的操作，提高渲染性能。</p>\n\n<p>&emsp;&emsp;其实这是和JS当中的事件循环是息息相关的，就是Vue不可能对每一个数据变化都做一次渲染，它会把这些变化先放在一个异步的队列当中，同时它还会对这个队列里面的操作进行去重，比如你修改了这个数据三次，它只会保留最后一次。这些变化是都可以通过队列的形式保存起来，那现在的问题就来到了，那vue是在事件循环的哪个时机来对DOM进行修改呢？</p>\n\n<p>&emsp;&emsp;Vue有两种选择，一个是在本次事件循环的最后进行一次DOM更新，另一种是把DOM更新放在下一轮的事件循环当中。这时，尤雨溪拍了拍胸脯说：“这两种方法，我都有!”  但是因为本轮事件循环最后执行会比放在下一轮事件循环要快很多，所以Vue优先选择第一种，只有当环境不支持的时候才触发第二种机制。</p>\n\n<p>&emsp;&emsp;虽然性能上提高了很多，但这个时候问题就出现了，我们都知道在一轮事件循环中，<span style=\"color: red\">同步执行栈中代码执行完成之后，才会执行异步队列当中的内容，</span> 那我们获取DOM的操作是一个同步的呀！！那岂不是虽然我已经把数据改掉了，但是它的更新异步的，而在获取的时候，它还没有来得及改。</p>\n\n<p>&emsp;&emsp;总结:nextTick当中的操作不会立即执行，而是等数据更新、DOM更新完成之后再执行，这样我们拿到的肯定就是最新的了。再准确一点来讲就是this.$nextTick()方法将回调延迟到下次DOM更新循环之后执行。</p>\n\n</p>&emsp;&emsp;<strong>使用场景</strong>：1、created中获取DOM的操作需要使用它，因为created钩子还未创建DOM，此时无法访问DOM，必须要延迟；\n2、当我们把DOM的某些数据改掉时，DOM还未立即更新，但是我们想通过DOM拿到最新的结果，比如用this.$ref访问组件或者标签，得用它。</p>\n\n<p><a href=\"https://www.bilibili.com/video/BV1vK4y1U7sq/?spm_id_from=333.788.recommend_more_video.4&vd_source=bc93e908334fea5384c4d1d3b8e66bbc\">B站讲解视频</a></p>\n"},{"title":"三、component动态组件","comments":1,"_content":"\n# 三、工作知识难点摘要之动态组件\n## 1、component动态组件的使用\n### 1.1、简单介绍\n<p>&emsp;&emsp;主要就是达到在各个引入的组件之间来回的动态切换，通过改变绑定的 is 属性。在实际的应用场景中，为了保证复用性和可维护性，采用vue内置的component组件来实现这一点。写法如下：</p>\n\n```javascript\n<component :is=\"currentComponent\"></component>\n```\n<p>&emsp;&emsp;通过改变绑定的currentCompntent的值实现引用组件的切换。</p>\n\n<p>&emsp;&emsp;另外一个场景就是，当在这些组件之间切换的时候，你有时会想保持这些组件的状态，以避免反复重新渲染导致的性能问题，写法如下：</p>\n\n```javascript\n<keep-alive>\n  <component :is=\"currentComponent\"></component>\n</keep-alive>\n```\n### 1.2、用例介绍\n<p>&emsp;&emsp;这里搭配了插槽使用，插槽会在后续章节单独说，这里只需要看compontent组件怎么用的就行。稍作解释一下，这里的CommonForm是一个自定义的表单组件，设置了插槽，这里调用插槽，并且通过动态组件的is属性绑定了slotProps.slotName（作用域插槽，暂时不用理解）的值。这个值的选项有五个分别是，caseOne、caseTwo、caseThree、caseFour、caseFive（分别对应了五个引入的组件），slotProps.slotName是哪一个值就渲染对应的组件，这样就可以实现，通过改变is属性的值来动态的决定要渲染什么组件。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <CommonForm>\n      <template v-slot:caseOne=\"slotProps\">\n        <component :is=\"slotProps.slotName\"></component>\n      </template>\n      <template v-slot:caseTwo=\"slotProps\">\n        <component :is=\"slotProps.slotName\"></component>\n      </template>\n      <template v-slot:caseThree=\"slotProps\">\n        <component :is=\"slotProps.slotName\"></component>\n      </template>\n      <template v-slot:caseFour=\"slotProps\">\n        <component :is=\"slotProps.slotName\"></component>\n      </template>\n      <template v-slot:caseFive=\"slotProps\">\n        <component :is=\"slotProps.slotName\"></component>\n      </template>\n    </CommonForm>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n    CommonForm: () => import('@/pages/Common/CommonForm.vue'),\n    caseOne: () => import('@/pages/Common/caseOne.vue'),\n    caseTwo: () => import('@/pages/Common/caseTwo.vue'),\n    caseThree: () => import('@/pages/Common/caseThree.vue'),\n    caseFour: () => import('@/pages/Common/caseFour.vue'),\n    caseFive: () => import('@/pages/Common/caseFive.vue'),\n  }\n})\nexport default class TestCase extends Vue {\n\n}\n<script>\n```","source":"_posts/工作知识总结/工作知识难点摘要系列-3、component动态组件.md","raw":"---\ntitle: 三、component动态组件\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 三、工作知识难点摘要之动态组件\n## 1、component动态组件的使用\n### 1.1、简单介绍\n<p>&emsp;&emsp;主要就是达到在各个引入的组件之间来回的动态切换，通过改变绑定的 is 属性。在实际的应用场景中，为了保证复用性和可维护性，采用vue内置的component组件来实现这一点。写法如下：</p>\n\n```javascript\n<component :is=\"currentComponent\"></component>\n```\n<p>&emsp;&emsp;通过改变绑定的currentCompntent的值实现引用组件的切换。</p>\n\n<p>&emsp;&emsp;另外一个场景就是，当在这些组件之间切换的时候，你有时会想保持这些组件的状态，以避免反复重新渲染导致的性能问题，写法如下：</p>\n\n```javascript\n<keep-alive>\n  <component :is=\"currentComponent\"></component>\n</keep-alive>\n```\n### 1.2、用例介绍\n<p>&emsp;&emsp;这里搭配了插槽使用，插槽会在后续章节单独说，这里只需要看compontent组件怎么用的就行。稍作解释一下，这里的CommonForm是一个自定义的表单组件，设置了插槽，这里调用插槽，并且通过动态组件的is属性绑定了slotProps.slotName（作用域插槽，暂时不用理解）的值。这个值的选项有五个分别是，caseOne、caseTwo、caseThree、caseFour、caseFive（分别对应了五个引入的组件），slotProps.slotName是哪一个值就渲染对应的组件，这样就可以实现，通过改变is属性的值来动态的决定要渲染什么组件。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <CommonForm>\n      <template v-slot:caseOne=\"slotProps\">\n        <component :is=\"slotProps.slotName\"></component>\n      </template>\n      <template v-slot:caseTwo=\"slotProps\">\n        <component :is=\"slotProps.slotName\"></component>\n      </template>\n      <template v-slot:caseThree=\"slotProps\">\n        <component :is=\"slotProps.slotName\"></component>\n      </template>\n      <template v-slot:caseFour=\"slotProps\">\n        <component :is=\"slotProps.slotName\"></component>\n      </template>\n      <template v-slot:caseFive=\"slotProps\">\n        <component :is=\"slotProps.slotName\"></component>\n      </template>\n    </CommonForm>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n    CommonForm: () => import('@/pages/Common/CommonForm.vue'),\n    caseOne: () => import('@/pages/Common/caseOne.vue'),\n    caseTwo: () => import('@/pages/Common/caseTwo.vue'),\n    caseThree: () => import('@/pages/Common/caseThree.vue'),\n    caseFour: () => import('@/pages/Common/caseFour.vue'),\n    caseFive: () => import('@/pages/Common/caseFive.vue'),\n  }\n})\nexport default class TestCase extends Vue {\n\n}\n<script>\n```","slug":"工作知识总结/工作知识难点摘要系列-3、component动态组件","published":1,"date":"2024-11-05T14:59:24.492Z","updated":"2022-11-26T18:03:34.251Z","layout":"post","photos":[],"_id":"cm42hwwu0000zssnnbvvlg2pb","content":"<h1 id=\"三、工作知识难点摘要之动态组件\"><a href=\"#三、工作知识难点摘要之动态组件\" class=\"headerlink\" title=\"三、工作知识难点摘要之动态组件\"></a>三、工作知识难点摘要之动态组件</h1><h2 id=\"1、component动态组件的使用\"><a href=\"#1、component动态组件的使用\" class=\"headerlink\" title=\"1、component动态组件的使用\"></a>1、component动态组件的使用</h2><h3 id=\"1-1、简单介绍\"><a href=\"#1-1、简单介绍\" class=\"headerlink\" title=\"1.1、简单介绍\"></a>1.1、简单介绍</h3><p>&emsp;&emsp;主要就是达到在各个引入的组件之间来回的动态切换，通过改变绑定的 is 属性。在实际的应用场景中，为了保证复用性和可维护性，采用vue内置的component组件来实现这一点。写法如下：</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"currentComponent\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span></code></pre>\n<p>&emsp;&emsp;通过改变绑定的currentCompntent的值实现引用组件的切换。</p>\n\n<p>&emsp;&emsp;另外一个场景就是，当在这些组件之间切换的时候，你有时会想保持这些组件的状态，以避免反复重新渲染导致的性能问题，写法如下：</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"currentComponent\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span></code></pre>\n<h3 id=\"1-2、用例介绍\"><a href=\"#1-2、用例介绍\" class=\"headerlink\" title=\"1.2、用例介绍\"></a>1.2、用例介绍</h3><p>&emsp;&emsp;这里搭配了插槽使用，插槽会在后续章节单独说，这里只需要看compontent组件怎么用的就行。稍作解释一下，这里的CommonForm是一个自定义的表单组件，设置了插槽，这里调用插槽，并且通过动态组件的is属性绑定了slotProps.slotName（作用域插槽，暂时不用理解）的值。这个值的选项有五个分别是，caseOne、caseTwo、caseThree、caseFour、caseFive（分别对应了五个引入的组件），slotProps.slotName是哪一个值就渲染对应的组件，这样就可以实现，通过改变is属性的值来动态的决定要渲染什么组件。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>CommonForm<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span>slot<span class=\"token operator\">:</span>caseOne<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps.slotName\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span>slot<span class=\"token operator\">:</span>caseTwo<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps.slotName\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span>slot<span class=\"token operator\">:</span>caseThree<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps.slotName\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span>slot<span class=\"token operator\">:</span>caseFour<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps.slotName\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span>slot<span class=\"token operator\">:</span>caseFive<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps.slotName\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>CommonForm<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">CommonForm</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Common/CommonForm.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">caseOne</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Common/caseOne.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">caseTwo</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Common/caseTwo.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">caseThree</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Common/caseThree.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">caseFour</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Common/caseFour.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">caseFive</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Common/caseFive.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>","excerpt":"","more":"<h1 id=\"三、工作知识难点摘要之动态组件\"><a href=\"#三、工作知识难点摘要之动态组件\" class=\"headerlink\" title=\"三、工作知识难点摘要之动态组件\"></a>三、工作知识难点摘要之动态组件</h1><h2 id=\"1、component动态组件的使用\"><a href=\"#1、component动态组件的使用\" class=\"headerlink\" title=\"1、component动态组件的使用\"></a>1、component动态组件的使用</h2><h3 id=\"1-1、简单介绍\"><a href=\"#1-1、简单介绍\" class=\"headerlink\" title=\"1.1、简单介绍\"></a>1.1、简单介绍</h3><p>&emsp;&emsp;主要就是达到在各个引入的组件之间来回的动态切换，通过改变绑定的 is 属性。在实际的应用场景中，为了保证复用性和可维护性，采用vue内置的component组件来实现这一点。写法如下：</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"currentComponent\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span></code></pre>\n<p>&emsp;&emsp;通过改变绑定的currentCompntent的值实现引用组件的切换。</p>\n\n<p>&emsp;&emsp;另外一个场景就是，当在这些组件之间切换的时候，你有时会想保持这些组件的状态，以避免反复重新渲染导致的性能问题，写法如下：</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"currentComponent\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">></span></code></pre>\n<h3 id=\"1-2、用例介绍\"><a href=\"#1-2、用例介绍\" class=\"headerlink\" title=\"1.2、用例介绍\"></a>1.2、用例介绍</h3><p>&emsp;&emsp;这里搭配了插槽使用，插槽会在后续章节单独说，这里只需要看compontent组件怎么用的就行。稍作解释一下，这里的CommonForm是一个自定义的表单组件，设置了插槽，这里调用插槽，并且通过动态组件的is属性绑定了slotProps.slotName（作用域插槽，暂时不用理解）的值。这个值的选项有五个分别是，caseOne、caseTwo、caseThree、caseFour、caseFive（分别对应了五个引入的组件），slotProps.slotName是哪一个值就渲染对应的组件，这样就可以实现，通过改变is属性的值来动态的决定要渲染什么组件。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>CommonForm<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span>slot<span class=\"token operator\">:</span>caseOne<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps.slotName\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span>slot<span class=\"token operator\">:</span>caseTwo<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps.slotName\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span>slot<span class=\"token operator\">:</span>caseThree<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps.slotName\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span>slot<span class=\"token operator\">:</span>caseFour<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps.slotName\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span>slot<span class=\"token operator\">:</span>caseFive<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps.slotName\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>component<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>CommonForm<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">CommonForm</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Common/CommonForm.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">caseOne</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Common/caseOne.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">caseTwo</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Common/caseTwo.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">caseThree</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Common/caseThree.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">caseFour</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Common/caseFour.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">caseFive</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Common/caseFive.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>"},{"title":"五、provide与inject","comments":1,"_content":"\n# 五、工作知识难点摘要之provide与inject跨组件通信\n## 1、provide与inject\n### 1.1、温馨提示\n<p>&emsp;&emsp;<span style=\"color: red\">在说provide与inject之前需要先强调一下，在实际工作中尽量慎用改方法做组件通信。provide/inject和Vuex是有区别的，Vuex 中的全局状态的每次修改是可以追踪回溯的，而 provide/inject 中变量的修改是无法控制的，换句话说，你不知道是哪个组件修改了这个全局状态。provide/inject 破坏单向数据流原则。如果有多个后代组件同时依赖于一个祖先组件提供的状态，那么只要有一个组件修改了该状态，那么所有组件都会受到影响。这一方面增加了耦合度，另一方面，使得数据变化不可控。如果在多人协作开发中，这将成为一个噩梦。</span></p>\n\n### 1.2、简单介绍\n<p>&emsp;&emsp;这对选项是一起使用的。以允许一个祖先组件向其所有子孙后代注入一个依赖，不论组件层次有多深，并在起上下游关系成立的时间里始终生效。通俗的说就是：组件的引入层次过多，我们的子孙组件想要获取祖先组件得资源，那么怎么办呢，总不能一直取父级往上吧，而且这样代码结构容易混乱。这个就是这对选项要干的事情，允许跨组件通信，但是要强调的一点是，provide只能写在上级组件,inject只能写在下级组件哦。。。</p>\n\n<p>&emsp;&emsp;做一个通俗的解释：provide 可以在祖先组件中指定我们想要提供给后代组件的数据或方法，而在任何后代组件中，我们都可以使用 inject 来接收 provide 提供的数据或方法。看下面这个简单的例子：爷爷组件通过Provide传值给孙子，直接跨过父亲组件，注意改方法有严格的上下层级关系，例如该方法是不可用于兄弟间组件通信的。</p>\n\n```javascript\n//爷爷组件Grandfather.vue\n<template>\n  <div>\n    <div>我是爷爷组件，我引入了父亲组件哦。。</div>\n    <Father></Father>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, Provide } from 'vue-property-decorator';\n@Component({\n  components: {\n    Father: () => import('@/pages/Father.vue')\n  }\n})\nexport default class TestCase extends Vue {\n  tempArr:Array<any> = ['迪迦', '捷德', '赛罗', '贝利亚']\n  @Provide('getTempArr')\n  public getTempArr() {\n    return this.tempArr;\n  }\n  mounted () {\n\n  }\n}\n<script>\n\n//父亲组件Father.vue\n<template>\n  <div>\n    <div>我是父亲组件，我引入了孙子组件哦，可怜的我只是过度一下。。</div>\n    <Son></Son>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component,} from 'vue-property-decorator';\n@Component({\n  components: {\n    Son: () => import('@/pages/Son.vue')\n  }\n})\nexport default class TestCase extends Vue {\n  mounted () {\n\n  }\n}\n<script>\n\n//孙子组件Son.vue\n<template>\n  <div>\n    <div>我是孙子组件，看我接收数据</div>\n    <Button @click=\"getArr\">点击我调用爷爷那边传来的函数哦。。</Button>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, inject} from 'vue-property-decorator';\n@Component({\n  components: {\n    \n  }\n})\nexport default class TestCase extends Vue {\n  sonTempArr:Array<any> = [];\n  @Inject()\n  getTempArr: Function;\n  public getArr() {\n    this.sonTempArr = this.getTempArr();\n  }\n  mounted () {\n\n  }\n}\n<script>\n```\n\n### 1.3、一个好的demo\n<p>&emsp;&emsp;上面那个例子啊，是我自己在工作中看到的，所以写了个自己熟悉的，下面这个例子是在晚上看到的，特别适合理解，就搬过来，语言是vue3+ts哦。</p>\n\n### 1.3.1、情况一：一级组件传值给三级组件\n<p>&emsp;&emsp;注：貌似provide没有提供批量方法， 只能每个变量写一句。</p>\n\n```javascript\n//一级组件\n<template>\n  <div>\n    <son />\n  </div>\n</template>\n<script setup>\nimport son from \"./son.vue\";\nimport { provide } from \"vue\";\nprovide(\"abc\", \"123\");\n</script>\n\n//二级组件\n<template>\n  <div>\n    <grandson />\n  </div>\n</template>\n<script setup>\nimport grandson from \"./grandson.vue\";\n</script>\n\n//三级组件\n<template>\n  <div>我是孙子</div>\n</template>\n<script setup>\nimport { inject } from \"vue\";\nconst abc = inject(\"abc\");\nconsole.log(abc);\n</script>\n```\n\n### 1.3.2、情况二：一级组件修改数据，孙子组件监听变更\n<p>&emsp;&emsp;注：provide的变量必须是响应式变量，孙子组件监听的变量也必须是响应式变量。</p>\n\n```javascript\n//一级组件\n<template>\n  <div>\n    <son />\n    <button @click=\"abc = '456'\">{{ abc }}</button>\n  </div>\n</template>\n<script setup>\nimport son from \"./son.vue\";\nimport { provide } from \"vue\";\nref: abc = \"123\";\nprovide(\"abc\", $abc);\n</script>\n\n//三级组件\n<template>\n  <div>我是孙子 - {{abc}}</div>\n</template>\n<script setup>\nimport { inject, watch } from \"vue\";\nref: abc = inject(\"abc\");\nwatch($abc, () => {\n  console.log(abc + '变了');\n});\n</script>\n```\n\n### 1.3.3、情况三：孙子组件修改数据，一级组件监听变更\n<p>&emsp;&emsp;注：一级组件除了提供数据，还要提供一个修改数据的方法，孙子组件要接收并使用这个方法，这样修改的就是一级组件的数据，修改之后又会影响孙子组件的数据。</p>\n\n```javascript\n//一级组件\n<template>\n  <div>\n    <son />\n    <button @click=\"abc = '456'\">{{ abc }}</button>\n  </div>\n</template>\n<script setup>\nimport son from \"./son.vue\";\nimport { provide } from \"vue\";\nref: abc = \"123\";\nfunction updateAbc(val) {\n  abc = val;\n}\nprovide(\"abc\", $abc);\nprovide(\"updateAbc\", updateAbc);\n</script>\n\n//三级组件\n<template>\n  <div @click=\"updateAbc('789')\">我是孙子 - {{abc}}</div>\n</template>\n<script setup>\nimport { inject, watch } from \"vue\";\nref: abc = inject(\"abc\");\nconst updateAbc = inject('updateAbc');\nwatch($abc, () => {\n  console.log(abc + '变了');\n});\n</script>\n```\n### 1.3.4、情况四：禁止孙子组件修改一级组件的数据\n<p>&emsp;&emsp;注：禁止的话，一级组件传递的变量必须是只读的，可以用readonly实现，也可以是shallowRef实现。这样孙子组件修改数据的话，一级组件不会有反应。</p>\n\n```javascript\n//一级组件\n<template>\n  <div>\n    <son />\n    <button @click=\"abc = '456'\">{{ abc }}</button>\n  </div>\n</template>\n<script setup>\nimport son from \"./son.vue\";\nimport { shallowRef, provide } from \"vue\";\nlet abc = shallowRef(\"123\");\nfunction updateAbc(val) {\n  abc = val;\n}\nprovide(\"abc\", abc);\nprovide(\"updateAbc\", updateAbc);\n</script>\n```\n\n","source":"_posts/工作知识总结/工作知识难点摘要系列-5、provide与inject传值.md","raw":"---\ntitle: 五、provide与inject\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 五、工作知识难点摘要之provide与inject跨组件通信\n## 1、provide与inject\n### 1.1、温馨提示\n<p>&emsp;&emsp;<span style=\"color: red\">在说provide与inject之前需要先强调一下，在实际工作中尽量慎用改方法做组件通信。provide/inject和Vuex是有区别的，Vuex 中的全局状态的每次修改是可以追踪回溯的，而 provide/inject 中变量的修改是无法控制的，换句话说，你不知道是哪个组件修改了这个全局状态。provide/inject 破坏单向数据流原则。如果有多个后代组件同时依赖于一个祖先组件提供的状态，那么只要有一个组件修改了该状态，那么所有组件都会受到影响。这一方面增加了耦合度，另一方面，使得数据变化不可控。如果在多人协作开发中，这将成为一个噩梦。</span></p>\n\n### 1.2、简单介绍\n<p>&emsp;&emsp;这对选项是一起使用的。以允许一个祖先组件向其所有子孙后代注入一个依赖，不论组件层次有多深，并在起上下游关系成立的时间里始终生效。通俗的说就是：组件的引入层次过多，我们的子孙组件想要获取祖先组件得资源，那么怎么办呢，总不能一直取父级往上吧，而且这样代码结构容易混乱。这个就是这对选项要干的事情，允许跨组件通信，但是要强调的一点是，provide只能写在上级组件,inject只能写在下级组件哦。。。</p>\n\n<p>&emsp;&emsp;做一个通俗的解释：provide 可以在祖先组件中指定我们想要提供给后代组件的数据或方法，而在任何后代组件中，我们都可以使用 inject 来接收 provide 提供的数据或方法。看下面这个简单的例子：爷爷组件通过Provide传值给孙子，直接跨过父亲组件，注意改方法有严格的上下层级关系，例如该方法是不可用于兄弟间组件通信的。</p>\n\n```javascript\n//爷爷组件Grandfather.vue\n<template>\n  <div>\n    <div>我是爷爷组件，我引入了父亲组件哦。。</div>\n    <Father></Father>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, Provide } from 'vue-property-decorator';\n@Component({\n  components: {\n    Father: () => import('@/pages/Father.vue')\n  }\n})\nexport default class TestCase extends Vue {\n  tempArr:Array<any> = ['迪迦', '捷德', '赛罗', '贝利亚']\n  @Provide('getTempArr')\n  public getTempArr() {\n    return this.tempArr;\n  }\n  mounted () {\n\n  }\n}\n<script>\n\n//父亲组件Father.vue\n<template>\n  <div>\n    <div>我是父亲组件，我引入了孙子组件哦，可怜的我只是过度一下。。</div>\n    <Son></Son>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component,} from 'vue-property-decorator';\n@Component({\n  components: {\n    Son: () => import('@/pages/Son.vue')\n  }\n})\nexport default class TestCase extends Vue {\n  mounted () {\n\n  }\n}\n<script>\n\n//孙子组件Son.vue\n<template>\n  <div>\n    <div>我是孙子组件，看我接收数据</div>\n    <Button @click=\"getArr\">点击我调用爷爷那边传来的函数哦。。</Button>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, inject} from 'vue-property-decorator';\n@Component({\n  components: {\n    \n  }\n})\nexport default class TestCase extends Vue {\n  sonTempArr:Array<any> = [];\n  @Inject()\n  getTempArr: Function;\n  public getArr() {\n    this.sonTempArr = this.getTempArr();\n  }\n  mounted () {\n\n  }\n}\n<script>\n```\n\n### 1.3、一个好的demo\n<p>&emsp;&emsp;上面那个例子啊，是我自己在工作中看到的，所以写了个自己熟悉的，下面这个例子是在晚上看到的，特别适合理解，就搬过来，语言是vue3+ts哦。</p>\n\n### 1.3.1、情况一：一级组件传值给三级组件\n<p>&emsp;&emsp;注：貌似provide没有提供批量方法， 只能每个变量写一句。</p>\n\n```javascript\n//一级组件\n<template>\n  <div>\n    <son />\n  </div>\n</template>\n<script setup>\nimport son from \"./son.vue\";\nimport { provide } from \"vue\";\nprovide(\"abc\", \"123\");\n</script>\n\n//二级组件\n<template>\n  <div>\n    <grandson />\n  </div>\n</template>\n<script setup>\nimport grandson from \"./grandson.vue\";\n</script>\n\n//三级组件\n<template>\n  <div>我是孙子</div>\n</template>\n<script setup>\nimport { inject } from \"vue\";\nconst abc = inject(\"abc\");\nconsole.log(abc);\n</script>\n```\n\n### 1.3.2、情况二：一级组件修改数据，孙子组件监听变更\n<p>&emsp;&emsp;注：provide的变量必须是响应式变量，孙子组件监听的变量也必须是响应式变量。</p>\n\n```javascript\n//一级组件\n<template>\n  <div>\n    <son />\n    <button @click=\"abc = '456'\">{{ abc }}</button>\n  </div>\n</template>\n<script setup>\nimport son from \"./son.vue\";\nimport { provide } from \"vue\";\nref: abc = \"123\";\nprovide(\"abc\", $abc);\n</script>\n\n//三级组件\n<template>\n  <div>我是孙子 - {{abc}}</div>\n</template>\n<script setup>\nimport { inject, watch } from \"vue\";\nref: abc = inject(\"abc\");\nwatch($abc, () => {\n  console.log(abc + '变了');\n});\n</script>\n```\n\n### 1.3.3、情况三：孙子组件修改数据，一级组件监听变更\n<p>&emsp;&emsp;注：一级组件除了提供数据，还要提供一个修改数据的方法，孙子组件要接收并使用这个方法，这样修改的就是一级组件的数据，修改之后又会影响孙子组件的数据。</p>\n\n```javascript\n//一级组件\n<template>\n  <div>\n    <son />\n    <button @click=\"abc = '456'\">{{ abc }}</button>\n  </div>\n</template>\n<script setup>\nimport son from \"./son.vue\";\nimport { provide } from \"vue\";\nref: abc = \"123\";\nfunction updateAbc(val) {\n  abc = val;\n}\nprovide(\"abc\", $abc);\nprovide(\"updateAbc\", updateAbc);\n</script>\n\n//三级组件\n<template>\n  <div @click=\"updateAbc('789')\">我是孙子 - {{abc}}</div>\n</template>\n<script setup>\nimport { inject, watch } from \"vue\";\nref: abc = inject(\"abc\");\nconst updateAbc = inject('updateAbc');\nwatch($abc, () => {\n  console.log(abc + '变了');\n});\n</script>\n```\n### 1.3.4、情况四：禁止孙子组件修改一级组件的数据\n<p>&emsp;&emsp;注：禁止的话，一级组件传递的变量必须是只读的，可以用readonly实现，也可以是shallowRef实现。这样孙子组件修改数据的话，一级组件不会有反应。</p>\n\n```javascript\n//一级组件\n<template>\n  <div>\n    <son />\n    <button @click=\"abc = '456'\">{{ abc }}</button>\n  </div>\n</template>\n<script setup>\nimport son from \"./son.vue\";\nimport { shallowRef, provide } from \"vue\";\nlet abc = shallowRef(\"123\");\nfunction updateAbc(val) {\n  abc = val;\n}\nprovide(\"abc\", abc);\nprovide(\"updateAbc\", updateAbc);\n</script>\n```\n\n","slug":"工作知识总结/工作知识难点摘要系列-5、provide与inject传值","published":1,"date":"2024-11-05T14:59:24.495Z","updated":"2022-11-26T18:03:42.075Z","layout":"post","photos":[],"_id":"cm42hwwu20013ssnn7ve31zuo","content":"<h1 id=\"五、工作知识难点摘要之provide与inject跨组件通信\"><a href=\"#五、工作知识难点摘要之provide与inject跨组件通信\" class=\"headerlink\" title=\"五、工作知识难点摘要之provide与inject跨组件通信\"></a>五、工作知识难点摘要之provide与inject跨组件通信</h1><h2 id=\"1、provide与inject\"><a href=\"#1、provide与inject\" class=\"headerlink\" title=\"1、provide与inject\"></a>1、provide与inject</h2><h3 id=\"1-1、温馨提示\"><a href=\"#1-1、温馨提示\" class=\"headerlink\" title=\"1.1、温馨提示\"></a>1.1、温馨提示</h3><p>&emsp;&emsp;<span style=\"color: red\">在说provide与inject之前需要先强调一下，在实际工作中尽量慎用改方法做组件通信。provide/inject和Vuex是有区别的，Vuex 中的全局状态的每次修改是可以追踪回溯的，而 provide/inject 中变量的修改是无法控制的，换句话说，你不知道是哪个组件修改了这个全局状态。provide/inject 破坏单向数据流原则。如果有多个后代组件同时依赖于一个祖先组件提供的状态，那么只要有一个组件修改了该状态，那么所有组件都会受到影响。这一方面增加了耦合度，另一方面，使得数据变化不可控。如果在多人协作开发中，这将成为一个噩梦。</span></p>\n\n<h3 id=\"1-2、简单介绍\"><a href=\"#1-2、简单介绍\" class=\"headerlink\" title=\"1.2、简单介绍\"></a>1.2、简单介绍</h3><p>&emsp;&emsp;这对选项是一起使用的。以允许一个祖先组件向其所有子孙后代注入一个依赖，不论组件层次有多深，并在起上下游关系成立的时间里始终生效。通俗的说就是：组件的引入层次过多，我们的子孙组件想要获取祖先组件得资源，那么怎么办呢，总不能一直取父级往上吧，而且这样代码结构容易混乱。这个就是这对选项要干的事情，允许跨组件通信，但是要强调的一点是，provide只能写在上级组件,inject只能写在下级组件哦。。。</p>\n\n<p>&emsp;&emsp;做一个通俗的解释：provide 可以在祖先组件中指定我们想要提供给后代组件的数据或方法，而在任何后代组件中，我们都可以使用 inject 来接收 provide 提供的数据或方法。看下面这个简单的例子：爷爷组件通过Provide传值给孙子，直接跨过父亲组件，注意改方法有严格的上下层级关系，例如该方法是不可用于兄弟间组件通信的。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//爷爷组件Grandfather.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是爷爷组件，我引入了父亲组件哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Father<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Father<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Provide <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">Father</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Father.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">tempArr</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'捷德'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'赛罗'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'贝利亚'</span><span class=\"token punctuation\">]</span>\n  @<span class=\"token function\">Provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getTempArr'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getTempArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tempArr<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//父亲组件Father.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是父亲组件，我引入了孙子组件哦，可怜的我只是过度一下。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Son<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Son<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">Son</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Son.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//孙子组件Son.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是孙子组件，看我接收数据<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Button @click<span class=\"token operator\">=</span><span class=\"token string\">\"getArr\"</span><span class=\"token operator\">></span>点击我调用爷爷那边传来的函数哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> inject<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    \n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">sonTempArr</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  @<span class=\"token function\">Inject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">getTempArr</span><span class=\"token operator\">:</span> Function<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sonTempArr <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTempArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-3、一个好的demo\"><a href=\"#1-3、一个好的demo\" class=\"headerlink\" title=\"1.3、一个好的demo\"></a>1.3、一个好的demo</h3><p>&emsp;&emsp;上面那个例子啊，是我自己在工作中看到的，所以写了个自己熟悉的，下面这个例子是在晚上看到的，特别适合理解，就搬过来，语言是vue3+ts哦。</p>\n\n<h3 id=\"1-3-1、情况一：一级组件传值给三级组件\"><a href=\"#1-3-1、情况一：一级组件传值给三级组件\" class=\"headerlink\" title=\"1.3.1、情况一：一级组件传值给三级组件\"></a>1.3.1、情况一：一级组件传值给三级组件</h3><p>&emsp;&emsp;注：貌似provide没有提供批量方法， 只能每个变量写一句。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//一级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>son <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> son <span class=\"token keyword\">from</span> <span class=\"token string\">\"./son.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> provide <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//二级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>grandson <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> grandson <span class=\"token keyword\">from</span> <span class=\"token string\">\"./grandson.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//三级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是孙子<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> inject <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> abc <span class=\"token operator\">=</span> <span class=\"token function\">inject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>abc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-3-2、情况二：一级组件修改数据，孙子组件监听变更\"><a href=\"#1-3-2、情况二：一级组件修改数据，孙子组件监听变更\" class=\"headerlink\" title=\"1.3.2、情况二：一级组件修改数据，孙子组件监听变更\"></a>1.3.2、情况二：一级组件修改数据，孙子组件监听变更</h3><p>&emsp;&emsp;注：provide的变量必须是响应式变量，孙子组件监听的变量也必须是响应式变量。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//一级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>son <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"abc = '456'\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> abc <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> son <span class=\"token keyword\">from</span> <span class=\"token string\">\"./son.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> provide <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token literal-property property\">ref</span><span class=\"token operator\">:</span> abc <span class=\"token operator\">=</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> $abc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//三级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是孙子 <span class=\"token operator\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>abc<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> inject<span class=\"token punctuation\">,</span> watch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token literal-property property\">ref</span><span class=\"token operator\">:</span> abc <span class=\"token operator\">=</span> <span class=\"token function\">inject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>$abc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>abc <span class=\"token operator\">+</span> <span class=\"token string\">'变了'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-3-3、情况三：孙子组件修改数据，一级组件监听变更\"><a href=\"#1-3-3、情况三：孙子组件修改数据，一级组件监听变更\" class=\"headerlink\" title=\"1.3.3、情况三：孙子组件修改数据，一级组件监听变更\"></a>1.3.3、情况三：孙子组件修改数据，一级组件监听变更</h3><p>&emsp;&emsp;注：一级组件除了提供数据，还要提供一个修改数据的方法，孙子组件要接收并使用这个方法，这样修改的就是一级组件的数据，修改之后又会影响孙子组件的数据。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//一级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>son <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"abc = '456'\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> abc <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> son <span class=\"token keyword\">from</span> <span class=\"token string\">\"./son.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> provide <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token literal-property property\">ref</span><span class=\"token operator\">:</span> abc <span class=\"token operator\">=</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateAbc</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  abc <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> $abc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateAbc\"</span><span class=\"token punctuation\">,</span> updateAbc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//三级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div @click<span class=\"token operator\">=</span><span class=\"token string\">\"updateAbc('789')\"</span><span class=\"token operator\">></span>我是孙子 <span class=\"token operator\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>abc<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> inject<span class=\"token punctuation\">,</span> watch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token literal-property property\">ref</span><span class=\"token operator\">:</span> abc <span class=\"token operator\">=</span> <span class=\"token function\">inject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> updateAbc <span class=\"token operator\">=</span> <span class=\"token function\">inject</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateAbc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>$abc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>abc <span class=\"token operator\">+</span> <span class=\"token string\">'变了'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n<h3 id=\"1-3-4、情况四：禁止孙子组件修改一级组件的数据\"><a href=\"#1-3-4、情况四：禁止孙子组件修改一级组件的数据\" class=\"headerlink\" title=\"1.3.4、情况四：禁止孙子组件修改一级组件的数据\"></a>1.3.4、情况四：禁止孙子组件修改一级组件的数据</h3><p>&emsp;&emsp;注：禁止的话，一级组件传递的变量必须是只读的，可以用readonly实现，也可以是shallowRef实现。这样孙子组件修改数据的话，一级组件不会有反应。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//一级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>son <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"abc = '456'\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> abc <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> son <span class=\"token keyword\">from</span> <span class=\"token string\">\"./son.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> shallowRef<span class=\"token punctuation\">,</span> provide <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> abc <span class=\"token operator\">=</span> <span class=\"token function\">shallowRef</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateAbc</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  abc <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> abc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateAbc\"</span><span class=\"token punctuation\">,</span> updateAbc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n","excerpt":"","more":"<h1 id=\"五、工作知识难点摘要之provide与inject跨组件通信\"><a href=\"#五、工作知识难点摘要之provide与inject跨组件通信\" class=\"headerlink\" title=\"五、工作知识难点摘要之provide与inject跨组件通信\"></a>五、工作知识难点摘要之provide与inject跨组件通信</h1><h2 id=\"1、provide与inject\"><a href=\"#1、provide与inject\" class=\"headerlink\" title=\"1、provide与inject\"></a>1、provide与inject</h2><h3 id=\"1-1、温馨提示\"><a href=\"#1-1、温馨提示\" class=\"headerlink\" title=\"1.1、温馨提示\"></a>1.1、温馨提示</h3><p>&emsp;&emsp;<span style=\"color: red\">在说provide与inject之前需要先强调一下，在实际工作中尽量慎用改方法做组件通信。provide/inject和Vuex是有区别的，Vuex 中的全局状态的每次修改是可以追踪回溯的，而 provide/inject 中变量的修改是无法控制的，换句话说，你不知道是哪个组件修改了这个全局状态。provide/inject 破坏单向数据流原则。如果有多个后代组件同时依赖于一个祖先组件提供的状态，那么只要有一个组件修改了该状态，那么所有组件都会受到影响。这一方面增加了耦合度，另一方面，使得数据变化不可控。如果在多人协作开发中，这将成为一个噩梦。</span></p>\n\n<h3 id=\"1-2、简单介绍\"><a href=\"#1-2、简单介绍\" class=\"headerlink\" title=\"1.2、简单介绍\"></a>1.2、简单介绍</h3><p>&emsp;&emsp;这对选项是一起使用的。以允许一个祖先组件向其所有子孙后代注入一个依赖，不论组件层次有多深，并在起上下游关系成立的时间里始终生效。通俗的说就是：组件的引入层次过多，我们的子孙组件想要获取祖先组件得资源，那么怎么办呢，总不能一直取父级往上吧，而且这样代码结构容易混乱。这个就是这对选项要干的事情，允许跨组件通信，但是要强调的一点是，provide只能写在上级组件,inject只能写在下级组件哦。。。</p>\n\n<p>&emsp;&emsp;做一个通俗的解释：provide 可以在祖先组件中指定我们想要提供给后代组件的数据或方法，而在任何后代组件中，我们都可以使用 inject 来接收 provide 提供的数据或方法。看下面这个简单的例子：爷爷组件通过Provide传值给孙子，直接跨过父亲组件，注意改方法有严格的上下层级关系，例如该方法是不可用于兄弟间组件通信的。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//爷爷组件Grandfather.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是爷爷组件，我引入了父亲组件哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Father<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Father<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Provide <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">Father</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Father.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">tempArr</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'捷德'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'赛罗'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'贝利亚'</span><span class=\"token punctuation\">]</span>\n  @<span class=\"token function\">Provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getTempArr'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getTempArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tempArr<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//父亲组件Father.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是父亲组件，我引入了孙子组件哦，可怜的我只是过度一下。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Son<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Son<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">Son</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Son.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//孙子组件Son.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是孙子组件，看我接收数据<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Button @click<span class=\"token operator\">=</span><span class=\"token string\">\"getArr\"</span><span class=\"token operator\">></span>点击我调用爷爷那边传来的函数哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> inject<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    \n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">sonTempArr</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  @<span class=\"token function\">Inject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">getTempArr</span><span class=\"token operator\">:</span> Function<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sonTempArr <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTempArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-3、一个好的demo\"><a href=\"#1-3、一个好的demo\" class=\"headerlink\" title=\"1.3、一个好的demo\"></a>1.3、一个好的demo</h3><p>&emsp;&emsp;上面那个例子啊，是我自己在工作中看到的，所以写了个自己熟悉的，下面这个例子是在晚上看到的，特别适合理解，就搬过来，语言是vue3+ts哦。</p>\n\n<h3 id=\"1-3-1、情况一：一级组件传值给三级组件\"><a href=\"#1-3-1、情况一：一级组件传值给三级组件\" class=\"headerlink\" title=\"1.3.1、情况一：一级组件传值给三级组件\"></a>1.3.1、情况一：一级组件传值给三级组件</h3><p>&emsp;&emsp;注：貌似provide没有提供批量方法， 只能每个变量写一句。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//一级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>son <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> son <span class=\"token keyword\">from</span> <span class=\"token string\">\"./son.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> provide <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//二级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>grandson <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> grandson <span class=\"token keyword\">from</span> <span class=\"token string\">\"./grandson.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//三级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是孙子<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> inject <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> abc <span class=\"token operator\">=</span> <span class=\"token function\">inject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>abc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-3-2、情况二：一级组件修改数据，孙子组件监听变更\"><a href=\"#1-3-2、情况二：一级组件修改数据，孙子组件监听变更\" class=\"headerlink\" title=\"1.3.2、情况二：一级组件修改数据，孙子组件监听变更\"></a>1.3.2、情况二：一级组件修改数据，孙子组件监听变更</h3><p>&emsp;&emsp;注：provide的变量必须是响应式变量，孙子组件监听的变量也必须是响应式变量。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//一级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>son <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"abc = '456'\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> abc <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> son <span class=\"token keyword\">from</span> <span class=\"token string\">\"./son.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> provide <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token literal-property property\">ref</span><span class=\"token operator\">:</span> abc <span class=\"token operator\">=</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> $abc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//三级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是孙子 <span class=\"token operator\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>abc<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> inject<span class=\"token punctuation\">,</span> watch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token literal-property property\">ref</span><span class=\"token operator\">:</span> abc <span class=\"token operator\">=</span> <span class=\"token function\">inject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>$abc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>abc <span class=\"token operator\">+</span> <span class=\"token string\">'变了'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-3-3、情况三：孙子组件修改数据，一级组件监听变更\"><a href=\"#1-3-3、情况三：孙子组件修改数据，一级组件监听变更\" class=\"headerlink\" title=\"1.3.3、情况三：孙子组件修改数据，一级组件监听变更\"></a>1.3.3、情况三：孙子组件修改数据，一级组件监听变更</h3><p>&emsp;&emsp;注：一级组件除了提供数据，还要提供一个修改数据的方法，孙子组件要接收并使用这个方法，这样修改的就是一级组件的数据，修改之后又会影响孙子组件的数据。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//一级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>son <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"abc = '456'\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> abc <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> son <span class=\"token keyword\">from</span> <span class=\"token string\">\"./son.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> provide <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token literal-property property\">ref</span><span class=\"token operator\">:</span> abc <span class=\"token operator\">=</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateAbc</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  abc <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> $abc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateAbc\"</span><span class=\"token punctuation\">,</span> updateAbc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//三级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div @click<span class=\"token operator\">=</span><span class=\"token string\">\"updateAbc('789')\"</span><span class=\"token operator\">></span>我是孙子 <span class=\"token operator\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>abc<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> inject<span class=\"token punctuation\">,</span> watch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token literal-property property\">ref</span><span class=\"token operator\">:</span> abc <span class=\"token operator\">=</span> <span class=\"token function\">inject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> updateAbc <span class=\"token operator\">=</span> <span class=\"token function\">inject</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateAbc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>$abc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>abc <span class=\"token operator\">+</span> <span class=\"token string\">'变了'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n<h3 id=\"1-3-4、情况四：禁止孙子组件修改一级组件的数据\"><a href=\"#1-3-4、情况四：禁止孙子组件修改一级组件的数据\" class=\"headerlink\" title=\"1.3.4、情况四：禁止孙子组件修改一级组件的数据\"></a>1.3.4、情况四：禁止孙子组件修改一级组件的数据</h3><p>&emsp;&emsp;注：禁止的话，一级组件传递的变量必须是只读的，可以用readonly实现，也可以是shallowRef实现。这样孙子组件修改数据的话，一级组件不会有反应。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//一级组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>son <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"abc = '456'\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> abc <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> son <span class=\"token keyword\">from</span> <span class=\"token string\">\"./son.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> shallowRef<span class=\"token punctuation\">,</span> provide <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> abc <span class=\"token operator\">=</span> <span class=\"token function\">shallowRef</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateAbc</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  abc <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> abc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateAbc\"</span><span class=\"token punctuation\">,</span> updateAbc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n"},{"title":"七、iview中的select组件","comments":1,"_content":"\n# 一、工作知识难点摘要-iview组件之自定义select\n## 1、select组件\n### 1.1、什么是Upload组件\n\n<p>&emsp;&emsp;日常开局一句废话：iview的select组件使用模拟的增强下拉选择器来代替浏览器原生的选择器，选择器支持单选、多选、搜索。</p>\n\n<p>&emsp;&emsp;也没啥好说的，主要就是强调一点，先来看正常写法。</p>\n\n```javascript\n<template>\n  <Select v-model=\"tempOne\" style=\"width:100px\">\n    <Option v-for=\"item in ultramans\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\n  </Select>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  tempOne = '迪迦';\n  ultramans:Array<any> = [\n    {\n      value:'迪迦',\n      label:'迪迦'\n    },{\n      value:'赛罗',\n      label:'赛罗'\n    },{\n      value:'雷欧',\n      label:'雷欧'\n    },{\n      value:'艾克斯',\n      label:'艾克斯'\n    },{\n      value:'艾克斯',\n      label:'艾克斯'\n    },\n  ]\n  mounted () {\n\n  }\n}\n<script>\n```\n\n<p>&emsp;&emsp;简单的一批，都有点不想写了。就是说当我们往options里面塞dom元素的时候(有时候我们想自定义内部元素)，我这里包了一个span标签。要注意同时需要给options加上label，直接看怎么写的吧，对比一下就知道了，不加label的话，会有一些奇怪的错误，影响使用。</p>\n\n<p>&emsp;&emsp;加一句iview组件官方解释:对选项内容可以进行自定义。注意在Option中使用label属性，可以让选择器优先读取该属性的值以显示，否则选中时显示的内容会和自定义的一样，这往往不是我们想要的。</p>\n\n```javascript\n<template>\n  <Select v-model=\"tempOne\" style=\"width:100px\">\n    <Option v-for=\"item in ultramans\" :value=\"item.value\" :label=\"item.label\" :key=\"item.value\">\n      <span>{{item.label}}</span>\n    </Option>\n  </Select>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  tempOne = '迪迦';\n  ultramans:Array<any> = [\n    {\n      value:'迪迦',\n      label:'迪迦'\n    },{\n      value:'赛罗',\n      label:'赛罗'\n    },{\n      value:'雷欧',\n      label:'雷欧'\n    },{\n      value:'艾克斯',\n      label:'艾克斯'\n    },{\n      value:'艾克斯',\n      label:'艾克斯'\n    },\n  ]\n  mounted () {\n\n  }\n}\n<script>\n```","source":"_posts/工作知识总结/工作知识难点摘要系列-7、iview组件之自定义select.md","raw":"---\ntitle: 七、iview中的select组件\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 一、工作知识难点摘要-iview组件之自定义select\n## 1、select组件\n### 1.1、什么是Upload组件\n\n<p>&emsp;&emsp;日常开局一句废话：iview的select组件使用模拟的增强下拉选择器来代替浏览器原生的选择器，选择器支持单选、多选、搜索。</p>\n\n<p>&emsp;&emsp;也没啥好说的，主要就是强调一点，先来看正常写法。</p>\n\n```javascript\n<template>\n  <Select v-model=\"tempOne\" style=\"width:100px\">\n    <Option v-for=\"item in ultramans\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\n  </Select>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  tempOne = '迪迦';\n  ultramans:Array<any> = [\n    {\n      value:'迪迦',\n      label:'迪迦'\n    },{\n      value:'赛罗',\n      label:'赛罗'\n    },{\n      value:'雷欧',\n      label:'雷欧'\n    },{\n      value:'艾克斯',\n      label:'艾克斯'\n    },{\n      value:'艾克斯',\n      label:'艾克斯'\n    },\n  ]\n  mounted () {\n\n  }\n}\n<script>\n```\n\n<p>&emsp;&emsp;简单的一批，都有点不想写了。就是说当我们往options里面塞dom元素的时候(有时候我们想自定义内部元素)，我这里包了一个span标签。要注意同时需要给options加上label，直接看怎么写的吧，对比一下就知道了，不加label的话，会有一些奇怪的错误，影响使用。</p>\n\n<p>&emsp;&emsp;加一句iview组件官方解释:对选项内容可以进行自定义。注意在Option中使用label属性，可以让选择器优先读取该属性的值以显示，否则选中时显示的内容会和自定义的一样，这往往不是我们想要的。</p>\n\n```javascript\n<template>\n  <Select v-model=\"tempOne\" style=\"width:100px\">\n    <Option v-for=\"item in ultramans\" :value=\"item.value\" :label=\"item.label\" :key=\"item.value\">\n      <span>{{item.label}}</span>\n    </Option>\n  </Select>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  tempOne = '迪迦';\n  ultramans:Array<any> = [\n    {\n      value:'迪迦',\n      label:'迪迦'\n    },{\n      value:'赛罗',\n      label:'赛罗'\n    },{\n      value:'雷欧',\n      label:'雷欧'\n    },{\n      value:'艾克斯',\n      label:'艾克斯'\n    },{\n      value:'艾克斯',\n      label:'艾克斯'\n    },\n  ]\n  mounted () {\n\n  }\n}\n<script>\n```","slug":"工作知识总结/工作知识难点摘要系列-7、iview组件之自定义select","published":1,"date":"2024-11-05T14:59:24.500Z","updated":"2022-12-15T15:31:53.679Z","layout":"post","photos":[],"_id":"cm42hwwu20015ssnn2tr61x7d","content":"<h1 id=\"一、工作知识难点摘要-iview组件之自定义select\"><a href=\"#一、工作知识难点摘要-iview组件之自定义select\" class=\"headerlink\" title=\"一、工作知识难点摘要-iview组件之自定义select\"></a>一、工作知识难点摘要-iview组件之自定义select</h1><h2 id=\"1、select组件\"><a href=\"#1、select组件\" class=\"headerlink\" title=\"1、select组件\"></a>1、select组件</h2><h3 id=\"1-1、什么是Upload组件\"><a href=\"#1-1、什么是Upload组件\" class=\"headerlink\" title=\"1.1、什么是Upload组件\"></a>1.1、什么是Upload组件</h3><p>&emsp;&emsp;日常开局一句废话：iview的select组件使用模拟的增强下拉选择器来代替浏览器原生的选择器，选择器支持单选、多选、搜索。</p>\n\n<p>&emsp;&emsp;也没啥好说的，主要就是强调一点，先来看正常写法。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Select v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"tempOne\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"width:100px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Option v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in ultramans\"</span> <span class=\"token operator\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"item.value\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item.value\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> item<span class=\"token punctuation\">.</span>label <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Option<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Select<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  tempOne <span class=\"token operator\">=</span> <span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">ultramans</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'迪迦'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'赛罗'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'赛罗'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'雷欧'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'雷欧'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<p>&emsp;&emsp;简单的一批，都有点不想写了。就是说当我们往options里面塞dom元素的时候(有时候我们想自定义内部元素)，我这里包了一个span标签。要注意同时需要给options加上label，直接看怎么写的吧，对比一下就知道了，不加label的话，会有一些奇怪的错误，影响使用。</p>\n\n<p>&emsp;&emsp;加一句iview组件官方解释:对选项内容可以进行自定义。注意在Option中使用label属性，可以让选择器优先读取该属性的值以显示，否则选中时显示的内容会和自定义的一样，这往往不是我们想要的。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Select v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"tempOne\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"width:100px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Option v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in ultramans\"</span> <span class=\"token operator\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"item.value\"</span> <span class=\"token operator\">:</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"item.label\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item.value\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>item<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Option<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Select<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  tempOne <span class=\"token operator\">=</span> <span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">ultramans</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'迪迦'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'赛罗'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'赛罗'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'雷欧'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'雷欧'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>","excerpt":"","more":"<h1 id=\"一、工作知识难点摘要-iview组件之自定义select\"><a href=\"#一、工作知识难点摘要-iview组件之自定义select\" class=\"headerlink\" title=\"一、工作知识难点摘要-iview组件之自定义select\"></a>一、工作知识难点摘要-iview组件之自定义select</h1><h2 id=\"1、select组件\"><a href=\"#1、select组件\" class=\"headerlink\" title=\"1、select组件\"></a>1、select组件</h2><h3 id=\"1-1、什么是Upload组件\"><a href=\"#1-1、什么是Upload组件\" class=\"headerlink\" title=\"1.1、什么是Upload组件\"></a>1.1、什么是Upload组件</h3><p>&emsp;&emsp;日常开局一句废话：iview的select组件使用模拟的增强下拉选择器来代替浏览器原生的选择器，选择器支持单选、多选、搜索。</p>\n\n<p>&emsp;&emsp;也没啥好说的，主要就是强调一点，先来看正常写法。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Select v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"tempOne\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"width:100px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Option v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in ultramans\"</span> <span class=\"token operator\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"item.value\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item.value\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> item<span class=\"token punctuation\">.</span>label <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Option<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Select<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  tempOne <span class=\"token operator\">=</span> <span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">ultramans</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'迪迦'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'赛罗'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'赛罗'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'雷欧'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'雷欧'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<p>&emsp;&emsp;简单的一批，都有点不想写了。就是说当我们往options里面塞dom元素的时候(有时候我们想自定义内部元素)，我这里包了一个span标签。要注意同时需要给options加上label，直接看怎么写的吧，对比一下就知道了，不加label的话，会有一些奇怪的错误，影响使用。</p>\n\n<p>&emsp;&emsp;加一句iview组件官方解释:对选项内容可以进行自定义。注意在Option中使用label属性，可以让选择器优先读取该属性的值以显示，否则选中时显示的内容会和自定义的一样，这往往不是我们想要的。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Select v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"tempOne\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"width:100px\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Option v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in ultramans\"</span> <span class=\"token operator\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"item.value\"</span> <span class=\"token operator\">:</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"item.label\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item.value\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>item<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Option<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Select<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  tempOne <span class=\"token operator\">=</span> <span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">ultramans</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'迪迦'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'赛罗'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'赛罗'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'雷欧'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'雷欧'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span><span class=\"token string\">'艾克斯'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>"},{"title":"四、作用域插槽","comments":1,"_content":"\n# 四、工作知识难点摘要之作用域插槽\n## 1、认识插槽\n### 1.1、简单介绍\n<p>&emsp;&emsp;插槽就是子组件中的提供给父组件使用的一个占位符，用\\<slot>\\</slot> 表示，父组件可以在这个占位符中填充任何模板代码，如 HTML、组件等，填充的内容会替换子组件的\\<slot>\\</slot>标签。简单理解就是子组件中留下个“坑”，父组件可以使用指定内容来补“坑”。插槽主要分为：匿名插槽、具名插槽、作用域插槽，实际情况中具名插槽会和作用域插槽结合使用。</p>\n\n### 1.2、匿名插槽\n<p>&emsp;&emsp;默认的插槽形式，很简单，看如下例子。子组件Son.vue中有一个插槽slot标签，这是有个父组件Father.vue引入子组件并使用，使用的时候可以在子组件标签内加新的HTML标签或者其他组件，而此时，加的内容就会替代掉子组件中的slot所占的位置。</p>\n\n```javascript\n//子组件Son.vue\n<template>\n  <div>\n    <div>我是子组件，在我下面是我携带的插槽,当别人调用我的时候，可以按照需求往里面填东西哦。。</div>\n    <slot></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  mounted () {\n\n  }\n}\n<script>\n\n//父组件Father.vue\n<template>\n  <div>\n    <div>我是父组件，我在下方调用了子组件哦。。</div>\n    <Son>\n      <span style=\"color:red\">我在子组件内部放了一个span标签，这个标签会置换slot标签哦。。</span>\n    </Son>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n    Son: () => import('@/pages/son.vue')\n  }\n})\nexport default class TestCase extends Vue {\n  mounted () {\n\n  }\n}\n<script>\n```\n\n### 1.2、具名插槽\n<p>&emsp;&emsp;正常人都能看出来，匿名插槽缺点很明显，当子组件有很多插槽时，父组件在调用子组件时，往子组件中加了很多内容，那么这些内容和插槽们如何一一对应呢。。所以就得有具名插槽出现，给个名字，然后按照名字一个萝卜一个坑喽。如下的例子，子组件Son.vue中有多个插槽，并且每一个插槽都给了对应的名字，父组件Father.vue在调用子组件的时候，插入的内容都会携带一个名字对应入坑的。</p>\n\n```javascript\n//子组件Son.vue\n<template>\n  <div>\n    <div>我是子组件，我带了好多有名字的插槽哦。。</div>\n    <slot name=\"contentOne\"></slot>\n    <slot name=\"contentTwo\"></slot>\n    <slot name=\"contentThree\"></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  mounted () {\n\n  }\n}\n<script>\n\n//父组件Father.vue\n//注意这里插槽也可以不用template模板包裹，但是模板包裹兼容性更好\n<template>\n  <div>\n    <div>我是父组件，我在下方调用了子组件哦。。</div>\n    <Son>\n      <template slot=\"contentOne\">\n        <span>我会置换掉子组件的one插槽哦。。</span>\n      </template>\n      <template slot=\"contentTwo\">\n        <span>我会置换掉子组件的Two插槽哦。。</span>\n      </template>\n      <template slot=\"contentThree\">\n        <span>我会置换掉子组件的Three插槽哦。。</span>\n      </template>\n    </Son>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n    Son: () => import('@/pages/son.vue')\n  }\n})\nexport default class TestCase extends Vue {\n  mounted () {\n\n  }\n}\n<script>\n```\n\n### 1.3、作用域插槽\n<p>&emsp;&emsp;为什么要有作用域插槽呢？是这么个情况，在实际开发过程中啊，我们在父组件里调用子组件的时候，往子组件的插槽放置内容时，是无法访问子组件的数据的，很多时候让插槽内容能够访问子组件中独有的数据是很有用的。如下例子，子组件中有独有的数据，奥特曼数组和怪兽数组，我在子组件里写插槽时把数据带上，这里把具名插槽和作用域插槽结合用，因为实际工作中都是一起使用的。子组件如下：</p>\n\n```javascript\n//子组件Son.vue\n<template>\n  <div>\n    <div>我是子组件，我带了有名字的插槽，并且这个插槽带着我独有的数据哦。。</div>\n    <slot :name=\"contentOne\" :tempArr1=\"tempArr1\" :tempArr2=\"tempArr2\"></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  tempArr1:Array<string> = ['捷德', '迪迦', '赛罗', '贝利亚']\n  tempArr2:Array<string> = ['哥尔赞', '梅尔巴', '基利埃洛的人', '加坦劫恶']\n  mounted () {\n\n  }\n}\n<script>\n```\n<p>&emsp;&emsp;父组件的写法很重要，写法如下 ( v-slot: 插槽名称 = \"一个字段\" )，注意这里的字段官方一般用slotProps,它是一个对象，对象里装了插槽携带的所有的属性，包括tempArr1和tempArr2。</p>\n\n```javascript\n//父组件Father.vue\n<template>\n  <div>\n    <div>我是父组件，我在下方调用了子组件哦。。</div>\n    <Son>\n      <template v-slot:contentOne=\"slotProps\">\n        <div>{{slotProps.tempArr1.jion(',')}}</div>\n        <div>{{slotProps.tempArr2.jion(',')}}</div>\n      </template>\n    </Son>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n    Son: () => import('@/pages/son.vue')\n  }\n})\nexport default class TestCase extends Vue {\n  mounted () {\n\n  }\n}\n<script>\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/工作知识总结/工作知识难点摘要系列-4、作用域插槽.md","raw":"---\ntitle: 四、作用域插槽\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 四、工作知识难点摘要之作用域插槽\n## 1、认识插槽\n### 1.1、简单介绍\n<p>&emsp;&emsp;插槽就是子组件中的提供给父组件使用的一个占位符，用\\<slot>\\</slot> 表示，父组件可以在这个占位符中填充任何模板代码，如 HTML、组件等，填充的内容会替换子组件的\\<slot>\\</slot>标签。简单理解就是子组件中留下个“坑”，父组件可以使用指定内容来补“坑”。插槽主要分为：匿名插槽、具名插槽、作用域插槽，实际情况中具名插槽会和作用域插槽结合使用。</p>\n\n### 1.2、匿名插槽\n<p>&emsp;&emsp;默认的插槽形式，很简单，看如下例子。子组件Son.vue中有一个插槽slot标签，这是有个父组件Father.vue引入子组件并使用，使用的时候可以在子组件标签内加新的HTML标签或者其他组件，而此时，加的内容就会替代掉子组件中的slot所占的位置。</p>\n\n```javascript\n//子组件Son.vue\n<template>\n  <div>\n    <div>我是子组件，在我下面是我携带的插槽,当别人调用我的时候，可以按照需求往里面填东西哦。。</div>\n    <slot></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  mounted () {\n\n  }\n}\n<script>\n\n//父组件Father.vue\n<template>\n  <div>\n    <div>我是父组件，我在下方调用了子组件哦。。</div>\n    <Son>\n      <span style=\"color:red\">我在子组件内部放了一个span标签，这个标签会置换slot标签哦。。</span>\n    </Son>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n    Son: () => import('@/pages/son.vue')\n  }\n})\nexport default class TestCase extends Vue {\n  mounted () {\n\n  }\n}\n<script>\n```\n\n### 1.2、具名插槽\n<p>&emsp;&emsp;正常人都能看出来，匿名插槽缺点很明显，当子组件有很多插槽时，父组件在调用子组件时，往子组件中加了很多内容，那么这些内容和插槽们如何一一对应呢。。所以就得有具名插槽出现，给个名字，然后按照名字一个萝卜一个坑喽。如下的例子，子组件Son.vue中有多个插槽，并且每一个插槽都给了对应的名字，父组件Father.vue在调用子组件的时候，插入的内容都会携带一个名字对应入坑的。</p>\n\n```javascript\n//子组件Son.vue\n<template>\n  <div>\n    <div>我是子组件，我带了好多有名字的插槽哦。。</div>\n    <slot name=\"contentOne\"></slot>\n    <slot name=\"contentTwo\"></slot>\n    <slot name=\"contentThree\"></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  mounted () {\n\n  }\n}\n<script>\n\n//父组件Father.vue\n//注意这里插槽也可以不用template模板包裹，但是模板包裹兼容性更好\n<template>\n  <div>\n    <div>我是父组件，我在下方调用了子组件哦。。</div>\n    <Son>\n      <template slot=\"contentOne\">\n        <span>我会置换掉子组件的one插槽哦。。</span>\n      </template>\n      <template slot=\"contentTwo\">\n        <span>我会置换掉子组件的Two插槽哦。。</span>\n      </template>\n      <template slot=\"contentThree\">\n        <span>我会置换掉子组件的Three插槽哦。。</span>\n      </template>\n    </Son>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n    Son: () => import('@/pages/son.vue')\n  }\n})\nexport default class TestCase extends Vue {\n  mounted () {\n\n  }\n}\n<script>\n```\n\n### 1.3、作用域插槽\n<p>&emsp;&emsp;为什么要有作用域插槽呢？是这么个情况，在实际开发过程中啊，我们在父组件里调用子组件的时候，往子组件的插槽放置内容时，是无法访问子组件的数据的，很多时候让插槽内容能够访问子组件中独有的数据是很有用的。如下例子，子组件中有独有的数据，奥特曼数组和怪兽数组，我在子组件里写插槽时把数据带上，这里把具名插槽和作用域插槽结合用，因为实际工作中都是一起使用的。子组件如下：</p>\n\n```javascript\n//子组件Son.vue\n<template>\n  <div>\n    <div>我是子组件，我带了有名字的插槽，并且这个插槽带着我独有的数据哦。。</div>\n    <slot :name=\"contentOne\" :tempArr1=\"tempArr1\" :tempArr2=\"tempArr2\"></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  tempArr1:Array<string> = ['捷德', '迪迦', '赛罗', '贝利亚']\n  tempArr2:Array<string> = ['哥尔赞', '梅尔巴', '基利埃洛的人', '加坦劫恶']\n  mounted () {\n\n  }\n}\n<script>\n```\n<p>&emsp;&emsp;父组件的写法很重要，写法如下 ( v-slot: 插槽名称 = \"一个字段\" )，注意这里的字段官方一般用slotProps,它是一个对象，对象里装了插槽携带的所有的属性，包括tempArr1和tempArr2。</p>\n\n```javascript\n//父组件Father.vue\n<template>\n  <div>\n    <div>我是父组件，我在下方调用了子组件哦。。</div>\n    <Son>\n      <template v-slot:contentOne=\"slotProps\">\n        <div>{{slotProps.tempArr1.jion(',')}}</div>\n        <div>{{slotProps.tempArr2.jion(',')}}</div>\n      </template>\n    </Son>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n    Son: () => import('@/pages/son.vue')\n  }\n})\nexport default class TestCase extends Vue {\n  mounted () {\n\n  }\n}\n<script>\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"工作知识总结/工作知识难点摘要系列-4、作用域插槽","published":1,"date":"2024-11-05T14:59:24.494Z","updated":"2022-11-26T18:03:38.318Z","layout":"post","photos":[],"_id":"cm42hwwu5001assnn8nri58li","content":"<h1 id=\"四、工作知识难点摘要之作用域插槽\"><a href=\"#四、工作知识难点摘要之作用域插槽\" class=\"headerlink\" title=\"四、工作知识难点摘要之作用域插槽\"></a>四、工作知识难点摘要之作用域插槽</h1><h2 id=\"1、认识插槽\"><a href=\"#1、认识插槽\" class=\"headerlink\" title=\"1、认识插槽\"></a>1、认识插槽</h2><h3 id=\"1-1、简单介绍\"><a href=\"#1-1、简单介绍\" class=\"headerlink\" title=\"1.1、简单介绍\"></a>1.1、简单介绍</h3><p>&emsp;&emsp;插槽就是子组件中的提供给父组件使用的一个占位符，用\\<slot>\\</slot> 表示，父组件可以在这个占位符中填充任何模板代码，如 HTML、组件等，填充的内容会替换子组件的\\<slot>\\</slot>标签。简单理解就是子组件中留下个“坑”，父组件可以使用指定内容来补“坑”。插槽主要分为：匿名插槽、具名插槽、作用域插槽，实际情况中具名插槽会和作用域插槽结合使用。</p>\n\n<h3 id=\"1-2、匿名插槽\"><a href=\"#1-2、匿名插槽\" class=\"headerlink\" title=\"1.2、匿名插槽\"></a>1.2、匿名插槽</h3><p>&emsp;&emsp;默认的插槽形式，很简单，看如下例子。子组件Son.vue中有一个插槽slot标签，这是有个父组件Father.vue引入子组件并使用，使用的时候可以在子组件标签内加新的HTML标签或者其他组件，而此时，加的内容就会替代掉子组件中的slot所占的位置。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//子组件Son.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是子组件，在我下面是我携带的插槽<span class=\"token punctuation\">,</span>当别人调用我的时候，可以按照需求往里面填东西哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>slot<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>slot<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//父组件Father.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是父组件，我在下方调用了子组件哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Son<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>span style<span class=\"token operator\">=</span><span class=\"token string\">\"color:red\"</span><span class=\"token operator\">></span>我在子组件内部放了一个span标签，这个标签会置换slot标签哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Son<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">Son</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/son.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-2、具名插槽\"><a href=\"#1-2、具名插槽\" class=\"headerlink\" title=\"1.2、具名插槽\"></a>1.2、具名插槽</h3><p>&emsp;&emsp;正常人都能看出来，匿名插槽缺点很明显，当子组件有很多插槽时，父组件在调用子组件时，往子组件中加了很多内容，那么这些内容和插槽们如何一一对应呢。。所以就得有具名插槽出现，给个名字，然后按照名字一个萝卜一个坑喽。如下的例子，子组件Son.vue中有多个插槽，并且每一个插槽都给了对应的名字，父组件Father.vue在调用子组件的时候，插入的内容都会携带一个名字对应入坑的。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//子组件Son.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是子组件，我带了好多有名字的插槽哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>slot name<span class=\"token operator\">=</span><span class=\"token string\">\"contentOne\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>slot<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>slot name<span class=\"token operator\">=</span><span class=\"token string\">\"contentTwo\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>slot<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>slot name<span class=\"token operator\">=</span><span class=\"token string\">\"contentThree\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>slot<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//父组件Father.vue</span>\n<span class=\"token comment\">//注意这里插槽也可以不用template模板包裹，但是模板包裹兼容性更好</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是父组件，我在下方调用了子组件哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Son<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template slot<span class=\"token operator\">=</span><span class=\"token string\">\"contentOne\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>我会置换掉子组件的one插槽哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template slot<span class=\"token operator\">=</span><span class=\"token string\">\"contentTwo\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>我会置换掉子组件的Two插槽哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template slot<span class=\"token operator\">=</span><span class=\"token string\">\"contentThree\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>我会置换掉子组件的Three插槽哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Son<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">Son</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/son.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-3、作用域插槽\"><a href=\"#1-3、作用域插槽\" class=\"headerlink\" title=\"1.3、作用域插槽\"></a>1.3、作用域插槽</h3><p>&emsp;&emsp;为什么要有作用域插槽呢？是这么个情况，在实际开发过程中啊，我们在父组件里调用子组件的时候，往子组件的插槽放置内容时，是无法访问子组件的数据的，很多时候让插槽内容能够访问子组件中独有的数据是很有用的。如下例子，子组件中有独有的数据，奥特曼数组和怪兽数组，我在子组件里写插槽时把数据带上，这里把具名插槽和作用域插槽结合用，因为实际工作中都是一起使用的。子组件如下：</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//子组件Son.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是子组件，我带了有名字的插槽，并且这个插槽带着我独有的数据哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>slot <span class=\"token operator\">:</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"contentOne\"</span> <span class=\"token operator\">:</span>tempArr1<span class=\"token operator\">=</span><span class=\"token string\">\"tempArr1\"</span> <span class=\"token operator\">:</span>tempArr2<span class=\"token operator\">=</span><span class=\"token string\">\"tempArr2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>slot<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">tempArr1</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'捷德'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'赛罗'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'贝利亚'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token literal-property property\">tempArr2</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'哥尔赞'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'梅尔巴'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'基利埃洛的人'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'加坦劫恶'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n<p>&emsp;&emsp;父组件的写法很重要，写法如下 ( v-slot: 插槽名称 = \"一个字段\" )，注意这里的字段官方一般用slotProps,它是一个对象，对象里装了插槽携带的所有的属性，包括tempArr1和tempArr2。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//父组件Father.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是父组件，我在下方调用了子组件哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Son<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span>slot<span class=\"token operator\">:</span>contentOne<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>slotProps<span class=\"token punctuation\">.</span>tempArr1<span class=\"token punctuation\">.</span><span class=\"token function\">jion</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>slotProps<span class=\"token punctuation\">.</span>tempArr2<span class=\"token punctuation\">.</span><span class=\"token function\">jion</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Son<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">Son</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/son.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","excerpt":"","more":"<h1 id=\"四、工作知识难点摘要之作用域插槽\"><a href=\"#四、工作知识难点摘要之作用域插槽\" class=\"headerlink\" title=\"四、工作知识难点摘要之作用域插槽\"></a>四、工作知识难点摘要之作用域插槽</h1><h2 id=\"1、认识插槽\"><a href=\"#1、认识插槽\" class=\"headerlink\" title=\"1、认识插槽\"></a>1、认识插槽</h2><h3 id=\"1-1、简单介绍\"><a href=\"#1-1、简单介绍\" class=\"headerlink\" title=\"1.1、简单介绍\"></a>1.1、简单介绍</h3><p>&emsp;&emsp;插槽就是子组件中的提供给父组件使用的一个占位符，用\\<slot>\\</slot> 表示，父组件可以在这个占位符中填充任何模板代码，如 HTML、组件等，填充的内容会替换子组件的\\<slot>\\</slot>标签。简单理解就是子组件中留下个“坑”，父组件可以使用指定内容来补“坑”。插槽主要分为：匿名插槽、具名插槽、作用域插槽，实际情况中具名插槽会和作用域插槽结合使用。</p>\n\n<h3 id=\"1-2、匿名插槽\"><a href=\"#1-2、匿名插槽\" class=\"headerlink\" title=\"1.2、匿名插槽\"></a>1.2、匿名插槽</h3><p>&emsp;&emsp;默认的插槽形式，很简单，看如下例子。子组件Son.vue中有一个插槽slot标签，这是有个父组件Father.vue引入子组件并使用，使用的时候可以在子组件标签内加新的HTML标签或者其他组件，而此时，加的内容就会替代掉子组件中的slot所占的位置。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//子组件Son.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是子组件，在我下面是我携带的插槽<span class=\"token punctuation\">,</span>当别人调用我的时候，可以按照需求往里面填东西哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>slot<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>slot<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//父组件Father.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是父组件，我在下方调用了子组件哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Son<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>span style<span class=\"token operator\">=</span><span class=\"token string\">\"color:red\"</span><span class=\"token operator\">></span>我在子组件内部放了一个span标签，这个标签会置换slot标签哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Son<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">Son</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/son.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-2、具名插槽\"><a href=\"#1-2、具名插槽\" class=\"headerlink\" title=\"1.2、具名插槽\"></a>1.2、具名插槽</h3><p>&emsp;&emsp;正常人都能看出来，匿名插槽缺点很明显，当子组件有很多插槽时，父组件在调用子组件时，往子组件中加了很多内容，那么这些内容和插槽们如何一一对应呢。。所以就得有具名插槽出现，给个名字，然后按照名字一个萝卜一个坑喽。如下的例子，子组件Son.vue中有多个插槽，并且每一个插槽都给了对应的名字，父组件Father.vue在调用子组件的时候，插入的内容都会携带一个名字对应入坑的。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//子组件Son.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是子组件，我带了好多有名字的插槽哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>slot name<span class=\"token operator\">=</span><span class=\"token string\">\"contentOne\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>slot<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>slot name<span class=\"token operator\">=</span><span class=\"token string\">\"contentTwo\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>slot<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>slot name<span class=\"token operator\">=</span><span class=\"token string\">\"contentThree\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>slot<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//父组件Father.vue</span>\n<span class=\"token comment\">//注意这里插槽也可以不用template模板包裹，但是模板包裹兼容性更好</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是父组件，我在下方调用了子组件哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Son<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template slot<span class=\"token operator\">=</span><span class=\"token string\">\"contentOne\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>我会置换掉子组件的one插槽哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template slot<span class=\"token operator\">=</span><span class=\"token string\">\"contentTwo\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>我会置换掉子组件的Two插槽哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template slot<span class=\"token operator\">=</span><span class=\"token string\">\"contentThree\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>我会置换掉子组件的Three插槽哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Son<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">Son</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/son.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-3、作用域插槽\"><a href=\"#1-3、作用域插槽\" class=\"headerlink\" title=\"1.3、作用域插槽\"></a>1.3、作用域插槽</h3><p>&emsp;&emsp;为什么要有作用域插槽呢？是这么个情况，在实际开发过程中啊，我们在父组件里调用子组件的时候，往子组件的插槽放置内容时，是无法访问子组件的数据的，很多时候让插槽内容能够访问子组件中独有的数据是很有用的。如下例子，子组件中有独有的数据，奥特曼数组和怪兽数组，我在子组件里写插槽时把数据带上，这里把具名插槽和作用域插槽结合用，因为实际工作中都是一起使用的。子组件如下：</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//子组件Son.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是子组件，我带了有名字的插槽，并且这个插槽带着我独有的数据哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>slot <span class=\"token operator\">:</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"contentOne\"</span> <span class=\"token operator\">:</span>tempArr1<span class=\"token operator\">=</span><span class=\"token string\">\"tempArr1\"</span> <span class=\"token operator\">:</span>tempArr2<span class=\"token operator\">=</span><span class=\"token string\">\"tempArr2\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>slot<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">tempArr1</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'捷德'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'赛罗'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'贝利亚'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token literal-property property\">tempArr2</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'哥尔赞'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'梅尔巴'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'基利埃洛的人'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'加坦劫恶'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n<p>&emsp;&emsp;父组件的写法很重要，写法如下 ( v-slot: 插槽名称 = \"一个字段\" )，注意这里的字段官方一般用slotProps,它是一个对象，对象里装了插槽携带的所有的属性，包括tempArr1和tempArr2。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//父组件Father.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>我是父组件，我在下方调用了子组件哦。。<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Son<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span>slot<span class=\"token operator\">:</span>contentOne<span class=\"token operator\">=</span><span class=\"token string\">\"slotProps\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>slotProps<span class=\"token punctuation\">.</span>tempArr1<span class=\"token punctuation\">.</span><span class=\"token function\">jion</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>slotProps<span class=\"token punctuation\">.</span>tempArr2<span class=\"token punctuation\">.</span><span class=\"token function\">jion</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Son<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">Son</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/son.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"title":"六、iview中的upload组件","comments":1,"_content":"\n# 一、工作知识难点摘要-iview组件之upload\n## 1、Upload组件\n### 1.1、什么是Upload组件\n\n<p>&emsp;&emsp;一句废话：用于文件选择上传和拖拽上传控件。那为啥我要写这个呢，是因为工作中遇到了一个实际场景，也挺有意思的，可以作为一种思路，或许用的好可以发散思维。下面用两个例子对比一下实际场景，大家就可以清晰的感受啦！！！</p>\n\n### 1.2、普通场景\n\n<p>&emsp;&emsp;在实际的开发过程中，我们喜欢把Butotn组件写在Upload组件里面，正常情况下，Upload组件是空标签，没有内容，所以莫得渲染，我们加一个Button之后，就会渲染出一个虽然我们看着Button组件，但是加外一层包着Upload标签。如下例子所示，注意Upload一定要有一个action，这是后端提供的一个接口，所谓的上传就是把音频传给后端，然后后端再给个地址，音频再绑定这个地址，点击播放啥的就都可以了。（Emmm.....不知道这个理解对不对诶。。。）</p>\n\n```javascript\n<Upload :action=\"这里放上传的地址\">\n  <Button>导入音频</Button>\n</Upload>  \n```\n\n<p>&emsp;&emsp;上面这个代码实际渲染就是一个button，当我们点击button的时候，会通过冒泡事件触发Upload的点击事件（handleClick）,随后出发一系列操作，弹窗文件窗口，选择音频，确认等.....</p>\n\n### 1.3、特殊场景\n<p>&emsp;&emsp;很普通对吧，也很简单，但是现在有一个场景，我想在Upload的文件弹窗弹出来之前，加个Modal框做个判断，我点击确定才继续执行Upload，点击取消就终止Upload事件。</p>\n\n<p>&emsp;&emsp;我想了挺长时间，然后看到了Uplaod本身带着before-upload事件。官方解释：上传文件之前的钩子，参数为上传的文件，若返回 false 或者 Promise 则停止上传。我在before-upload里加了一个Modal，但并没有解决，这里确实会弹出模态框，但是在弹出模态框的之前Upload上传的弹窗已经弹出，无法阻止Uplaod继续执行。可以看一下下面的示例：</p>\n\n![](/images/upload-fail.gif)\n\n<p>&emsp;&emsp;注意文件上传弹窗和模态框的弹窗顺序，这并不是我们想要的，我们想Modal框先弹出来，当我点击确定的时候再继续弹出文件上传弹窗，而当我点击取消就直接终止上传事件。随后我又想了，给Button添加一个时间，在button事件里写一个Modal，点击确定的时候继续执行，点击取消就取消冒泡，反正也没解决。最后使用了下面这个方法。</p>\n\n<p>&emsp;&emsp;那么怎么办呢，别急有方法。。这个时候啊。Button就不能写在Upload里面喽，要写在外面，然后我们给button一个点击事件，事件里弹出Modal框，我们点击确定的时候，利用$ref访问Upload组件，然后调用它的点击事件（注意是handleClick不是click哦。。。我们点击取消的时候就啥也不做就好啦，完美），好了看代码</p>\n\n```javascript\n<div>\n  <Upload :action=\"这里放上传的地址\" ref='audioUpload'></Upload> \n  <Button @click=\"getAudio\">导入音频</Button> \n</div>\n\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  public getAudio() {\n    this.$Modal.confirm({\n      title: '替换确认',\n      content: '<p>确认替换此音频？</p>',\n      onOk: () => {\n        (this.$refs.audioUpload as any).handleClick();\n      },\n      onCancel: () => { }\n    })\n  }\n  mounted () {\n\n  }\n}\n<script>\n```\n<p>恩恩讷讷讷讷，针不戳，然我们一起来看看效果吧。。。。</p>\n\n![](/images/upload-success.gif)","source":"_posts/工作知识总结/工作知识难点摘要系列-6、iview组件之upload.md","raw":"---\ntitle: 六、iview中的upload组件\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 一、工作知识难点摘要-iview组件之upload\n## 1、Upload组件\n### 1.1、什么是Upload组件\n\n<p>&emsp;&emsp;一句废话：用于文件选择上传和拖拽上传控件。那为啥我要写这个呢，是因为工作中遇到了一个实际场景，也挺有意思的，可以作为一种思路，或许用的好可以发散思维。下面用两个例子对比一下实际场景，大家就可以清晰的感受啦！！！</p>\n\n### 1.2、普通场景\n\n<p>&emsp;&emsp;在实际的开发过程中，我们喜欢把Butotn组件写在Upload组件里面，正常情况下，Upload组件是空标签，没有内容，所以莫得渲染，我们加一个Button之后，就会渲染出一个虽然我们看着Button组件，但是加外一层包着Upload标签。如下例子所示，注意Upload一定要有一个action，这是后端提供的一个接口，所谓的上传就是把音频传给后端，然后后端再给个地址，音频再绑定这个地址，点击播放啥的就都可以了。（Emmm.....不知道这个理解对不对诶。。。）</p>\n\n```javascript\n<Upload :action=\"这里放上传的地址\">\n  <Button>导入音频</Button>\n</Upload>  \n```\n\n<p>&emsp;&emsp;上面这个代码实际渲染就是一个button，当我们点击button的时候，会通过冒泡事件触发Upload的点击事件（handleClick）,随后出发一系列操作，弹窗文件窗口，选择音频，确认等.....</p>\n\n### 1.3、特殊场景\n<p>&emsp;&emsp;很普通对吧，也很简单，但是现在有一个场景，我想在Upload的文件弹窗弹出来之前，加个Modal框做个判断，我点击确定才继续执行Upload，点击取消就终止Upload事件。</p>\n\n<p>&emsp;&emsp;我想了挺长时间，然后看到了Uplaod本身带着before-upload事件。官方解释：上传文件之前的钩子，参数为上传的文件，若返回 false 或者 Promise 则停止上传。我在before-upload里加了一个Modal，但并没有解决，这里确实会弹出模态框，但是在弹出模态框的之前Upload上传的弹窗已经弹出，无法阻止Uplaod继续执行。可以看一下下面的示例：</p>\n\n![](/images/upload-fail.gif)\n\n<p>&emsp;&emsp;注意文件上传弹窗和模态框的弹窗顺序，这并不是我们想要的，我们想Modal框先弹出来，当我点击确定的时候再继续弹出文件上传弹窗，而当我点击取消就直接终止上传事件。随后我又想了，给Button添加一个时间，在button事件里写一个Modal，点击确定的时候继续执行，点击取消就取消冒泡，反正也没解决。最后使用了下面这个方法。</p>\n\n<p>&emsp;&emsp;那么怎么办呢，别急有方法。。这个时候啊。Button就不能写在Upload里面喽，要写在外面，然后我们给button一个点击事件，事件里弹出Modal框，我们点击确定的时候，利用$ref访问Upload组件，然后调用它的点击事件（注意是handleClick不是click哦。。。我们点击取消的时候就啥也不做就好啦，完美），好了看代码</p>\n\n```javascript\n<div>\n  <Upload :action=\"这里放上传的地址\" ref='audioUpload'></Upload> \n  <Button @click=\"getAudio\">导入音频</Button> \n</div>\n\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  public getAudio() {\n    this.$Modal.confirm({\n      title: '替换确认',\n      content: '<p>确认替换此音频？</p>',\n      onOk: () => {\n        (this.$refs.audioUpload as any).handleClick();\n      },\n      onCancel: () => { }\n    })\n  }\n  mounted () {\n\n  }\n}\n<script>\n```\n<p>恩恩讷讷讷讷，针不戳，然我们一起来看看效果吧。。。。</p>\n\n![](/images/upload-success.gif)","slug":"工作知识总结/工作知识难点摘要系列-6、iview组件之upload","published":1,"date":"2024-11-05T14:59:24.498Z","updated":"2022-11-26T18:03:45.812Z","layout":"post","photos":[],"_id":"cm42hwwu6001cssnnfu4m1qho","content":"<h1 id=\"一、工作知识难点摘要-iview组件之upload\"><a href=\"#一、工作知识难点摘要-iview组件之upload\" class=\"headerlink\" title=\"一、工作知识难点摘要-iview组件之upload\"></a>一、工作知识难点摘要-iview组件之upload</h1><h2 id=\"1、Upload组件\"><a href=\"#1、Upload组件\" class=\"headerlink\" title=\"1、Upload组件\"></a>1、Upload组件</h2><h3 id=\"1-1、什么是Upload组件\"><a href=\"#1-1、什么是Upload组件\" class=\"headerlink\" title=\"1.1、什么是Upload组件\"></a>1.1、什么是Upload组件</h3><p>&emsp;&emsp;一句废话：用于文件选择上传和拖拽上传控件。那为啥我要写这个呢，是因为工作中遇到了一个实际场景，也挺有意思的，可以作为一种思路，或许用的好可以发散思维。下面用两个例子对比一下实际场景，大家就可以清晰的感受啦！！！</p>\n\n<h3 id=\"1-2、普通场景\"><a href=\"#1-2、普通场景\" class=\"headerlink\" title=\"1.2、普通场景\"></a>1.2、普通场景</h3><p>&emsp;&emsp;在实际的开发过程中，我们喜欢把Butotn组件写在Upload组件里面，正常情况下，Upload组件是空标签，没有内容，所以莫得渲染，我们加一个Button之后，就会渲染出一个虽然我们看着Button组件，但是加外一层包着Upload标签。如下例子所示，注意Upload一定要有一个action，这是后端提供的一个接口，所谓的上传就是把音频传给后端，然后后端再给个地址，音频再绑定这个地址，点击播放啥的就都可以了。（Emmm.....不知道这个理解对不对诶。。。）</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>Upload <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"这里放上传的地址\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">></span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>  </code></pre>\n\n<p>&emsp;&emsp;上面这个代码实际渲染就是一个button，当我们点击button的时候，会通过冒泡事件触发Upload的点击事件（handleClick）,随后出发一系列操作，弹窗文件窗口，选择音频，确认等.....</p>\n\n<h3 id=\"1-3、特殊场景\"><a href=\"#1-3、特殊场景\" class=\"headerlink\" title=\"1.3、特殊场景\"></a>1.3、特殊场景</h3><p>&emsp;&emsp;很普通对吧，也很简单，但是现在有一个场景，我想在Upload的文件弹窗弹出来之前，加个Modal框做个判断，我点击确定才继续执行Upload，点击取消就终止Upload事件。</p>\n\n<p>&emsp;&emsp;我想了挺长时间，然后看到了Uplaod本身带着before-upload事件。官方解释：上传文件之前的钩子，参数为上传的文件，若返回 false 或者 Promise 则停止上传。我在before-upload里加了一个Modal，但并没有解决，这里确实会弹出模态框，但是在弹出模态框的之前Upload上传的弹窗已经弹出，无法阻止Uplaod继续执行。可以看一下下面的示例：</p>\n\n<p><img src=\"/images/upload-fail.gif\"></p>\n<p>&emsp;&emsp;注意文件上传弹窗和模态框的弹窗顺序，这并不是我们想要的，我们想Modal框先弹出来，当我点击确定的时候再继续弹出文件上传弹窗，而当我点击取消就直接终止上传事件。随后我又想了，给Button添加一个时间，在button事件里写一个Modal，点击确定的时候继续执行，点击取消就取消冒泡，反正也没解决。最后使用了下面这个方法。</p>\n\n<p>&emsp;&emsp;那么怎么办呢，别急有方法。。这个时候啊。Button就不能写在Upload里面喽，要写在外面，然后我们给button一个点击事件，事件里弹出Modal框，我们点击确定的时候，利用$ref访问Upload组件，然后调用它的点击事件（注意是handleClick不是click哦。。。我们点击取消的时候就啥也不做就好啦，完美），好了看代码</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Upload <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"这里放上传的地址\"</span> ref<span class=\"token operator\">=</span><span class=\"token string\">'audioUpload'</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span> \n  <span class=\"token operator\">&lt;</span>Button @click<span class=\"token operator\">=</span><span class=\"token string\">\"getAudio\"</span><span class=\"token operator\">></span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span> \n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getAudio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Modal<span class=\"token punctuation\">.</span><span class=\"token function\">confirm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'替换确认'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;p>确认替换此音频？&lt;/p>'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">onOk</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>audioUpload <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">onCancel</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n<p>恩恩讷讷讷讷，针不戳，然我们一起来看看效果吧。。。。</p>\n\n<p><img src=\"/images/upload-success.gif\"></p>\n","excerpt":"","more":"<h1 id=\"一、工作知识难点摘要-iview组件之upload\"><a href=\"#一、工作知识难点摘要-iview组件之upload\" class=\"headerlink\" title=\"一、工作知识难点摘要-iview组件之upload\"></a>一、工作知识难点摘要-iview组件之upload</h1><h2 id=\"1、Upload组件\"><a href=\"#1、Upload组件\" class=\"headerlink\" title=\"1、Upload组件\"></a>1、Upload组件</h2><h3 id=\"1-1、什么是Upload组件\"><a href=\"#1-1、什么是Upload组件\" class=\"headerlink\" title=\"1.1、什么是Upload组件\"></a>1.1、什么是Upload组件</h3><p>&emsp;&emsp;一句废话：用于文件选择上传和拖拽上传控件。那为啥我要写这个呢，是因为工作中遇到了一个实际场景，也挺有意思的，可以作为一种思路，或许用的好可以发散思维。下面用两个例子对比一下实际场景，大家就可以清晰的感受啦！！！</p>\n\n<h3 id=\"1-2、普通场景\"><a href=\"#1-2、普通场景\" class=\"headerlink\" title=\"1.2、普通场景\"></a>1.2、普通场景</h3><p>&emsp;&emsp;在实际的开发过程中，我们喜欢把Butotn组件写在Upload组件里面，正常情况下，Upload组件是空标签，没有内容，所以莫得渲染，我们加一个Button之后，就会渲染出一个虽然我们看着Button组件，但是加外一层包着Upload标签。如下例子所示，注意Upload一定要有一个action，这是后端提供的一个接口，所谓的上传就是把音频传给后端，然后后端再给个地址，音频再绑定这个地址，点击播放啥的就都可以了。（Emmm.....不知道这个理解对不对诶。。。）</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>Upload <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"这里放上传的地址\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">></span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>  </code></pre>\n\n<p>&emsp;&emsp;上面这个代码实际渲染就是一个button，当我们点击button的时候，会通过冒泡事件触发Upload的点击事件（handleClick）,随后出发一系列操作，弹窗文件窗口，选择音频，确认等.....</p>\n\n<h3 id=\"1-3、特殊场景\"><a href=\"#1-3、特殊场景\" class=\"headerlink\" title=\"1.3、特殊场景\"></a>1.3、特殊场景</h3><p>&emsp;&emsp;很普通对吧，也很简单，但是现在有一个场景，我想在Upload的文件弹窗弹出来之前，加个Modal框做个判断，我点击确定才继续执行Upload，点击取消就终止Upload事件。</p>\n\n<p>&emsp;&emsp;我想了挺长时间，然后看到了Uplaod本身带着before-upload事件。官方解释：上传文件之前的钩子，参数为上传的文件，若返回 false 或者 Promise 则停止上传。我在before-upload里加了一个Modal，但并没有解决，这里确实会弹出模态框，但是在弹出模态框的之前Upload上传的弹窗已经弹出，无法阻止Uplaod继续执行。可以看一下下面的示例：</p>\n\n<p><img src=\"/images/upload-fail.gif\"></p>\n<p>&emsp;&emsp;注意文件上传弹窗和模态框的弹窗顺序，这并不是我们想要的，我们想Modal框先弹出来，当我点击确定的时候再继续弹出文件上传弹窗，而当我点击取消就直接终止上传事件。随后我又想了，给Button添加一个时间，在button事件里写一个Modal，点击确定的时候继续执行，点击取消就取消冒泡，反正也没解决。最后使用了下面这个方法。</p>\n\n<p>&emsp;&emsp;那么怎么办呢，别急有方法。。这个时候啊。Button就不能写在Upload里面喽，要写在外面，然后我们给button一个点击事件，事件里弹出Modal框，我们点击确定的时候，利用$ref访问Upload组件，然后调用它的点击事件（注意是handleClick不是click哦。。。我们点击取消的时候就啥也不做就好啦，完美），好了看代码</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Upload <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"这里放上传的地址\"</span> ref<span class=\"token operator\">=</span><span class=\"token string\">'audioUpload'</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span> \n  <span class=\"token operator\">&lt;</span>Button @click<span class=\"token operator\">=</span><span class=\"token string\">\"getAudio\"</span><span class=\"token operator\">></span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span> \n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getAudio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Modal<span class=\"token punctuation\">.</span><span class=\"token function\">confirm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'替换确认'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;p>确认替换此音频？&lt;/p>'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">onOk</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>audioUpload <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">onCancel</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n<p>恩恩讷讷讷讷，针不戳，然我们一起来看看效果吧。。。。</p>\n\n<p><img src=\"/images/upload-success.gif\"></p>\n"},{"title":"九、动态绑定样式","comments":1,"_content":"\n# 一、工作知识难点摘要-动态样式绑定\n## 1、动态样式绑定的使用\n### 1.1、背景\n\n<p>&emsp;&emsp;动态样式其实经常用到，而且写法也很简单，然后我总是忘记，好烦。为了加深印象，我决定写成博客吧。实际场景经常就是，我们的样式不是写死的而是做一下灵活的判断去决定这个样式要不要加，或者根据不同场景选择不同样式。</p>\n\n### 1.2 第来看下写法吧\n<p>&emsp;&emsp;很简单，直接上代码</p>\n\n```javascript\n<template>\n  //1、类名可以是一个变量\n  <div :class=\"statusMap[row.status].theme\"></div>\n\n  //2、类名可以是一个变量加字符串，index是变量\n  <div :class=\"'analysis_' + index\"></div>\n\n  //3、可以是等于不等于的判断结果，是否显示\n  <div :class=\"{'slot-legends': chart.type === 'number'}\"></div>\n\n  //4、可以是布尔变量,这里isshow是布尔值\n  <div :class=\"{ 'is-open': isshow }\"></div>\n  \n  //5、可以是等式判断结合布尔值（用与或非结合）\n  <div :class=\"{'is-disable':type=='entity' && !canDownLoad}\"></div>\n\n  //6、可以是等于不等于的判断结果，是否显示\n  <div :class=\"`legends-container ${size}`\"></div>\n\n  //7、可以是三元表达式\n  <div :class=\"showDrawer ? 'right' : 'left'\"></div>\n\n  //8、可以同时动态多个样式\n  <div :class=\"{'phrase-class':true,'phrase-color':!isDetail}\"></div>\n</template>\n```","source":"_posts/工作知识总结/工作知识难点摘要系列-9、动态绑定样式.md","raw":"---\ntitle: 九、动态绑定样式\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 一、工作知识难点摘要-动态样式绑定\n## 1、动态样式绑定的使用\n### 1.1、背景\n\n<p>&emsp;&emsp;动态样式其实经常用到，而且写法也很简单，然后我总是忘记，好烦。为了加深印象，我决定写成博客吧。实际场景经常就是，我们的样式不是写死的而是做一下灵活的判断去决定这个样式要不要加，或者根据不同场景选择不同样式。</p>\n\n### 1.2 第来看下写法吧\n<p>&emsp;&emsp;很简单，直接上代码</p>\n\n```javascript\n<template>\n  //1、类名可以是一个变量\n  <div :class=\"statusMap[row.status].theme\"></div>\n\n  //2、类名可以是一个变量加字符串，index是变量\n  <div :class=\"'analysis_' + index\"></div>\n\n  //3、可以是等于不等于的判断结果，是否显示\n  <div :class=\"{'slot-legends': chart.type === 'number'}\"></div>\n\n  //4、可以是布尔变量,这里isshow是布尔值\n  <div :class=\"{ 'is-open': isshow }\"></div>\n  \n  //5、可以是等式判断结合布尔值（用与或非结合）\n  <div :class=\"{'is-disable':type=='entity' && !canDownLoad}\"></div>\n\n  //6、可以是等于不等于的判断结果，是否显示\n  <div :class=\"`legends-container ${size}`\"></div>\n\n  //7、可以是三元表达式\n  <div :class=\"showDrawer ? 'right' : 'left'\"></div>\n\n  //8、可以同时动态多个样式\n  <div :class=\"{'phrase-class':true,'phrase-color':!isDetail}\"></div>\n</template>\n```","slug":"工作知识总结/工作知识难点摘要系列-9、动态绑定样式","published":1,"date":"2024-11-05T14:59:24.503Z","updated":"2022-12-15T15:32:07.288Z","layout":"post","photos":[],"_id":"cm42hwwu7001hssnn84805u5o","content":"<h1 id=\"一、工作知识难点摘要-动态样式绑定\"><a href=\"#一、工作知识难点摘要-动态样式绑定\" class=\"headerlink\" title=\"一、工作知识难点摘要-动态样式绑定\"></a>一、工作知识难点摘要-动态样式绑定</h1><h2 id=\"1、动态样式绑定的使用\"><a href=\"#1、动态样式绑定的使用\" class=\"headerlink\" title=\"1、动态样式绑定的使用\"></a>1、动态样式绑定的使用</h2><h3 id=\"1-1、背景\"><a href=\"#1-1、背景\" class=\"headerlink\" title=\"1.1、背景\"></a>1.1、背景</h3><p>&emsp;&emsp;动态样式其实经常用到，而且写法也很简单，然后我总是忘记，好烦。为了加深印象，我决定写成博客吧。实际场景经常就是，我们的样式不是写死的而是做一下灵活的判断去决定这个样式要不要加，或者根据不同场景选择不同样式。</p>\n\n<h3 id=\"1-2-第来看下写法吧\"><a href=\"#1-2-第来看下写法吧\" class=\"headerlink\" title=\"1.2 第来看下写法吧\"></a>1.2 第来看下写法吧</h3><p>&emsp;&emsp;很简单，直接上代码</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token comment\">//1、类名可以是一个变量</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"statusMap[row.status].theme\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">//2、类名可以是一个变量加字符串，index是变量</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"'analysis_' + index\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">//3、可以是等于不等于的判断结果，是否显示</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#123;'slot-legends': chart.type === 'number'&#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">//4、可以是布尔变量,这里isshow是布尔值</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#123; 'is-open': isshow &#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  \n  <span class=\"token comment\">//5、可以是等式判断结合布尔值（用与或非结合）</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#123;'is-disable':type=='entity' &amp;&amp; !canDownLoad&#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">//6、可以是等于不等于的判断结果，是否显示</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"`legends-container $&#123;size&#125;`\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">//7、可以是三元表达式</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"showDrawer ? 'right' : 'left'\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">//8、可以同时动态多个样式</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#123;'phrase-class':true,'phrase-color':!isDetail&#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span></code></pre>","excerpt":"","more":"<h1 id=\"一、工作知识难点摘要-动态样式绑定\"><a href=\"#一、工作知识难点摘要-动态样式绑定\" class=\"headerlink\" title=\"一、工作知识难点摘要-动态样式绑定\"></a>一、工作知识难点摘要-动态样式绑定</h1><h2 id=\"1、动态样式绑定的使用\"><a href=\"#1、动态样式绑定的使用\" class=\"headerlink\" title=\"1、动态样式绑定的使用\"></a>1、动态样式绑定的使用</h2><h3 id=\"1-1、背景\"><a href=\"#1-1、背景\" class=\"headerlink\" title=\"1.1、背景\"></a>1.1、背景</h3><p>&emsp;&emsp;动态样式其实经常用到，而且写法也很简单，然后我总是忘记，好烦。为了加深印象，我决定写成博客吧。实际场景经常就是，我们的样式不是写死的而是做一下灵活的判断去决定这个样式要不要加，或者根据不同场景选择不同样式。</p>\n\n<h3 id=\"1-2-第来看下写法吧\"><a href=\"#1-2-第来看下写法吧\" class=\"headerlink\" title=\"1.2 第来看下写法吧\"></a>1.2 第来看下写法吧</h3><p>&emsp;&emsp;很简单，直接上代码</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token comment\">//1、类名可以是一个变量</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"statusMap[row.status].theme\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">//2、类名可以是一个变量加字符串，index是变量</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"'analysis_' + index\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">//3、可以是等于不等于的判断结果，是否显示</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#123;'slot-legends': chart.type === 'number'&#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">//4、可以是布尔变量,这里isshow是布尔值</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#123; 'is-open': isshow &#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  \n  <span class=\"token comment\">//5、可以是等式判断结合布尔值（用与或非结合）</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#123;'is-disable':type=='entity' &amp;&amp; !canDownLoad&#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">//6、可以是等于不等于的判断结果，是否显示</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"`legends-container $&#123;size&#125;`\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">//7、可以是三元表达式</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"showDrawer ? 'right' : 'left'\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">//8、可以同时动态多个样式</span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token operator\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#123;'phrase-class':true,'phrase-color':!isDetail&#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span></code></pre>"},{"title":"八、this.$emit()","comments":1,"_content":"\n# 一、工作知识难点摘要-this.$emit()的使用\n## 1、this.$emit()的使用\n### 1.1、背景\n\n<p>&emsp;&emsp;这是一个很简单的知识点，那为啥我要写呢，这么基础的东西有啥好写的，妈的我就是菜，老子记不住，每次用都还得查一下，今天必须写在我的集锦里，大爷的！！！</p>\n\n### 1.2 第一种写法\n<p>&emsp;&emsp;首先，我是把vue和ts结合着写的，因为工作中都是结合的，第一种写法用的是ts的装饰器@Emit，那么直接看代码。首先啊，子组件得引入装饰器Emit,然后点击button，触发事件deliverValue，该事件就是传值的，我们在子组件写@Emit('这里放的是名称，待会父组件引用子组件时，子组件里绑定的事件要与这个名字保持一致哦')</p>\n\n```javascript\n//首先我们看子组件Son.vue\n<template>\n  <div class=\"container\">\n    <button @click=\"deliverValue\"></button>\n  </div>\n</template>\n<script lang=\"ts\">\n  import { Vue, Component, Emit } from 'vue-property-decorator';\n  @Component({\n    components: {\n      \n    }\n  })\n  export default class TestCase extends Vue {\n    const utralMenArr:any = ['迪迦','塞罗','捷德','欧布','艾克斯','阿古茹']\n\n    @Emit('deliverValue')\n    public deliverValue() {\n        return this.utralMenArr;\n    }\n\n    mounted () { }\n  }\n<script>\n\n\n//然后我们来看父组件Father.vue\n<template>\n  <div class=\"container\">\n    <Son @deliverValue=\"getArr\"></Son>\n  </div>\n</template>\n<script lang=\"ts\">\n  import { Vue, Component, Emit } from 'vue-property-decorator';\n  @Component({\n    components: {\n      Son: () => import('@/pages/Son.vue')\n    }\n  })\n  export default class TestCase extends Vue {\n\n    public getArr(value) {\n        console.log(value);\n    }\n\n    mounted () { }\n  }\n<script>\n```\n### 1.3 第二种写法\n\n<p>&emsp;&emsp;那么第二种写法呢，就是用this.$emit()了，基本用法和上面那个是一样的，只不过是换了一种写法，那我们直接来看吧。子组件的this.$emit('函数名','传的值')</p>\n\n```javascript\n//首先我们看子组件Son.vue\n<template>\n  <div class=\"container\">\n    <button @click=\"deliverValue\"></button>\n  </div>\n</template>\n<script lang=\"ts\">\n  import { Vue, Component } from 'vue-property-decorator';\n  @Component({\n    components: {\n      \n    }\n  })\n  export default class TestCase extends Vue {\n\n    const utralMenArr:any = ['迪迦','塞罗','捷德','欧布','艾克斯','阿古茹']\n\n    public deliverValue() {\n        this.$emit('deliverValue', this.utralMenArr)\n    }\n\n    mounted () {}\n  }\n<script>\n\n\n//然后我们来看父组件Father.vue\n<template>\n  <div class=\"container\">\n    <Son @deliverValue=\"getArr\"></Son>\n  </div>\n</template>\n<script lang=\"ts\">\n  import { Vue, Component, Emit } from 'vue-property-decorator';\n  @Component({\n    components: {\n      Son: () => import('@/pages/Son.vue')\n    }\n  })\n  export default class TestCase extends Vue {\n\n    public getArr(value) {\n        console.log(value);\n    }\n\n    mounted () { }\n  }\n<script>\n```\n\n","source":"_posts/工作知识总结/工作知识难点摘要系列-8、this.$emit().md","raw":"---\ntitle: 八、this.$emit()\ntags: 工作知识总结\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 一、工作知识难点摘要-this.$emit()的使用\n## 1、this.$emit()的使用\n### 1.1、背景\n\n<p>&emsp;&emsp;这是一个很简单的知识点，那为啥我要写呢，这么基础的东西有啥好写的，妈的我就是菜，老子记不住，每次用都还得查一下，今天必须写在我的集锦里，大爷的！！！</p>\n\n### 1.2 第一种写法\n<p>&emsp;&emsp;首先，我是把vue和ts结合着写的，因为工作中都是结合的，第一种写法用的是ts的装饰器@Emit，那么直接看代码。首先啊，子组件得引入装饰器Emit,然后点击button，触发事件deliverValue，该事件就是传值的，我们在子组件写@Emit('这里放的是名称，待会父组件引用子组件时，子组件里绑定的事件要与这个名字保持一致哦')</p>\n\n```javascript\n//首先我们看子组件Son.vue\n<template>\n  <div class=\"container\">\n    <button @click=\"deliverValue\"></button>\n  </div>\n</template>\n<script lang=\"ts\">\n  import { Vue, Component, Emit } from 'vue-property-decorator';\n  @Component({\n    components: {\n      \n    }\n  })\n  export default class TestCase extends Vue {\n    const utralMenArr:any = ['迪迦','塞罗','捷德','欧布','艾克斯','阿古茹']\n\n    @Emit('deliverValue')\n    public deliverValue() {\n        return this.utralMenArr;\n    }\n\n    mounted () { }\n  }\n<script>\n\n\n//然后我们来看父组件Father.vue\n<template>\n  <div class=\"container\">\n    <Son @deliverValue=\"getArr\"></Son>\n  </div>\n</template>\n<script lang=\"ts\">\n  import { Vue, Component, Emit } from 'vue-property-decorator';\n  @Component({\n    components: {\n      Son: () => import('@/pages/Son.vue')\n    }\n  })\n  export default class TestCase extends Vue {\n\n    public getArr(value) {\n        console.log(value);\n    }\n\n    mounted () { }\n  }\n<script>\n```\n### 1.3 第二种写法\n\n<p>&emsp;&emsp;那么第二种写法呢，就是用this.$emit()了，基本用法和上面那个是一样的，只不过是换了一种写法，那我们直接来看吧。子组件的this.$emit('函数名','传的值')</p>\n\n```javascript\n//首先我们看子组件Son.vue\n<template>\n  <div class=\"container\">\n    <button @click=\"deliverValue\"></button>\n  </div>\n</template>\n<script lang=\"ts\">\n  import { Vue, Component } from 'vue-property-decorator';\n  @Component({\n    components: {\n      \n    }\n  })\n  export default class TestCase extends Vue {\n\n    const utralMenArr:any = ['迪迦','塞罗','捷德','欧布','艾克斯','阿古茹']\n\n    public deliverValue() {\n        this.$emit('deliverValue', this.utralMenArr)\n    }\n\n    mounted () {}\n  }\n<script>\n\n\n//然后我们来看父组件Father.vue\n<template>\n  <div class=\"container\">\n    <Son @deliverValue=\"getArr\"></Son>\n  </div>\n</template>\n<script lang=\"ts\">\n  import { Vue, Component, Emit } from 'vue-property-decorator';\n  @Component({\n    components: {\n      Son: () => import('@/pages/Son.vue')\n    }\n  })\n  export default class TestCase extends Vue {\n\n    public getArr(value) {\n        console.log(value);\n    }\n\n    mounted () { }\n  }\n<script>\n```\n\n","slug":"工作知识总结/工作知识难点摘要系列-8、this.$emit()","published":1,"date":"2024-11-05T14:59:24.502Z","updated":"2022-12-15T15:32:00.616Z","layout":"post","photos":[],"_id":"cm42hwwu9001kssnn06pv13f1","content":"<h1 id=\"一、工作知识难点摘要-this-emit-的使用\"><a href=\"#一、工作知识难点摘要-this-emit-的使用\" class=\"headerlink\" title=\"一、工作知识难点摘要-this.$emit()的使用\"></a>一、工作知识难点摘要-this.$emit()的使用</h1><h2 id=\"1、this-emit-的使用\"><a href=\"#1、this-emit-的使用\" class=\"headerlink\" title=\"1、this.$emit()的使用\"></a>1、this.$emit()的使用</h2><h3 id=\"1-1、背景\"><a href=\"#1-1、背景\" class=\"headerlink\" title=\"1.1、背景\"></a>1.1、背景</h3><p>&emsp;&emsp;这是一个很简单的知识点，那为啥我要写呢，这么基础的东西有啥好写的，妈的我就是菜，老子记不住，每次用都还得查一下，今天必须写在我的集锦里，大爷的！！！</p>\n\n<h3 id=\"1-2-第一种写法\"><a href=\"#1-2-第一种写法\" class=\"headerlink\" title=\"1.2 第一种写法\"></a>1.2 第一种写法</h3><p>&emsp;&emsp;首先，我是把vue和ts结合着写的，因为工作中都是结合的，第一种写法用的是ts的装饰器@Emit，那么直接看代码。首先啊，子组件得引入装饰器Emit,然后点击button，触发事件deliverValue，该事件就是传值的，我们在子组件写@Emit('这里放的是名称，待会父组件引用子组件时，子组件里绑定的事件要与这个名字保持一致哦')</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//首先我们看子组件Son.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"deliverValue\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Emit <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n  @<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      \n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">utralMenArr</span><span class=\"token operator\">:</span>any <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'塞罗'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'捷德'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'欧布'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'艾克斯'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'阿古茹'</span><span class=\"token punctuation\">]</span>\n\n    @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'deliverValue'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token function\">deliverValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>utralMenArr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n\n<span class=\"token comment\">//然后我们来看父组件Father.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Son @deliverValue<span class=\"token operator\">=</span><span class=\"token string\">\"getArr\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Son<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Emit <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n  @<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function-variable function\">Son</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Son.vue'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n<h3 id=\"1-3-第二种写法\"><a href=\"#1-3-第二种写法\" class=\"headerlink\" title=\"1.3 第二种写法\"></a>1.3 第二种写法</h3><p>&emsp;&emsp;那么第二种写法呢，就是用this.$emit()了，基本用法和上面那个是一样的，只不过是换了一种写法，那我们直接来看吧。子组件的this.$emit('函数名','传的值')</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//首先我们看子组件Son.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"deliverValue\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n  @<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      \n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">utralMenArr</span><span class=\"token operator\">:</span>any <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'塞罗'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'捷德'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'欧布'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'艾克斯'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'阿古茹'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token function\">deliverValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'deliverValue'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>utralMenArr<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n\n<span class=\"token comment\">//然后我们来看父组件Father.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Son @deliverValue<span class=\"token operator\">=</span><span class=\"token string\">\"getArr\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Son<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Emit <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n  @<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function-variable function\">Son</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Son.vue'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n","excerpt":"","more":"<h1 id=\"一、工作知识难点摘要-this-emit-的使用\"><a href=\"#一、工作知识难点摘要-this-emit-的使用\" class=\"headerlink\" title=\"一、工作知识难点摘要-this.$emit()的使用\"></a>一、工作知识难点摘要-this.$emit()的使用</h1><h2 id=\"1、this-emit-的使用\"><a href=\"#1、this-emit-的使用\" class=\"headerlink\" title=\"1、this.$emit()的使用\"></a>1、this.$emit()的使用</h2><h3 id=\"1-1、背景\"><a href=\"#1-1、背景\" class=\"headerlink\" title=\"1.1、背景\"></a>1.1、背景</h3><p>&emsp;&emsp;这是一个很简单的知识点，那为啥我要写呢，这么基础的东西有啥好写的，妈的我就是菜，老子记不住，每次用都还得查一下，今天必须写在我的集锦里，大爷的！！！</p>\n\n<h3 id=\"1-2-第一种写法\"><a href=\"#1-2-第一种写法\" class=\"headerlink\" title=\"1.2 第一种写法\"></a>1.2 第一种写法</h3><p>&emsp;&emsp;首先，我是把vue和ts结合着写的，因为工作中都是结合的，第一种写法用的是ts的装饰器@Emit，那么直接看代码。首先啊，子组件得引入装饰器Emit,然后点击button，触发事件deliverValue，该事件就是传值的，我们在子组件写@Emit('这里放的是名称，待会父组件引用子组件时，子组件里绑定的事件要与这个名字保持一致哦')</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//首先我们看子组件Son.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"deliverValue\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Emit <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n  @<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      \n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">utralMenArr</span><span class=\"token operator\">:</span>any <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'塞罗'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'捷德'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'欧布'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'艾克斯'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'阿古茹'</span><span class=\"token punctuation\">]</span>\n\n    @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'deliverValue'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token function\">deliverValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>utralMenArr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n\n<span class=\"token comment\">//然后我们来看父组件Father.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Son @deliverValue<span class=\"token operator\">=</span><span class=\"token string\">\"getArr\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Son<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Emit <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n  @<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function-variable function\">Son</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Son.vue'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n<h3 id=\"1-3-第二种写法\"><a href=\"#1-3-第二种写法\" class=\"headerlink\" title=\"1.3 第二种写法\"></a>1.3 第二种写法</h3><p>&emsp;&emsp;那么第二种写法呢，就是用this.$emit()了，基本用法和上面那个是一样的，只不过是换了一种写法，那我们直接来看吧。子组件的this.$emit('函数名','传的值')</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//首先我们看子组件Son.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"deliverValue\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n  @<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      \n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">utralMenArr</span><span class=\"token operator\">:</span>any <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'迪迦'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'塞罗'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'捷德'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'欧布'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'艾克斯'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'阿古茹'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token function\">deliverValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'deliverValue'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>utralMenArr<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n\n<span class=\"token comment\">//然后我们来看父组件Father.vue</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Son @deliverValue<span class=\"token operator\">=</span><span class=\"token string\">\"getArr\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Son<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Emit <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n  @<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function-variable function\">Son</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@/pages/Son.vue'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n"},{"title":"二、iview-Table之动态合并单元格","comments":1,"_content":"# 一、iview-Table之动态合并单元格\n## 1、普通合并单元格\n<p>&emsp;&emsp;我们先来看一下简单的合并单元格，也是iview官网给的示例，可以帮助我们理解。通过设置属性span-method可以指定合并行或列的算法，方法传入一个对象，对象里有四个属性,分别是:</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>row:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>column:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>rowIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>columnIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;该函数可以返回一个包含两个元素的数组，第一个元素代表rowspan,表示合并几行，第二个元素代表colspan表示合并几列。了解了用这个属性，那么怎么用呢，我们来看代码啊，并且对着代码看下效果哦！！</p>\n\n```javascript\n<template>\n    <div>\n      <Table :columns=\"columns\" :data=\"data\" :span-method=\"handleSpan\"></Table>\n    </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  //表头列\n  columns:Array<any> = [\n    {\n      title: 'Date',\n      key: 'date'\n    },\n    {\n      title: 'Name',\n      key: 'name'\n    },\n    {\n      title: 'Age',\n      key: 'age'\n    },\n    {\n      title: 'Address',\n      key: 'address'\n    },\n  ];\n  \n  data: Array<any> = [\n    {\n      name: 'John Brown',\n      age: 18,\n      address: 'New York No. 1 Lake Park',\n      date: '2016-10-03'\n    },\n    {\n      name: 'Jim Green',\n      age: 24,\n      address: 'London No. 1 Lake Park',\n      date: '2016-10-01'\n    },\n    {\n      name: 'Joe Black',\n      age: 30,\n      address: 'Sydney No. 1 Lake Park',\n      date: '2016-10-02'\n    },\n    {\n      name: 'Jon Snow',\n      age: 26,\n      address: 'Ottawa No. 2 Lake Park',\n      date: '2016-10-04'\n    }\n  ];\n\n  handleSpan({ row, column, rowIndex, columnIndex }) {\n    if (rowIndex === 0 && columnIndex === 0) {\n      //如果是第一行第一列，则返回[1,2],就是该单元格合并一行，合并两列\n      return [1, 2];\n    } else if (rowIndex === 0 && columnIndex === 1) {\n      //因为合并了第一行，第二列的单元格，所以要给这个单元格返回[0,0],就是关闭这个单元格\n      return [0, 0];\n    }\n    if (rowIndex === 2 && columnIndex === 0) {\n      //不同写法但同理，第三行第一列单元格合并两行，合并一列\n      return {\n        rowspan: 2,\n        colspan: 1\n      };\n    } else if (rowIndex === 3 && columnIndex === 0) {\n      //同理，被合并的单元格要置空\n      return {\n        rowspan: 0,\n        colspan: 0\n      };\n    }\n  }\n\n  mounted () {\n\n  }\n}\n<script>\n```\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果，效果杠杠的！！第一行的前两列合并，第一列的后两行合并。</p>\n\n![](/images/mergeTable.jpg)\n\n## 2、复杂合并单元格\n<p>&emsp;&emsp;以上的情况是非常简单的情景，但是实际情况下，我们总是要根据数据做动态合并的，而且实际情况中是不怎会合并两列的，英语列表头不一样，合并没意义。所以实际中我们总会合并一些特定行，主要就是哪些行数据相同时，我们就给他合并。注意啊，这个时候，我们对数据也是有要求的啊，就是内容相同的数据必须是相邻的行，因为跨行合并是在是没意义。那么，怎么合并呢，合并的方法还是上面那个，只不过我们要对数据做处理，记录每一行的数据相同的我们会给到标志，然后根据这个标志，来决定合并几行。。。</p>\n<p>&emsp;&emsp;这里我还要解释一个情况，就是我们再合并第一列的数据相同的行后，我们再合并第二列的行，这个时候是在第一列行合并的基础上去做的，比如在第二列中相同的数据，但是在第一列中属于不同的合并部分，那么是不让合并的。</p>\n<p style=\"color: red\">&emsp;&emsp;主要看两个函数handleSpan和assembleData，数据是请求过来的，我们拿到数据之后，调用assembleData函数，然后渲染table的时候，table会自己根据handleSpan去渲染。</p>\n\n```javascript\n<template>\n    <div>\n      <Table :columns=\"columns\" :data=\"data\" :span-method=\"handleSpan\"></Table>\n    </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  //表头列就不写了，一样的\n  columns:Array<any> = [];\n  //数据是请求过来的，也不写了啊\n  data: Array<any> = [];\n\n  //这里我们做前三列的行合并\n  handleSpan({ row, column, rowIndex, columnIndex }) {\n    //合并第一列的数据相同行\n    if (columnIndex == 0) {\n      let x = row.oneNum == 0 ? 0 : row.oneNum\n      let y = row.oneNum == 0 ? 0 : 1\n      return [x, y]\n    }\n    //合并第二列的数据相同行\n    if (columnIndex == 1) {\n      let x = row.twoNum == 0 ? 0 : row.twoNum\n      let y = row.twoNum == 0 ? 0 : 1\n      return [x, y]\n    }\n    //合并第三列的数据相同行\n    if (columnIndex == 2) {\n      let x = row.threeNum == 0 ? 0 : row.threeNum\n      let y = row.threeNum == 0 ? 0 : 1\n      return [x, y]\n    }\n  }\n\n  //做行合并我们需要加标志（oneNum、twoNum、threeNum）\n  assembleData(data) {\n    //第一列\n    for (var i = 0; i < data.length; i++) {\n      //数据刚来时没有oneAlready的，所以一定会进来\n      if (data[i].oneAlready !== 1) {\n        if (data[i + 1]) {\n          //这里加上标志oneNum用于待会判定合并几行\n          data[i].oneNum = 1\n          for (var a = i + 1; a < data.length; a++) {\n            //这里的testPaperTemplate是表格第一列表头的字段\n            if (data[i].testPaperTemplate === data[a].testPaperTemplate) {\n              data[i].oneNum++\n              data[a].oneNum = 0\n              data[a].oneAlready = 1\n            } else {\n              break\n            }\n          }\n        }\n      }\n    }\n    //第二列\n    for (var j = 0; j < data.length; j++) {\n      if (data[j].oneNum > 1) {\n        //这里我们依据oneNum做了判断，意思是我们第二列对的行合并要根据第一列的来\n        for (var k = 0; k < data[j].oneNum; k++) {\n          //twoAlready一样，不会对数据产生影响，只是用来做判断的\n          if (data[j + k].twoAlready !== 1) {\n            if (k + 1 < data[j].oneNum) {\n              //这里加第二列的标志twoNum\n              data[j + k].twoNum = 1\n              for (var b = k + 1; b < data[j].oneNum; b++) {\n                //这里的total是表头第二列的字段\n                if (data[j + k].total === data[j + b].total) {\n                  data[j + k].twoNum++\n                  data[j + b].twoNum = 0\n                  data[j + b].twoAlready = 1\n                } else {\n                  break\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    //第三列与第二列完全一致\n    for (var j = 0; j < data.length; j++) {\n      if (data[j].twoNum > 1) {\n        for (var k = 0; k < data[j].twoNum; k++) {\n          if (data[j + k].threeAlready !== 1) {\n            if (k + 1 < data[j].twoNum) {\n              data[j + k].threeNum = 1\n              for (var b = k + 1; b < data[j].twoNum; b++) {\n                if (data[j + k].jk_count === data[j + b].jk_count) {\n                  data[j + k].threeNum++\n                  data[j + b].threeNum = 0\n                  data[j + b].threeAlready = 1\n                } else {\n                  break\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  mounted () {\n\n  }\n}\n<script>\n```\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果吧，效果杠杠的！！</p>\n\n![](/images/dMergeTable.jpg)\n\n\n","source":"_posts/自定义组件封装/自定义组件封装-2、iview-Table之动态合并单元格.md","raw":"---\ntitle: 二、iview-Table之动态合并单元格\ntags: 自定义封装组件\ncategories: 组件封装\ncomments: true\n---\n# 一、iview-Table之动态合并单元格\n## 1、普通合并单元格\n<p>&emsp;&emsp;我们先来看一下简单的合并单元格，也是iview官网给的示例，可以帮助我们理解。通过设置属性span-method可以指定合并行或列的算法，方法传入一个对象，对象里有四个属性,分别是:</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>row:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>column:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>rowIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>columnIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;该函数可以返回一个包含两个元素的数组，第一个元素代表rowspan,表示合并几行，第二个元素代表colspan表示合并几列。了解了用这个属性，那么怎么用呢，我们来看代码啊，并且对着代码看下效果哦！！</p>\n\n```javascript\n<template>\n    <div>\n      <Table :columns=\"columns\" :data=\"data\" :span-method=\"handleSpan\"></Table>\n    </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  //表头列\n  columns:Array<any> = [\n    {\n      title: 'Date',\n      key: 'date'\n    },\n    {\n      title: 'Name',\n      key: 'name'\n    },\n    {\n      title: 'Age',\n      key: 'age'\n    },\n    {\n      title: 'Address',\n      key: 'address'\n    },\n  ];\n  \n  data: Array<any> = [\n    {\n      name: 'John Brown',\n      age: 18,\n      address: 'New York No. 1 Lake Park',\n      date: '2016-10-03'\n    },\n    {\n      name: 'Jim Green',\n      age: 24,\n      address: 'London No. 1 Lake Park',\n      date: '2016-10-01'\n    },\n    {\n      name: 'Joe Black',\n      age: 30,\n      address: 'Sydney No. 1 Lake Park',\n      date: '2016-10-02'\n    },\n    {\n      name: 'Jon Snow',\n      age: 26,\n      address: 'Ottawa No. 2 Lake Park',\n      date: '2016-10-04'\n    }\n  ];\n\n  handleSpan({ row, column, rowIndex, columnIndex }) {\n    if (rowIndex === 0 && columnIndex === 0) {\n      //如果是第一行第一列，则返回[1,2],就是该单元格合并一行，合并两列\n      return [1, 2];\n    } else if (rowIndex === 0 && columnIndex === 1) {\n      //因为合并了第一行，第二列的单元格，所以要给这个单元格返回[0,0],就是关闭这个单元格\n      return [0, 0];\n    }\n    if (rowIndex === 2 && columnIndex === 0) {\n      //不同写法但同理，第三行第一列单元格合并两行，合并一列\n      return {\n        rowspan: 2,\n        colspan: 1\n      };\n    } else if (rowIndex === 3 && columnIndex === 0) {\n      //同理，被合并的单元格要置空\n      return {\n        rowspan: 0,\n        colspan: 0\n      };\n    }\n  }\n\n  mounted () {\n\n  }\n}\n<script>\n```\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果，效果杠杠的！！第一行的前两列合并，第一列的后两行合并。</p>\n\n![](/images/mergeTable.jpg)\n\n## 2、复杂合并单元格\n<p>&emsp;&emsp;以上的情况是非常简单的情景，但是实际情况下，我们总是要根据数据做动态合并的，而且实际情况中是不怎会合并两列的，英语列表头不一样，合并没意义。所以实际中我们总会合并一些特定行，主要就是哪些行数据相同时，我们就给他合并。注意啊，这个时候，我们对数据也是有要求的啊，就是内容相同的数据必须是相邻的行，因为跨行合并是在是没意义。那么，怎么合并呢，合并的方法还是上面那个，只不过我们要对数据做处理，记录每一行的数据相同的我们会给到标志，然后根据这个标志，来决定合并几行。。。</p>\n<p>&emsp;&emsp;这里我还要解释一个情况，就是我们再合并第一列的数据相同的行后，我们再合并第二列的行，这个时候是在第一列行合并的基础上去做的，比如在第二列中相同的数据，但是在第一列中属于不同的合并部分，那么是不让合并的。</p>\n<p style=\"color: red\">&emsp;&emsp;主要看两个函数handleSpan和assembleData，数据是请求过来的，我们拿到数据之后，调用assembleData函数，然后渲染table的时候，table会自己根据handleSpan去渲染。</p>\n\n```javascript\n<template>\n    <div>\n      <Table :columns=\"columns\" :data=\"data\" :span-method=\"handleSpan\"></Table>\n    </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n  //表头列就不写了，一样的\n  columns:Array<any> = [];\n  //数据是请求过来的，也不写了啊\n  data: Array<any> = [];\n\n  //这里我们做前三列的行合并\n  handleSpan({ row, column, rowIndex, columnIndex }) {\n    //合并第一列的数据相同行\n    if (columnIndex == 0) {\n      let x = row.oneNum == 0 ? 0 : row.oneNum\n      let y = row.oneNum == 0 ? 0 : 1\n      return [x, y]\n    }\n    //合并第二列的数据相同行\n    if (columnIndex == 1) {\n      let x = row.twoNum == 0 ? 0 : row.twoNum\n      let y = row.twoNum == 0 ? 0 : 1\n      return [x, y]\n    }\n    //合并第三列的数据相同行\n    if (columnIndex == 2) {\n      let x = row.threeNum == 0 ? 0 : row.threeNum\n      let y = row.threeNum == 0 ? 0 : 1\n      return [x, y]\n    }\n  }\n\n  //做行合并我们需要加标志（oneNum、twoNum、threeNum）\n  assembleData(data) {\n    //第一列\n    for (var i = 0; i < data.length; i++) {\n      //数据刚来时没有oneAlready的，所以一定会进来\n      if (data[i].oneAlready !== 1) {\n        if (data[i + 1]) {\n          //这里加上标志oneNum用于待会判定合并几行\n          data[i].oneNum = 1\n          for (var a = i + 1; a < data.length; a++) {\n            //这里的testPaperTemplate是表格第一列表头的字段\n            if (data[i].testPaperTemplate === data[a].testPaperTemplate) {\n              data[i].oneNum++\n              data[a].oneNum = 0\n              data[a].oneAlready = 1\n            } else {\n              break\n            }\n          }\n        }\n      }\n    }\n    //第二列\n    for (var j = 0; j < data.length; j++) {\n      if (data[j].oneNum > 1) {\n        //这里我们依据oneNum做了判断，意思是我们第二列对的行合并要根据第一列的来\n        for (var k = 0; k < data[j].oneNum; k++) {\n          //twoAlready一样，不会对数据产生影响，只是用来做判断的\n          if (data[j + k].twoAlready !== 1) {\n            if (k + 1 < data[j].oneNum) {\n              //这里加第二列的标志twoNum\n              data[j + k].twoNum = 1\n              for (var b = k + 1; b < data[j].oneNum; b++) {\n                //这里的total是表头第二列的字段\n                if (data[j + k].total === data[j + b].total) {\n                  data[j + k].twoNum++\n                  data[j + b].twoNum = 0\n                  data[j + b].twoAlready = 1\n                } else {\n                  break\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    //第三列与第二列完全一致\n    for (var j = 0; j < data.length; j++) {\n      if (data[j].twoNum > 1) {\n        for (var k = 0; k < data[j].twoNum; k++) {\n          if (data[j + k].threeAlready !== 1) {\n            if (k + 1 < data[j].twoNum) {\n              data[j + k].threeNum = 1\n              for (var b = k + 1; b < data[j].twoNum; b++) {\n                if (data[j + k].jk_count === data[j + b].jk_count) {\n                  data[j + k].threeNum++\n                  data[j + b].threeNum = 0\n                  data[j + b].threeAlready = 1\n                } else {\n                  break\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  mounted () {\n\n  }\n}\n<script>\n```\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果吧，效果杠杠的！！</p>\n\n![](/images/dMergeTable.jpg)\n\n\n","slug":"自定义组件封装/自定义组件封装-2、iview-Table之动态合并单元格","published":1,"date":"2024-11-05T14:59:24.515Z","updated":"2022-12-05T14:03:32.251Z","layout":"post","photos":[],"_id":"cm42hwwua001pssnnhoqa4gly","content":"<h1 id=\"一、iview-Table之动态合并单元格\"><a href=\"#一、iview-Table之动态合并单元格\" class=\"headerlink\" title=\"一、iview-Table之动态合并单元格\"></a>一、iview-Table之动态合并单元格</h1><h2 id=\"1、普通合并单元格\"><a href=\"#1、普通合并单元格\" class=\"headerlink\" title=\"1、普通合并单元格\"></a>1、普通合并单元格</h2><p>&emsp;&emsp;我们先来看一下简单的合并单元格，也是iview官网给的示例，可以帮助我们理解。通过设置属性span-method可以指定合并行或列的算法，方法传入一个对象，对象里有四个属性,分别是:</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>row:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>column:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>rowIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>columnIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;该函数可以返回一个包含两个元素的数组，第一个元素代表rowspan,表示合并几行，第二个元素代表colspan表示合并几列。了解了用这个属性，那么怎么用呢，我们来看代码啊，并且对着代码看下效果哦！！</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Table <span class=\"token operator\">:</span>columns<span class=\"token operator\">=</span><span class=\"token string\">\"columns\"</span> <span class=\"token operator\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"data\"</span> <span class=\"token operator\">:</span>span<span class=\"token operator\">-</span>method<span class=\"token operator\">=</span><span class=\"token string\">\"handleSpan\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Table<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//表头列</span>\n  <span class=\"token literal-property property\">columns</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Date'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'date'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Name'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'name'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Age'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'age'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Address'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'address'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'John Brown'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'New York No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-03'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Jim Green'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'London No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-01'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Joe Black'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'Sydney No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-02'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Jon Snow'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'Ottawa No. 2 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-04'</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">handleSpan</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> row<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">,</span> rowIndex<span class=\"token punctuation\">,</span> columnIndex <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//如果是第一行第一列，则返回[1,2],就是该单元格合并一行，合并两列</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//因为合并了第一行，第二列的单元格，所以要给这个单元格返回[0,0],就是关闭这个单元格</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//不同写法但同理，第三行第一列单元格合并两行，合并一列</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">rowspan</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">colspan</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">3</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//同理，被合并的单元格要置空</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">rowspan</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">colspan</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果，效果杠杠的！！第一行的前两列合并，第一列的后两行合并。</p>\n\n<p><img src=\"/images/mergeTable.jpg\"></p>\n<h2 id=\"2、复杂合并单元格\"><a href=\"#2、复杂合并单元格\" class=\"headerlink\" title=\"2、复杂合并单元格\"></a>2、复杂合并单元格</h2><p>&emsp;&emsp;以上的情况是非常简单的情景，但是实际情况下，我们总是要根据数据做动态合并的，而且实际情况中是不怎会合并两列的，英语列表头不一样，合并没意义。所以实际中我们总会合并一些特定行，主要就是哪些行数据相同时，我们就给他合并。注意啊，这个时候，我们对数据也是有要求的啊，就是内容相同的数据必须是相邻的行，因为跨行合并是在是没意义。那么，怎么合并呢，合并的方法还是上面那个，只不过我们要对数据做处理，记录每一行的数据相同的我们会给到标志，然后根据这个标志，来决定合并几行。。。</p>\n<p>&emsp;&emsp;这里我还要解释一个情况，就是我们再合并第一列的数据相同的行后，我们再合并第二列的行，这个时候是在第一列行合并的基础上去做的，比如在第二列中相同的数据，但是在第一列中属于不同的合并部分，那么是不让合并的。</p>\n<p style=\"color: red\">&emsp;&emsp;主要看两个函数handleSpan和assembleData，数据是请求过来的，我们拿到数据之后，调用assembleData函数，然后渲染table的时候，table会自己根据handleSpan去渲染。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Table <span class=\"token operator\">:</span>columns<span class=\"token operator\">=</span><span class=\"token string\">\"columns\"</span> <span class=\"token operator\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"data\"</span> <span class=\"token operator\">:</span>span<span class=\"token operator\">-</span>method<span class=\"token operator\">=</span><span class=\"token string\">\"handleSpan\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Table<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//表头列就不写了，一样的</span>\n  <span class=\"token literal-property property\">columns</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//数据是请求过来的，也不写了啊</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//这里我们做前三列的行合并</span>\n  <span class=\"token function\">handleSpan</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> row<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">,</span> rowIndex<span class=\"token punctuation\">,</span> columnIndex <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//合并第一列的数据相同行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>columnIndex <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>oneNum\n      <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//合并第二列的数据相同行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>columnIndex <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>twoNum\n      <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//合并第三列的数据相同行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>columnIndex <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>threeNum\n      <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">//做行合并我们需要加标志（oneNum、twoNum、threeNum）</span>\n  <span class=\"token function\">assembleData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//第一列</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//数据刚来时没有oneAlready的，所以一定会进来</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneAlready <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token comment\">//这里加上标志oneNum用于待会判定合并几行</span>\n          data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">//这里的testPaperTemplate是表格第一列表头的字段</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>testPaperTemplate <span class=\"token operator\">===</span> data<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>testPaperTemplate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token operator\">++</span>\n              data<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n              data<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneAlready <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">break</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//第二列</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//这里我们依据oneNum做了判断，意思是我们第二列对的行合并要根据第一列的来</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token comment\">//twoAlready一样，不会对数据产生影响，只是用来做判断的</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoAlready <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token comment\">//这里加第二列的标志twoNum</span>\n              data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n              <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> b <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token punctuation\">;</span> b<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">//这里的total是表头第二列的字段</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>total <span class=\"token operator\">===</span> data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token operator\">++</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoAlready <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                  <span class=\"token keyword\">break</span>\n                <span class=\"token punctuation\">&#125;</span>\n              <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//第三列与第二列完全一致</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeAlready <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n              <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> b <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token punctuation\">;</span> b<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>jk_count <span class=\"token operator\">===</span> data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>jk_count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeNum<span class=\"token operator\">++</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeAlready <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                  <span class=\"token keyword\">break</span>\n                <span class=\"token punctuation\">&#125;</span>\n              <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果吧，效果杠杠的！！</p>\n\n<p><img src=\"/images/dMergeTable.jpg\"></p>\n","excerpt":"","more":"<h1 id=\"一、iview-Table之动态合并单元格\"><a href=\"#一、iview-Table之动态合并单元格\" class=\"headerlink\" title=\"一、iview-Table之动态合并单元格\"></a>一、iview-Table之动态合并单元格</h1><h2 id=\"1、普通合并单元格\"><a href=\"#1、普通合并单元格\" class=\"headerlink\" title=\"1、普通合并单元格\"></a>1、普通合并单元格</h2><p>&emsp;&emsp;我们先来看一下简单的合并单元格，也是iview官网给的示例，可以帮助我们理解。通过设置属性span-method可以指定合并行或列的算法，方法传入一个对象，对象里有四个属性,分别是:</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>row:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>column:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>rowIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>columnIndex:</strong> 当前行</p>\n<p>&emsp;&emsp;该函数可以返回一个包含两个元素的数组，第一个元素代表rowspan,表示合并几行，第二个元素代表colspan表示合并几列。了解了用这个属性，那么怎么用呢，我们来看代码啊，并且对着代码看下效果哦！！</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Table <span class=\"token operator\">:</span>columns<span class=\"token operator\">=</span><span class=\"token string\">\"columns\"</span> <span class=\"token operator\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"data\"</span> <span class=\"token operator\">:</span>span<span class=\"token operator\">-</span>method<span class=\"token operator\">=</span><span class=\"token string\">\"handleSpan\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Table<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//表头列</span>\n  <span class=\"token literal-property property\">columns</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Date'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'date'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Name'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'name'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Age'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'age'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Address'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'address'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'John Brown'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'New York No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-03'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Jim Green'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'London No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-01'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Joe Black'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'Sydney No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-02'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Jon Snow'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">'Ottawa No. 2 Lake Park'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token string\">'2016-10-04'</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">handleSpan</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> row<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">,</span> rowIndex<span class=\"token punctuation\">,</span> columnIndex <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//如果是第一行第一列，则返回[1,2],就是该单元格合并一行，合并两列</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//因为合并了第一行，第二列的单元格，所以要给这个单元格返回[0,0],就是关闭这个单元格</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//不同写法但同理，第三行第一列单元格合并两行，合并一列</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">rowspan</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">colspan</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowIndex <span class=\"token operator\">===</span> <span class=\"token number\">3</span> <span class=\"token operator\">&amp;&amp;</span> columnIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//同理，被合并的单元格要置空</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">rowspan</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">colspan</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果，效果杠杠的！！第一行的前两列合并，第一列的后两行合并。</p>\n\n<p><img src=\"/images/mergeTable.jpg\"></p>\n<h2 id=\"2、复杂合并单元格\"><a href=\"#2、复杂合并单元格\" class=\"headerlink\" title=\"2、复杂合并单元格\"></a>2、复杂合并单元格</h2><p>&emsp;&emsp;以上的情况是非常简单的情景，但是实际情况下，我们总是要根据数据做动态合并的，而且实际情况中是不怎会合并两列的，英语列表头不一样，合并没意义。所以实际中我们总会合并一些特定行，主要就是哪些行数据相同时，我们就给他合并。注意啊，这个时候，我们对数据也是有要求的啊，就是内容相同的数据必须是相邻的行，因为跨行合并是在是没意义。那么，怎么合并呢，合并的方法还是上面那个，只不过我们要对数据做处理，记录每一行的数据相同的我们会给到标志，然后根据这个标志，来决定合并几行。。。</p>\n<p>&emsp;&emsp;这里我还要解释一个情况，就是我们再合并第一列的数据相同的行后，我们再合并第二列的行，这个时候是在第一列行合并的基础上去做的，比如在第二列中相同的数据，但是在第一列中属于不同的合并部分，那么是不让合并的。</p>\n<p style=\"color: red\">&emsp;&emsp;主要看两个函数handleSpan和assembleData，数据是请求过来的，我们拿到数据之后，调用assembleData函数，然后渲染table的时候，table会自己根据handleSpan去渲染。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Table <span class=\"token operator\">:</span>columns<span class=\"token operator\">=</span><span class=\"token string\">\"columns\"</span> <span class=\"token operator\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"data\"</span> <span class=\"token operator\">:</span>span<span class=\"token operator\">-</span>method<span class=\"token operator\">=</span><span class=\"token string\">\"handleSpan\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Table<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//表头列就不写了，一样的</span>\n  <span class=\"token literal-property property\">columns</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//数据是请求过来的，也不写了啊</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//这里我们做前三列的行合并</span>\n  <span class=\"token function\">handleSpan</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> row<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">,</span> rowIndex<span class=\"token punctuation\">,</span> columnIndex <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//合并第一列的数据相同行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>columnIndex <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>oneNum\n      <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//合并第二列的数据相同行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>columnIndex <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>twoNum\n      <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//合并第三列的数据相同行</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>columnIndex <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>threeNum\n      <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">//做行合并我们需要加标志（oneNum、twoNum、threeNum）</span>\n  <span class=\"token function\">assembleData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//第一列</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//数据刚来时没有oneAlready的，所以一定会进来</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneAlready <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token comment\">//这里加上标志oneNum用于待会判定合并几行</span>\n          data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">//这里的testPaperTemplate是表格第一列表头的字段</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>testPaperTemplate <span class=\"token operator\">===</span> data<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>testPaperTemplate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token operator\">++</span>\n              data<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n              data<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneAlready <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token keyword\">break</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//第二列</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//这里我们依据oneNum做了判断，意思是我们第二列对的行合并要根据第一列的来</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token comment\">//twoAlready一样，不会对数据产生影响，只是用来做判断的</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoAlready <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token comment\">//这里加第二列的标志twoNum</span>\n              data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n              <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> b <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>oneNum<span class=\"token punctuation\">;</span> b<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">//这里的total是表头第二列的字段</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>total <span class=\"token operator\">===</span> data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token operator\">++</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoAlready <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                  <span class=\"token keyword\">break</span>\n                <span class=\"token punctuation\">&#125;</span>\n              <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//第三列与第二列完全一致</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeAlready <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n              <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> b <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>twoNum<span class=\"token punctuation\">;</span> b<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>jk_count <span class=\"token operator\">===</span> data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>jk_count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeNum<span class=\"token operator\">++</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                  data<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>threeAlready <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                  <span class=\"token keyword\">break</span>\n                <span class=\"token punctuation\">&#125;</span>\n              <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n<p>&emsp;&emsp;以上就是代码，那我们来看下这个合并后的效果吧，效果杠杠的！！</p>\n\n<p><img src=\"/images/dMergeTable.jpg\"></p>\n"},{"title":"一、Execl批量导入弹窗","comments":1,"_content":"\n# 一、Execl批量导入弹窗\n## 1、自定义封装的弹窗组件\n<p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，组件基于vue2+ts+iview组件库哦</span></p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <div class=\"content\">\n      <ul>\n        <li v-for=\"(item,index) in idetiferList\" :key=\"index\">{{item}}\n          <Icon class=\"icon\" type=\"ios-close-circle\" @click=\"clearItem(index)\"/>\n        </li>\n      </ul>\n    </div>\n    <div class=\"bottom\">\n      <Input class=\"search\" type=\"text\" v-model=\"identifers\" :placeholder=\"`请输入或复制${nameMap[currentTab]}名称或标识，以空格、%、&分隔，最多输入100条`\"/>\n      <Button type=\"primary\"  @click=\"getVerifyData\">\n        <Icon type=\"ios-search\" style=\"font-size: 25px;\"/>\n        <span style=\"font-size: 16px; margin-left: 5px;\">查询</span>\n      </Button>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, Prop, Watch, Emit } from 'vue-property-decorator';\n@Component({\n  components: {\n    \n  }\n})\nexport default class PPrInfo extends Vue {\n\n  @Prop({\n    type: String,\n    default: 'st'\n  })\n  currentTab: string;\n\n  nameMap = {\n    st: '试题',\n    sj: '试卷',\n    dc: '单词',\n    klb: '课例包'\n  }\n\n  @Prop({\n    type: String,\n    default: ''\n  })\n  identifers: string;\n\n  idetiferList:Array<string> = []\n\n  lastOne:boolean = true;\n\n  public clearItem(index:number):void {\n    if(index === this.idetiferList.length - 1) {\n      this.getLastArrOne();\n    }\n    this.idetiferList.splice(index,1);\n    this.identifers = this.idetiferList.join(' ');\n  }\n\n\n  @Emit('getVerifyData')\n  public getVerifyData() {\n    return this.idetiferList;\n  }\n\n  @Watch('identifers', {\n    deep: true,\n    immediate: true\n  })\n  public WatchIdentifer(newValue:any):void {\n    let tempArr = newValue.replace(/%/g,' ').replace(/&/g,' ').split(' ');\n    let queryArr = [];\n    if(tempArr.length) {\n      queryArr = tempArr.filter(item => {\n        return item !== '';\n      })\n      if(queryArr.length) {\n        queryArr = Array.from(new Set(queryArr));\n      }\n    }\n    this.idetiferList = queryArr;\n    this.getArr();\n  }\n\n  @Emit('getLastArrOne')\n  public getLastArrOne() {\n    return false;\n  }\n\n  @Emit('getArr')\n  public getArr() {\n    return this.idetiferList;\n  }\n\n  mounted () {\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.container {\n  width: 1000px;\n  height: 270px;\n  margin: 5px 0 0 90px;\n  border-radius: 5px;\n  box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, .2);\n\n  .content>ul {\n    width: 100%;\n    height: 220px;\n    display: flex;\n    padding-top: 15px;\n    flex-wrap: wrap;\n    justify-content: left;\n    align-items: flex-start;\n    overflow: auto;\n    border-bottom: 1px solid #dcdee2;\n\n    li {\n      width: 188px;\n      height: 50px;\n      margin-left: 10px;\n      padding: 0 10px;\n      line-height: 50px;\n      background-color: #f7fcff;\n      position: relative;\n      border: 1px solid #dcdee2;\n      border-radius: 3px;\n      margin-bottom: 18px;\n      overflow: hidden;\n      text-overflow:ellipsis;\n      white-space:nowrap;\n\n      .icon {\n        font-size: 25px;\n        position: absolute;\n        top: 13px;\n        right: 8px;\n        color: #cbcfd4;\n        cursor: pointer;\n      }\n    }\n  }\n\n  .bottom {\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n    /deep/ .ivu-input {\n      border: 0px solid #dcdee2;\n      width: 880px;\n      height: 40px;\n      font-size: 15px;\n    }\n    /deep/ .ivu-btn {\n      margin-left: 362px;\n      height: 40px;\n      z-index: 100;\n    }\n  }\n}\n</style>\n```\n\n## 2、父组件调用改封装组件\n<p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，当时为了兼容一些样式问题，所以做了一些调整，可能样式会有一点点的小问题，不过很容易改的哦。。</span></p>\n<p>&emsp;&emsp;再提示一个问题，就是mounted里写了监听事件，主要是实现，点击其他空白处关闭该弹窗的功能，当然不要忘记在destoryed钩子里销毁监听事件哦，还有调用改组件时，有很多字段要传，还有一些事件函数也要传，这个就看各位小伙伴实际情况去改了哦。。</p>\n\n```javascript\n<template>\n  <div>\n    <InputModal class=\"input-fixed\" id=\"inputModal\" v-if=\"showInputModal\" :currentTab=\"label\" :identifers=\"name\" \n    @getArr=\"getInputModalArr\" @getVerifyData=\"getTableData\" @getLastArrOne=\"getLastArrOne\"></InputModal>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n    InputModal: () => import('./InputModal.vue')\n  }\n})\n\nexport default class TestCase extends Vue {\n\n  mounted () {\n    window.addEventListener('mousewheel', this.handleScroll);\n      document.addEventListener(\"click\", (e) => {\n        const inputModal = document.getElementById(\"inputModal\")\n        const inputName = document.getElementById(\"inputName\")\n        if (inputModal && inputName) {\n          if (!inputModal.contains((e as any).target) && !inputName.contains((e as any).target) && this.lastArrOne) {\n            this.showInputModal = false;\n          }\n          this.lastArrOne = true;\n        }\n    });\n  }\n\n  destroyed(): void {\n    window.removeEventListener('mousewheel', this.handleScroll);\n  }\n}\n<script>\n```\n\n## 2、父组件调用改封装组件\n<p>&emsp;&emsp;这里展示一下效果：</p>\n\n![](/images/execl.gif)\n","source":"_posts/自定义组件封装/自定义组件封装-1、execl批量导入弹窗.md","raw":"---\ntitle: 一、Execl批量导入弹窗\ntags: 自定义封装组件\ncategories: 组件封装\ncomments: true\n---\n\n# 一、Execl批量导入弹窗\n## 1、自定义封装的弹窗组件\n<p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，组件基于vue2+ts+iview组件库哦</span></p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <div class=\"content\">\n      <ul>\n        <li v-for=\"(item,index) in idetiferList\" :key=\"index\">{{item}}\n          <Icon class=\"icon\" type=\"ios-close-circle\" @click=\"clearItem(index)\"/>\n        </li>\n      </ul>\n    </div>\n    <div class=\"bottom\">\n      <Input class=\"search\" type=\"text\" v-model=\"identifers\" :placeholder=\"`请输入或复制${nameMap[currentTab]}名称或标识，以空格、%、&分隔，最多输入100条`\"/>\n      <Button type=\"primary\"  @click=\"getVerifyData\">\n        <Icon type=\"ios-search\" style=\"font-size: 25px;\"/>\n        <span style=\"font-size: 16px; margin-left: 5px;\">查询</span>\n      </Button>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component, Prop, Watch, Emit } from 'vue-property-decorator';\n@Component({\n  components: {\n    \n  }\n})\nexport default class PPrInfo extends Vue {\n\n  @Prop({\n    type: String,\n    default: 'st'\n  })\n  currentTab: string;\n\n  nameMap = {\n    st: '试题',\n    sj: '试卷',\n    dc: '单词',\n    klb: '课例包'\n  }\n\n  @Prop({\n    type: String,\n    default: ''\n  })\n  identifers: string;\n\n  idetiferList:Array<string> = []\n\n  lastOne:boolean = true;\n\n  public clearItem(index:number):void {\n    if(index === this.idetiferList.length - 1) {\n      this.getLastArrOne();\n    }\n    this.idetiferList.splice(index,1);\n    this.identifers = this.idetiferList.join(' ');\n  }\n\n\n  @Emit('getVerifyData')\n  public getVerifyData() {\n    return this.idetiferList;\n  }\n\n  @Watch('identifers', {\n    deep: true,\n    immediate: true\n  })\n  public WatchIdentifer(newValue:any):void {\n    let tempArr = newValue.replace(/%/g,' ').replace(/&/g,' ').split(' ');\n    let queryArr = [];\n    if(tempArr.length) {\n      queryArr = tempArr.filter(item => {\n        return item !== '';\n      })\n      if(queryArr.length) {\n        queryArr = Array.from(new Set(queryArr));\n      }\n    }\n    this.idetiferList = queryArr;\n    this.getArr();\n  }\n\n  @Emit('getLastArrOne')\n  public getLastArrOne() {\n    return false;\n  }\n\n  @Emit('getArr')\n  public getArr() {\n    return this.idetiferList;\n  }\n\n  mounted () {\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.container {\n  width: 1000px;\n  height: 270px;\n  margin: 5px 0 0 90px;\n  border-radius: 5px;\n  box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, .2);\n\n  .content>ul {\n    width: 100%;\n    height: 220px;\n    display: flex;\n    padding-top: 15px;\n    flex-wrap: wrap;\n    justify-content: left;\n    align-items: flex-start;\n    overflow: auto;\n    border-bottom: 1px solid #dcdee2;\n\n    li {\n      width: 188px;\n      height: 50px;\n      margin-left: 10px;\n      padding: 0 10px;\n      line-height: 50px;\n      background-color: #f7fcff;\n      position: relative;\n      border: 1px solid #dcdee2;\n      border-radius: 3px;\n      margin-bottom: 18px;\n      overflow: hidden;\n      text-overflow:ellipsis;\n      white-space:nowrap;\n\n      .icon {\n        font-size: 25px;\n        position: absolute;\n        top: 13px;\n        right: 8px;\n        color: #cbcfd4;\n        cursor: pointer;\n      }\n    }\n  }\n\n  .bottom {\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n    /deep/ .ivu-input {\n      border: 0px solid #dcdee2;\n      width: 880px;\n      height: 40px;\n      font-size: 15px;\n    }\n    /deep/ .ivu-btn {\n      margin-left: 362px;\n      height: 40px;\n      z-index: 100;\n    }\n  }\n}\n</style>\n```\n\n## 2、父组件调用改封装组件\n<p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，当时为了兼容一些样式问题，所以做了一些调整，可能样式会有一点点的小问题，不过很容易改的哦。。</span></p>\n<p>&emsp;&emsp;再提示一个问题，就是mounted里写了监听事件，主要是实现，点击其他空白处关闭该弹窗的功能，当然不要忘记在destoryed钩子里销毁监听事件哦，还有调用改组件时，有很多字段要传，还有一些事件函数也要传，这个就看各位小伙伴实际情况去改了哦。。</p>\n\n```javascript\n<template>\n  <div>\n    <InputModal class=\"input-fixed\" id=\"inputModal\" v-if=\"showInputModal\" :currentTab=\"label\" :identifers=\"name\" \n    @getArr=\"getInputModalArr\" @getVerifyData=\"getTableData\" @getLastArrOne=\"getLastArrOne\"></InputModal>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n    InputModal: () => import('./InputModal.vue')\n  }\n})\n\nexport default class TestCase extends Vue {\n\n  mounted () {\n    window.addEventListener('mousewheel', this.handleScroll);\n      document.addEventListener(\"click\", (e) => {\n        const inputModal = document.getElementById(\"inputModal\")\n        const inputName = document.getElementById(\"inputName\")\n        if (inputModal && inputName) {\n          if (!inputModal.contains((e as any).target) && !inputName.contains((e as any).target) && this.lastArrOne) {\n            this.showInputModal = false;\n          }\n          this.lastArrOne = true;\n        }\n    });\n  }\n\n  destroyed(): void {\n    window.removeEventListener('mousewheel', this.handleScroll);\n  }\n}\n<script>\n```\n\n## 2、父组件调用改封装组件\n<p>&emsp;&emsp;这里展示一下效果：</p>\n\n![](/images/execl.gif)\n","slug":"自定义组件封装/自定义组件封装-1、execl批量导入弹窗","published":1,"date":"2024-11-05T14:59:24.513Z","updated":"2022-11-26T18:04:49.185Z","layout":"post","photos":[],"_id":"cm42hwwub001sssnndvzd6has","content":"<h1 id=\"一、Execl批量导入弹窗\"><a href=\"#一、Execl批量导入弹窗\" class=\"headerlink\" title=\"一、Execl批量导入弹窗\"></a>一、Execl批量导入弹窗</h1><h2 id=\"1、自定义封装的弹窗组件\"><a href=\"#1、自定义封装的弹窗组件\" class=\"headerlink\" title=\"1、自定义封装的弹窗组件\"></a>1、自定义封装的弹窗组件</h2><p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，组件基于vue2+ts+iview组件库哦</span></p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"content\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(item,index) in idetiferList\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>item<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n          <span class=\"token operator\">&lt;</span>Icon <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"icon\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"ios-close-circle\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"clearItem(index)\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"bottom\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Input <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"search\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"identifers\"</span> <span class=\"token operator\">:</span>placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"`请输入或复制$&#123;nameMap[currentTab]&#125;名称或标识，以空格、%、&amp;分隔，最多输入100条`\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span>  @click<span class=\"token operator\">=</span><span class=\"token string\">\"getVerifyData\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Icon type<span class=\"token operator\">=</span><span class=\"token string\">\"ios-search\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"font-size: 25px;\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>span style<span class=\"token operator\">=</span><span class=\"token string\">\"font-size: 16px; margin-left: 5px;\"</span><span class=\"token operator\">></span>查询<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Prop<span class=\"token punctuation\">,</span> Watch<span class=\"token punctuation\">,</span> Emit <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    \n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PPrInfo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'st'</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">currentTab</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n\n  nameMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">st</span><span class=\"token operator\">:</span> <span class=\"token string\">'试题'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">sj</span><span class=\"token operator\">:</span> <span class=\"token string\">'试卷'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">dc</span><span class=\"token operator\">:</span> <span class=\"token string\">'单词'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">klb</span><span class=\"token operator\">:</span> <span class=\"token string\">'课例包'</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">identifers</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n\n  <span class=\"token literal-property property\">idetiferList</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token literal-property property\">lastOne</span><span class=\"token operator\">:</span>boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">clearItem</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">:</span>number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLastArrOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>identifers <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n\n  @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getVerifyData'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getVerifyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  @<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'identifers'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">WatchIdentifer</span><span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span>any<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> tempArr <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">%</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> queryArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tempArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      queryArr <span class=\"token operator\">=</span> tempArr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> item <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>queryArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        queryArr <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span>queryArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList <span class=\"token operator\">=</span> queryArr<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getLastArrOne'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getLastArrOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getArr'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style lang<span class=\"token operator\">=</span><span class=\"token string\">\"less\"</span> scoped<span class=\"token operator\">></span>\n<span class=\"token punctuation\">.</span>container <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 1000px<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 270px<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">margin</span><span class=\"token operator\">:</span> 5px <span class=\"token number\">0</span> <span class=\"token number\">0</span> 90px<span class=\"token punctuation\">;</span>\n  border<span class=\"token operator\">-</span>radius<span class=\"token operator\">:</span> 5px<span class=\"token punctuation\">;</span>\n  box<span class=\"token operator\">-</span>shadow<span class=\"token operator\">:</span> 0px 0px 7px 0px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">.</span>content<span class=\"token operator\">></span>ul <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 220px<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span>\n    padding<span class=\"token operator\">-</span>top<span class=\"token operator\">:</span> 15px<span class=\"token punctuation\">;</span>\n    flex<span class=\"token operator\">-</span>wrap<span class=\"token operator\">:</span> wrap<span class=\"token punctuation\">;</span>\n    justify<span class=\"token operator\">-</span>content<span class=\"token operator\">:</span> left<span class=\"token punctuation\">;</span>\n    align<span class=\"token operator\">-</span>items<span class=\"token operator\">:</span> flex<span class=\"token operator\">-</span>start<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">overflow</span><span class=\"token operator\">:</span> auto<span class=\"token punctuation\">;</span>\n    border<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 1px solid #dcdee2<span class=\"token punctuation\">;</span>\n\n    li <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 188px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 50px<span class=\"token punctuation\">;</span>\n      margin<span class=\"token operator\">-</span>left<span class=\"token operator\">:</span> 10px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> 10px<span class=\"token punctuation\">;</span>\n      line<span class=\"token operator\">-</span>height<span class=\"token operator\">:</span> 50px<span class=\"token punctuation\">;</span>\n      background<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span> #f7fcff<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> relative<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> 1px solid #dcdee2<span class=\"token punctuation\">;</span>\n      border<span class=\"token operator\">-</span>radius<span class=\"token operator\">:</span> 3px<span class=\"token punctuation\">;</span>\n      margin<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 18px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">overflow</span><span class=\"token operator\">:</span> hidden<span class=\"token punctuation\">;</span>\n      text<span class=\"token operator\">-</span>overflow<span class=\"token operator\">:</span>ellipsis<span class=\"token punctuation\">;</span>\n      white<span class=\"token operator\">-</span>space<span class=\"token operator\">:</span>nowrap<span class=\"token punctuation\">;</span>\n\n      <span class=\"token punctuation\">.</span>icon <span class=\"token punctuation\">&#123;</span>\n        font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 25px<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> absolute<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> 13px<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">right</span><span class=\"token operator\">:</span> 8px<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> #cbcfd4<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">cursor</span><span class=\"token operator\">:</span> pointer<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token punctuation\">.</span>bottom <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 50px<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span>\n    align<span class=\"token operator\">-</span>items<span class=\"token operator\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> 10px<span class=\"token punctuation\">;</span>\n    <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">deep</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">.</span>ivu<span class=\"token operator\">-</span>input <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> 0px solid #dcdee2<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 880px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 40px<span class=\"token punctuation\">;</span>\n      font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 15px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">deep</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">.</span>ivu<span class=\"token operator\">-</span>btn <span class=\"token punctuation\">&#123;</span>\n      margin<span class=\"token operator\">-</span>left<span class=\"token operator\">:</span> 362px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 40px<span class=\"token punctuation\">;</span>\n      z<span class=\"token operator\">-</span>index<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre>\n\n<h2 id=\"2、父组件调用改封装组件\"><a href=\"#2、父组件调用改封装组件\" class=\"headerlink\" title=\"2、父组件调用改封装组件\"></a>2、父组件调用改封装组件</h2><p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，当时为了兼容一些样式问题，所以做了一些调整，可能样式会有一点点的小问题，不过很容易改的哦。。</span></p>\n<p>&emsp;&emsp;再提示一个问题，就是mounted里写了监听事件，主要是实现，点击其他空白处关闭该弹窗的功能，当然不要忘记在destoryed钩子里销毁监听事件哦，还有调用改组件时，有很多字段要传，还有一些事件函数也要传，这个就看各位小伙伴实际情况去改了哦。。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>InputModal <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"input-fixed\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"inputModal\"</span> v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"showInputModal\"</span> <span class=\"token operator\">:</span>currentTab<span class=\"token operator\">=</span><span class=\"token string\">\"label\"</span> <span class=\"token operator\">:</span>identifers<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> \n    @getArr<span class=\"token operator\">=</span><span class=\"token string\">\"getInputModalArr\"</span> @getVerifyData<span class=\"token operator\">=</span><span class=\"token string\">\"getTableData\"</span> @getLastArrOne<span class=\"token operator\">=</span><span class=\"token string\">\"getLastArrOne\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>InputModal<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">InputModal</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./InputModal.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousewheel'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> inputModal <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inputModal\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> inputName <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inputName\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>inputModal <span class=\"token operator\">&amp;&amp;</span> inputName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>inputModal<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>inputName<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastArrOne<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>showInputModal <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastArrOne <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">destroyed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousewheel'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h2 id=\"2、父组件调用改封装组件-1\"><a href=\"#2、父组件调用改封装组件-1\" class=\"headerlink\" title=\"2、父组件调用改封装组件\"></a>2、父组件调用改封装组件</h2><p>&emsp;&emsp;这里展示一下效果：</p>\n\n<p><img src=\"/images/execl.gif\"></p>\n","excerpt":"","more":"<h1 id=\"一、Execl批量导入弹窗\"><a href=\"#一、Execl批量导入弹窗\" class=\"headerlink\" title=\"一、Execl批量导入弹窗\"></a>一、Execl批量导入弹窗</h1><h2 id=\"1、自定义封装的弹窗组件\"><a href=\"#1、自定义封装的弹窗组件\" class=\"headerlink\" title=\"1、自定义封装的弹窗组件\"></a>1、自定义封装的弹窗组件</h2><p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，组件基于vue2+ts+iview组件库哦</span></p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"content\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(item,index) in idetiferList\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>item<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n          <span class=\"token operator\">&lt;</span>Icon <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"icon\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"ios-close-circle\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"clearItem(index)\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"bottom\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Input <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"search\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"identifers\"</span> <span class=\"token operator\">:</span>placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"`请输入或复制$&#123;nameMap[currentTab]&#125;名称或标识，以空格、%、&amp;分隔，最多输入100条`\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span>  @click<span class=\"token operator\">=</span><span class=\"token string\">\"getVerifyData\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Icon type<span class=\"token operator\">=</span><span class=\"token string\">\"ios-search\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"font-size: 25px;\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>span style<span class=\"token operator\">=</span><span class=\"token string\">\"font-size: 16px; margin-left: 5px;\"</span><span class=\"token operator\">></span>查询<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> Prop<span class=\"token punctuation\">,</span> Watch<span class=\"token punctuation\">,</span> Emit <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    \n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PPrInfo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'st'</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">currentTab</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n\n  nameMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">st</span><span class=\"token operator\">:</span> <span class=\"token string\">'试题'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">sj</span><span class=\"token operator\">:</span> <span class=\"token string\">'试卷'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">dc</span><span class=\"token operator\">:</span> <span class=\"token string\">'单词'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">klb</span><span class=\"token operator\">:</span> <span class=\"token string\">'课例包'</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token literal-property property\">identifers</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n\n  <span class=\"token literal-property property\">idetiferList</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token literal-property property\">lastOne</span><span class=\"token operator\">:</span>boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">clearItem</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">:</span>number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLastArrOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>identifers <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n\n  @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getVerifyData'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getVerifyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  @<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'identifers'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">WatchIdentifer</span><span class=\"token punctuation\">(</span>newValue<span class=\"token operator\">:</span>any<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> tempArr <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">%</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> queryArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tempArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      queryArr <span class=\"token operator\">=</span> tempArr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> item <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>queryArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        queryArr <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span>queryArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList <span class=\"token operator\">=</span> queryArr<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getLastArrOne'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getLastArrOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  @<span class=\"token function\">Emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getArr'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idetiferList<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style lang<span class=\"token operator\">=</span><span class=\"token string\">\"less\"</span> scoped<span class=\"token operator\">></span>\n<span class=\"token punctuation\">.</span>container <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 1000px<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 270px<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">margin</span><span class=\"token operator\">:</span> 5px <span class=\"token number\">0</span> <span class=\"token number\">0</span> 90px<span class=\"token punctuation\">;</span>\n  border<span class=\"token operator\">-</span>radius<span class=\"token operator\">:</span> 5px<span class=\"token punctuation\">;</span>\n  box<span class=\"token operator\">-</span>shadow<span class=\"token operator\">:</span> 0px 0px 7px 0px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">.</span>content<span class=\"token operator\">></span>ul <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 220px<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span>\n    padding<span class=\"token operator\">-</span>top<span class=\"token operator\">:</span> 15px<span class=\"token punctuation\">;</span>\n    flex<span class=\"token operator\">-</span>wrap<span class=\"token operator\">:</span> wrap<span class=\"token punctuation\">;</span>\n    justify<span class=\"token operator\">-</span>content<span class=\"token operator\">:</span> left<span class=\"token punctuation\">;</span>\n    align<span class=\"token operator\">-</span>items<span class=\"token operator\">:</span> flex<span class=\"token operator\">-</span>start<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">overflow</span><span class=\"token operator\">:</span> auto<span class=\"token punctuation\">;</span>\n    border<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 1px solid #dcdee2<span class=\"token punctuation\">;</span>\n\n    li <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 188px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 50px<span class=\"token punctuation\">;</span>\n      margin<span class=\"token operator\">-</span>left<span class=\"token operator\">:</span> 10px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> 10px<span class=\"token punctuation\">;</span>\n      line<span class=\"token operator\">-</span>height<span class=\"token operator\">:</span> 50px<span class=\"token punctuation\">;</span>\n      background<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span> #f7fcff<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> relative<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> 1px solid #dcdee2<span class=\"token punctuation\">;</span>\n      border<span class=\"token operator\">-</span>radius<span class=\"token operator\">:</span> 3px<span class=\"token punctuation\">;</span>\n      margin<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 18px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">overflow</span><span class=\"token operator\">:</span> hidden<span class=\"token punctuation\">;</span>\n      text<span class=\"token operator\">-</span>overflow<span class=\"token operator\">:</span>ellipsis<span class=\"token punctuation\">;</span>\n      white<span class=\"token operator\">-</span>space<span class=\"token operator\">:</span>nowrap<span class=\"token punctuation\">;</span>\n\n      <span class=\"token punctuation\">.</span>icon <span class=\"token punctuation\">&#123;</span>\n        font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 25px<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> absolute<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> 13px<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">right</span><span class=\"token operator\">:</span> 8px<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> #cbcfd4<span class=\"token punctuation\">;</span>\n        <span class=\"token literal-property property\">cursor</span><span class=\"token operator\">:</span> pointer<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token punctuation\">.</span>bottom <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 50px<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span>\n    align<span class=\"token operator\">-</span>items<span class=\"token operator\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> 10px<span class=\"token punctuation\">;</span>\n    <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">deep</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">.</span>ivu<span class=\"token operator\">-</span>input <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> 0px solid #dcdee2<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> 880px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 40px<span class=\"token punctuation\">;</span>\n      font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 15px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">deep</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">.</span>ivu<span class=\"token operator\">-</span>btn <span class=\"token punctuation\">&#123;</span>\n      margin<span class=\"token operator\">-</span>left<span class=\"token operator\">:</span> 362px<span class=\"token punctuation\">;</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 40px<span class=\"token punctuation\">;</span>\n      z<span class=\"token operator\">-</span>index<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre>\n\n<h2 id=\"2、父组件调用改封装组件\"><a href=\"#2、父组件调用改封装组件\" class=\"headerlink\" title=\"2、父组件调用改封装组件\"></a>2、父组件调用改封装组件</h2><p>&emsp;&emsp;啥也不说了，拿来就用，看代码</p>\n<p>&emsp;&emsp;<span style=\"color: red\">温馨提示哦，当时为了兼容一些样式问题，所以做了一些调整，可能样式会有一点点的小问题，不过很容易改的哦。。</span></p>\n<p>&emsp;&emsp;再提示一个问题，就是mounted里写了监听事件，主要是实现，点击其他空白处关闭该弹窗的功能，当然不要忘记在destoryed钩子里销毁监听事件哦，还有调用改组件时，有很多字段要传，还有一些事件函数也要传，这个就看各位小伙伴实际情况去改了哦。。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>InputModal <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"input-fixed\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"inputModal\"</span> v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"showInputModal\"</span> <span class=\"token operator\">:</span>currentTab<span class=\"token operator\">=</span><span class=\"token string\">\"label\"</span> <span class=\"token operator\">:</span>identifers<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> \n    @getArr<span class=\"token operator\">=</span><span class=\"token string\">\"getInputModalArr\"</span> @getVerifyData<span class=\"token operator\">=</span><span class=\"token string\">\"getTableData\"</span> @getLastArrOne<span class=\"token operator\">=</span><span class=\"token string\">\"getLastArrOne\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>InputModal<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">InputModal</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./InputModal.vue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousewheel'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> inputModal <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inputModal\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> inputName <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inputName\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>inputModal <span class=\"token operator\">&amp;&amp;</span> inputName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>inputModal<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>inputName<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastArrOne<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>showInputModal <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastArrOne <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">destroyed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousewheel'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h2 id=\"2、父组件调用改封装组件-1\"><a href=\"#2、父组件调用改封装组件-1\" class=\"headerlink\" title=\"2、父组件调用改封装组件\"></a>2、父组件调用改封装组件</h2><p>&emsp;&emsp;这里展示一下效果：</p>\n\n<p><img src=\"/images/execl.gif\"></p>\n"},{"title":"一、好用工具汇总-1","comments":1,"_content":"\n# 一、好用工具\n\n<p>&emsp;&emsp;经常看到一些好用的工具，但是总是没有好好收藏，结果再想用的时候就忘了。这里做一下汇总，并且以后遇到好用的东西就持续更新，加油，坚持，要变得更棒哦！</p>\n\n<p><strong>1、PDF在线文档合并</strong></p>\n\n[PDF在线文档合并](https://www.ilovepdf.com/)\n\n<p><strong>2、音频切割，格式转换工具</strong></p>\n\n[格式工厂](http://down.pcgeshi.com/FormatFactory_setup.exe)\n\n<p><strong>3、图片在线压缩</strong></p>\n\n[图片压缩工具](https://docsmall.com/)\n\n[图片压缩工具](https://tinypng.com/)\n\n<p><strong>4、截图、窗口置顶工具</strong></p>\n<p>Snipaste是一个很好用的截图工具，deskpins是一个很好的屏幕置顶工具，两个都没有链接，有要的小伙伴我可以发你，后面给上传到我的gitHub再附链接吧</p>\n\n<p><strong>5、桌面管理工具</strong></p>\n\n[桌面管理工具](https://guanjia.qq.com/product/zmzl/)\n\n<p><strong>6、录屏工具</strong></p>\n\n[全能录屏助手](https://static.miaoji66.com/package/all_can_rec_9.3.3_bdtg1.exe)\n\n<p><strong>7、在线画图工具</strong></p>\n\n[在线画图工具ProcessOn](https://www.processon.com)\n\n[在线画图工具draw.io](https://app.diagrams.net)\n\n[在线思维导图工具](http://www.mindline.cn/webapp)\n\n\n<p><strong>7、在线编码工具</strong></p>\n\n[BASE64编解码工具](https://base64.supfree.net)\n\n[MD5编码工具](https://www.zxgj.cn/g/md5)\n\n[AES/DES加解密](http://www.fly63.com/tool/cipher)\n\n[JWT解码工具](http://jwt.calebb.net)\n\n[ASCII编解码工具](https://www.matools.com/code-convert-ascii)\n\n[Unicode编解码工具](https://www.zxgj.cn/g/unicode)\n\n[UTF-8编解码工具](https://www.zxgj.cn/g/utf8)\n\n[字符串编解码工具](https://www.zxgj.cn/g/enstring)\n\n[URL编解码工具](http://tool.chinaz.com/tools/urlencode.aspx?jdfwkey=lbixz1)\n\n<p><strong>8、在线转换工具</strong></p>\n\n[在线ASCII码对照表](http://www.fly63.com/tool/ascii)\n\n[通用进制转换工具](https://www.zxgj.cn/g/jinzhi)\n\n[在线浮点数十进制转换](http://www.binaryconvert.com)\n\n[RGB颜色转换](https://www.zxgj.cn/g/yansezhi)\n\n[时间戳转换工具](https://www.zxgj.cn/g/unix)\n\n[计量单位换算工具](http://www.fly63.com/tool/unitable)\n\n[在线JSON解析](http://www.json.cn)\n\n[在线JS代码格式化工具](https://prettier.io/playground)\n\n[SQL压缩/格式化工具](https://www.zxgj.cn/g/sqlformat)\n\n[JSON和XML在线转换](https://www.zxgj.cn/g/jsonxml)\n\n[JSON/YAML](http://www.fly63.com/tool/jsonyaml)\n\n[人民币大小写转换工具](http://www.fly63.com/tool/renmingbi)\n\n<p><strong>9、正则表达式工具</strong></p>\n\n[正则表达式调试工具](https://regexr.com)\n\n[正则表达式可视化工具](https://jex.im/regulex)\n\n<p><strong>10、网络工具</strong></p>\n\n[IP地址归属地查询](https://www.ip138.com)\n\n[IP地址查询](https://www.ipip.net/ip.html)\n\n[HTTP在线接口测试工具](http://www.fly63.com/php/http)\n\n<p><strong>11、在线编译运行工具</strong></p>\n\n[C#在线编译运行](https://rextester.com)\n\n[C/C++在线编译调试](https://www.onlinegdb.com)\n\n[在线编译工具套装](https://c.runoob.com)\n\n<p><strong>12、可视化/格式化工具</strong></p>\n\n[在线前端编辑器](https://codepen.io)\n\n[在线数据可视化](https://flourish.studio)\n\n[在线CSS代码可视化工具](https://enjoycss.com)\n\n[XML格式化工具](https://www.zxgj.cn/g/xmlformat)\n\n<p><strong>13、在线生成器</strong></p>\n\n[UUID在线生成器](https://www.zxgj.cn/g/uuid)\n\n[随机数生成器](https://www.zxgj.cn/g/suijishu)\n\n<p><strong>14、其他常用工具</strong></p>\n\n[在线Nginx配置工具](https://nginxconfig.io)\n\n[在线对比工具](http://www.fly63.com/tool/textdiff)\n\n[在线Chrome浏览器插件](https://www.crx4chrome.com)\n\n[在线接口文档管理工具](http://www.docway.net)\n\n<p><strong>15、在线素材工具</strong></p>\n\n[免费透明背景图片素材](http://pngimg.com)\n\n[Emoji表情搜索](https://emoji.svend.cc)\n\n[Emoji表情包下载](https://emojiisland.com)\n\n[open source icons](https://feathericons.com)\n\n[阿里巴巴矢量图标库](https://www.iconfont.cn)\n\n[表情包在线网站](https://fabiaoqing.com)\n\n[免费PNG图片库](https://pluspng.com)\n\n[ICON图标在线下载](https://www.iconfinder.com)\n\n[极简壁纸](https://bz.zzzmh.cn)\n\n[Wallpaper Abyss壁纸](https://wall.alphacoders.com)\n\n[Pixabay图片素材库](https://pixabay.com/zh)\n\n[Unsplash图片素材库](https://unsplash.com)\n\n[Pexels图片素材库](http://www.pexels.com)\n\n[NASA图片视频素材库](https://images.nasa.gov)\n\n<p><strong>16、设计制作类工具</strong></p>\n\n[在线PS](https://www.uupoop.com)\n\n[在线音频剪辑](https://www.weixinsyt.com)\n\n[在线视频剪辑](https://www.kapwing.com)\n\n[免费logo在线制作](http://www.uugai.com)\n\n[艺术字体在线生成](https://www.qt86.com)\n\n[在线表格转换工具](https://tableconvert.com)\n\n[在线海报设计工具](https://www.designcap.com)\n\n[图片智能放大工具](https://bigjpg.com)\n\n[二维码美化器](https://mh.cli.im)\n\n[在线代码截图工具](https://carbon.now.sh)\n\n[在线抠图工具](https://www.remove.bg/zh)\n\n[ICO图标在线生成](http://www.fly63.com/php/ico)\n\n[SVG转PNG工具](http://www.fly63.com/tool/svg2img)\n\n[视频转GIF工具](http://www.fly63.com/tool/giftxt)\n\n[二维码在线生成器](http://www.fly63.com/tool/ewm)\n\n[二维码在线解码](http://www.fly63.com/php/decoder)\n\n<p><strong>17、写作辅助工具</strong></p>\n\n[在线字数统计](https://www.eteste.com)\n\n[mdnice markdown排版工具](https://mdnice.com)\n\n[md2all markdown排版工具](http://md.aclickall.com)\n\n[在线图床神器](https://picx.xpoet.cn)\n\n[在线免费图床](https://sm.ms)\n\n[图壳图床](https://imgkr.com)\n\n[在线代码截图工具](https://carbon.now.sh)\n\n[在线短链接工具](https://urlify.cn)\n\n[在线文本替换](http://www.fly63.com/tool/textreplace)\n\n<p><strong>18、在线办公工具</strong></p>\n\n[pdf在线处理工具1](https://smallpdf.com/cn/pdf-tools)\n\n[pdf在线处理工具2](https://tools.pdf24.org/zh)\n\n[pdf转word在线工具](https://www.pdftoword.com)\n\n[在线多媒体转换器合集](https://cn.office-converter.com)\n\n[在线文字识别工具](https://ocr.wdku.net)\n\n[在线文件压缩工具](https://docsmall.com)\n\n<p><strong>19、文档笔记工具</strong></p>\n\n[印象笔记](https://www.yinxiang.com)\n\n[有道笔记](https://note.youdao.com)\n\n[OneNote](https://www.onenote.com)\n\n[幕布](https://mubu.com)\n\n[为知笔记](https://www.wiz.cn)\n\n[石墨文档](https://shimo.im)\n\n[Simplenote](https://simplenote.com)\n\n[语雀](https://www.yuque.com)\n\n<p><strong>20、编程学习网</strong></p>\n\n[哔哩哔哩](https://www.bilibili.com)\n\n[C语言网](https://www.dotcpp.com)\n\n[cppreference](http://zh.cppreference.com)\n\n[中国大学MOOC](https://www.icourse163.org)\n\n[牛客网](www.nowcoder.com)\n\n[网易公开课](open.163.com)\n\n[CodeGym](https://codegym.cc)\n\n[BeginnersBook](https://beginnersbook.com)\n\n[JavaSED](http://www.javased.com)\n\n[codecademy](https://www.codecademy.com)\n\n[Coursera](https://www.coursera.org)\n\n[StackOverFlow](https://stackoverflow.com)\n\n[LeetCode](https://leetcode-cn.com)\n\n[LintCode](https://www.lintcode.com)\n\n<p><strong>21、在线教程和文档</strong></p>\n\n[Git中文教程](https://git-scm.com/book/zh/v2)\n\n[SVN中文手册](http://svnbook.red-bean.com/nightly/zh/index.html)\n\n[jQuery API中文文档](https://jquery.cuishifeng.cn)\n\n[Nginx中文文档](https://www.nginx.cn/doc/index.html)\n\n[Kafka中文文档](https://kafka.apachecn.org)\n\n[Mybatis中文文档](https://mybatis.org/mybatis-3/zh/index.html)\n\n[微信小程序官方文档](https://developers.weixin.qq.com/miniprogram/dev/framework)\n\n[Nodejs中文教程文档](http://nodejs.cn/learn)\n\n[Apache Web Server文档](http://httpd.apache.org/docs)\n\n[Spring文档中文版](https://www.springcloud.cc/spring-reference.html)\n\n[Golang标准库文档中文版](https://studygolang.com/pkgdoc)\n\n[Java 8官方文档](https://docs.oracle.com/javase/8/docs/api/index.html)\n\n[Maven官方文档](http://maven.apache.org/guides)\n\n[Tomcat 8官方文档](http://tomcat.apache.org/tomcat-8.0-doc/index.html)\n\n[Spring Boot官方文档](https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle)\n\n[RabbitMQ官方文档](https://www.rabbitmq.com/documentation.html)\n\n[RocketMQ官方文档](http://rocketmq.apache.org/docs/quick-start)\n\n[Dubbo中文文档](https://dubbo.apache.org/zh/docs)\n\n[Netty官方文档](https://netty.io/wiki/index.html)\n\n[Elasticsearch官方文档](https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html)\n\n[Spring Cloud官方文档](https://spring.io/projects/spring-cloud)\n\n[Docker官方文档](https://docs.docker.com/get-started)\n\n[kubernetes中文文档](https://kubernetes.io/zh/docs/home)\n\n[thymeleaf官方文档](https://www.thymeleaf.org/documentation.html)\n\n[Vue.js中文文档](https://cn.vuejs.org/v2/guide)\n\n[React.js官方文档](https://reactjs.org/docs/getting-started.html)\n\n[Jenkins中文文档](https://www.jenkins.io/zh/doc)","source":"_posts/实用工具/好用工具大汇总-1.md","raw":"---\ntitle: 一、好用工具汇总-1\ntags: 机智的我\ncategories: 热爱我的工作\ncomments: true\n---\n\n# 一、好用工具\n\n<p>&emsp;&emsp;经常看到一些好用的工具，但是总是没有好好收藏，结果再想用的时候就忘了。这里做一下汇总，并且以后遇到好用的东西就持续更新，加油，坚持，要变得更棒哦！</p>\n\n<p><strong>1、PDF在线文档合并</strong></p>\n\n[PDF在线文档合并](https://www.ilovepdf.com/)\n\n<p><strong>2、音频切割，格式转换工具</strong></p>\n\n[格式工厂](http://down.pcgeshi.com/FormatFactory_setup.exe)\n\n<p><strong>3、图片在线压缩</strong></p>\n\n[图片压缩工具](https://docsmall.com/)\n\n[图片压缩工具](https://tinypng.com/)\n\n<p><strong>4、截图、窗口置顶工具</strong></p>\n<p>Snipaste是一个很好用的截图工具，deskpins是一个很好的屏幕置顶工具，两个都没有链接，有要的小伙伴我可以发你，后面给上传到我的gitHub再附链接吧</p>\n\n<p><strong>5、桌面管理工具</strong></p>\n\n[桌面管理工具](https://guanjia.qq.com/product/zmzl/)\n\n<p><strong>6、录屏工具</strong></p>\n\n[全能录屏助手](https://static.miaoji66.com/package/all_can_rec_9.3.3_bdtg1.exe)\n\n<p><strong>7、在线画图工具</strong></p>\n\n[在线画图工具ProcessOn](https://www.processon.com)\n\n[在线画图工具draw.io](https://app.diagrams.net)\n\n[在线思维导图工具](http://www.mindline.cn/webapp)\n\n\n<p><strong>7、在线编码工具</strong></p>\n\n[BASE64编解码工具](https://base64.supfree.net)\n\n[MD5编码工具](https://www.zxgj.cn/g/md5)\n\n[AES/DES加解密](http://www.fly63.com/tool/cipher)\n\n[JWT解码工具](http://jwt.calebb.net)\n\n[ASCII编解码工具](https://www.matools.com/code-convert-ascii)\n\n[Unicode编解码工具](https://www.zxgj.cn/g/unicode)\n\n[UTF-8编解码工具](https://www.zxgj.cn/g/utf8)\n\n[字符串编解码工具](https://www.zxgj.cn/g/enstring)\n\n[URL编解码工具](http://tool.chinaz.com/tools/urlencode.aspx?jdfwkey=lbixz1)\n\n<p><strong>8、在线转换工具</strong></p>\n\n[在线ASCII码对照表](http://www.fly63.com/tool/ascii)\n\n[通用进制转换工具](https://www.zxgj.cn/g/jinzhi)\n\n[在线浮点数十进制转换](http://www.binaryconvert.com)\n\n[RGB颜色转换](https://www.zxgj.cn/g/yansezhi)\n\n[时间戳转换工具](https://www.zxgj.cn/g/unix)\n\n[计量单位换算工具](http://www.fly63.com/tool/unitable)\n\n[在线JSON解析](http://www.json.cn)\n\n[在线JS代码格式化工具](https://prettier.io/playground)\n\n[SQL压缩/格式化工具](https://www.zxgj.cn/g/sqlformat)\n\n[JSON和XML在线转换](https://www.zxgj.cn/g/jsonxml)\n\n[JSON/YAML](http://www.fly63.com/tool/jsonyaml)\n\n[人民币大小写转换工具](http://www.fly63.com/tool/renmingbi)\n\n<p><strong>9、正则表达式工具</strong></p>\n\n[正则表达式调试工具](https://regexr.com)\n\n[正则表达式可视化工具](https://jex.im/regulex)\n\n<p><strong>10、网络工具</strong></p>\n\n[IP地址归属地查询](https://www.ip138.com)\n\n[IP地址查询](https://www.ipip.net/ip.html)\n\n[HTTP在线接口测试工具](http://www.fly63.com/php/http)\n\n<p><strong>11、在线编译运行工具</strong></p>\n\n[C#在线编译运行](https://rextester.com)\n\n[C/C++在线编译调试](https://www.onlinegdb.com)\n\n[在线编译工具套装](https://c.runoob.com)\n\n<p><strong>12、可视化/格式化工具</strong></p>\n\n[在线前端编辑器](https://codepen.io)\n\n[在线数据可视化](https://flourish.studio)\n\n[在线CSS代码可视化工具](https://enjoycss.com)\n\n[XML格式化工具](https://www.zxgj.cn/g/xmlformat)\n\n<p><strong>13、在线生成器</strong></p>\n\n[UUID在线生成器](https://www.zxgj.cn/g/uuid)\n\n[随机数生成器](https://www.zxgj.cn/g/suijishu)\n\n<p><strong>14、其他常用工具</strong></p>\n\n[在线Nginx配置工具](https://nginxconfig.io)\n\n[在线对比工具](http://www.fly63.com/tool/textdiff)\n\n[在线Chrome浏览器插件](https://www.crx4chrome.com)\n\n[在线接口文档管理工具](http://www.docway.net)\n\n<p><strong>15、在线素材工具</strong></p>\n\n[免费透明背景图片素材](http://pngimg.com)\n\n[Emoji表情搜索](https://emoji.svend.cc)\n\n[Emoji表情包下载](https://emojiisland.com)\n\n[open source icons](https://feathericons.com)\n\n[阿里巴巴矢量图标库](https://www.iconfont.cn)\n\n[表情包在线网站](https://fabiaoqing.com)\n\n[免费PNG图片库](https://pluspng.com)\n\n[ICON图标在线下载](https://www.iconfinder.com)\n\n[极简壁纸](https://bz.zzzmh.cn)\n\n[Wallpaper Abyss壁纸](https://wall.alphacoders.com)\n\n[Pixabay图片素材库](https://pixabay.com/zh)\n\n[Unsplash图片素材库](https://unsplash.com)\n\n[Pexels图片素材库](http://www.pexels.com)\n\n[NASA图片视频素材库](https://images.nasa.gov)\n\n<p><strong>16、设计制作类工具</strong></p>\n\n[在线PS](https://www.uupoop.com)\n\n[在线音频剪辑](https://www.weixinsyt.com)\n\n[在线视频剪辑](https://www.kapwing.com)\n\n[免费logo在线制作](http://www.uugai.com)\n\n[艺术字体在线生成](https://www.qt86.com)\n\n[在线表格转换工具](https://tableconvert.com)\n\n[在线海报设计工具](https://www.designcap.com)\n\n[图片智能放大工具](https://bigjpg.com)\n\n[二维码美化器](https://mh.cli.im)\n\n[在线代码截图工具](https://carbon.now.sh)\n\n[在线抠图工具](https://www.remove.bg/zh)\n\n[ICO图标在线生成](http://www.fly63.com/php/ico)\n\n[SVG转PNG工具](http://www.fly63.com/tool/svg2img)\n\n[视频转GIF工具](http://www.fly63.com/tool/giftxt)\n\n[二维码在线生成器](http://www.fly63.com/tool/ewm)\n\n[二维码在线解码](http://www.fly63.com/php/decoder)\n\n<p><strong>17、写作辅助工具</strong></p>\n\n[在线字数统计](https://www.eteste.com)\n\n[mdnice markdown排版工具](https://mdnice.com)\n\n[md2all markdown排版工具](http://md.aclickall.com)\n\n[在线图床神器](https://picx.xpoet.cn)\n\n[在线免费图床](https://sm.ms)\n\n[图壳图床](https://imgkr.com)\n\n[在线代码截图工具](https://carbon.now.sh)\n\n[在线短链接工具](https://urlify.cn)\n\n[在线文本替换](http://www.fly63.com/tool/textreplace)\n\n<p><strong>18、在线办公工具</strong></p>\n\n[pdf在线处理工具1](https://smallpdf.com/cn/pdf-tools)\n\n[pdf在线处理工具2](https://tools.pdf24.org/zh)\n\n[pdf转word在线工具](https://www.pdftoword.com)\n\n[在线多媒体转换器合集](https://cn.office-converter.com)\n\n[在线文字识别工具](https://ocr.wdku.net)\n\n[在线文件压缩工具](https://docsmall.com)\n\n<p><strong>19、文档笔记工具</strong></p>\n\n[印象笔记](https://www.yinxiang.com)\n\n[有道笔记](https://note.youdao.com)\n\n[OneNote](https://www.onenote.com)\n\n[幕布](https://mubu.com)\n\n[为知笔记](https://www.wiz.cn)\n\n[石墨文档](https://shimo.im)\n\n[Simplenote](https://simplenote.com)\n\n[语雀](https://www.yuque.com)\n\n<p><strong>20、编程学习网</strong></p>\n\n[哔哩哔哩](https://www.bilibili.com)\n\n[C语言网](https://www.dotcpp.com)\n\n[cppreference](http://zh.cppreference.com)\n\n[中国大学MOOC](https://www.icourse163.org)\n\n[牛客网](www.nowcoder.com)\n\n[网易公开课](open.163.com)\n\n[CodeGym](https://codegym.cc)\n\n[BeginnersBook](https://beginnersbook.com)\n\n[JavaSED](http://www.javased.com)\n\n[codecademy](https://www.codecademy.com)\n\n[Coursera](https://www.coursera.org)\n\n[StackOverFlow](https://stackoverflow.com)\n\n[LeetCode](https://leetcode-cn.com)\n\n[LintCode](https://www.lintcode.com)\n\n<p><strong>21、在线教程和文档</strong></p>\n\n[Git中文教程](https://git-scm.com/book/zh/v2)\n\n[SVN中文手册](http://svnbook.red-bean.com/nightly/zh/index.html)\n\n[jQuery API中文文档](https://jquery.cuishifeng.cn)\n\n[Nginx中文文档](https://www.nginx.cn/doc/index.html)\n\n[Kafka中文文档](https://kafka.apachecn.org)\n\n[Mybatis中文文档](https://mybatis.org/mybatis-3/zh/index.html)\n\n[微信小程序官方文档](https://developers.weixin.qq.com/miniprogram/dev/framework)\n\n[Nodejs中文教程文档](http://nodejs.cn/learn)\n\n[Apache Web Server文档](http://httpd.apache.org/docs)\n\n[Spring文档中文版](https://www.springcloud.cc/spring-reference.html)\n\n[Golang标准库文档中文版](https://studygolang.com/pkgdoc)\n\n[Java 8官方文档](https://docs.oracle.com/javase/8/docs/api/index.html)\n\n[Maven官方文档](http://maven.apache.org/guides)\n\n[Tomcat 8官方文档](http://tomcat.apache.org/tomcat-8.0-doc/index.html)\n\n[Spring Boot官方文档](https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle)\n\n[RabbitMQ官方文档](https://www.rabbitmq.com/documentation.html)\n\n[RocketMQ官方文档](http://rocketmq.apache.org/docs/quick-start)\n\n[Dubbo中文文档](https://dubbo.apache.org/zh/docs)\n\n[Netty官方文档](https://netty.io/wiki/index.html)\n\n[Elasticsearch官方文档](https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html)\n\n[Spring Cloud官方文档](https://spring.io/projects/spring-cloud)\n\n[Docker官方文档](https://docs.docker.com/get-started)\n\n[kubernetes中文文档](https://kubernetes.io/zh/docs/home)\n\n[thymeleaf官方文档](https://www.thymeleaf.org/documentation.html)\n\n[Vue.js中文文档](https://cn.vuejs.org/v2/guide)\n\n[React.js官方文档](https://reactjs.org/docs/getting-started.html)\n\n[Jenkins中文文档](https://www.jenkins.io/zh/doc)","slug":"实用工具/好用工具大汇总-1","published":1,"date":"2024-11-05T14:59:24.472Z","updated":"2023-05-07T11:48:33.581Z","layout":"post","photos":[],"_id":"cm42hwwuc001xssnn5dwk2rda","content":"<h1 id=\"一、好用工具\"><a href=\"#一、好用工具\" class=\"headerlink\" title=\"一、好用工具\"></a>一、好用工具</h1><p>&emsp;&emsp;经常看到一些好用的工具，但是总是没有好好收藏，结果再想用的时候就忘了。这里做一下汇总，并且以后遇到好用的东西就持续更新，加油，坚持，要变得更棒哦！</p>\n\n<p><strong>1、PDF在线文档合并</strong></p>\n\n<p><a href=\"https://www.ilovepdf.com/\">PDF在线文档合并</a></p>\n<p><strong>2、音频切割，格式转换工具</strong></p>\n\n<p><a href=\"http://down.pcgeshi.com/FormatFactory_setup.exe\">格式工厂</a></p>\n<p><strong>3、图片在线压缩</strong></p>\n\n<p><a href=\"https://docsmall.com/\">图片压缩工具</a></p>\n<p><a href=\"https://tinypng.com/\">图片压缩工具</a></p>\n<p><strong>4、截图、窗口置顶工具</strong></p>\n<p>Snipaste是一个很好用的截图工具，deskpins是一个很好的屏幕置顶工具，两个都没有链接，有要的小伙伴我可以发你，后面给上传到我的gitHub再附链接吧</p>\n\n<p><strong>5、桌面管理工具</strong></p>\n\n<p><a href=\"https://guanjia.qq.com/product/zmzl/\">桌面管理工具</a></p>\n<p><strong>6、录屏工具</strong></p>\n\n<p><a href=\"https://static.miaoji66.com/package/all_can_rec_9.3.3_bdtg1.exe\">全能录屏助手</a></p>\n<p><strong>7、在线画图工具</strong></p>\n\n<p><a href=\"https://www.processon.com/\">在线画图工具ProcessOn</a></p>\n<p><a href=\"https://app.diagrams.net/\">在线画图工具draw.io</a></p>\n<p><a href=\"http://www.mindline.cn/webapp\">在线思维导图工具</a></p>\n<p><strong>7、在线编码工具</strong></p>\n\n<p><a href=\"https://base64.supfree.net/\">BASE64编解码工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/md5\">MD5编码工具</a></p>\n<p><a href=\"http://www.fly63.com/tool/cipher\">AES&#x2F;DES加解密</a></p>\n<p><a href=\"http://jwt.calebb.net/\">JWT解码工具</a></p>\n<p><a href=\"https://www.matools.com/code-convert-ascii\">ASCII编解码工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/unicode\">Unicode编解码工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/utf8\">UTF-8编解码工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/enstring\">字符串编解码工具</a></p>\n<p><a href=\"http://tool.chinaz.com/tools/urlencode.aspx?jdfwkey=lbixz1\">URL编解码工具</a></p>\n<p><strong>8、在线转换工具</strong></p>\n\n<p><a href=\"http://www.fly63.com/tool/ascii\">在线ASCII码对照表</a></p>\n<p><a href=\"https://www.zxgj.cn/g/jinzhi\">通用进制转换工具</a></p>\n<p><a href=\"http://www.binaryconvert.com/\">在线浮点数十进制转换</a></p>\n<p><a href=\"https://www.zxgj.cn/g/yansezhi\">RGB颜色转换</a></p>\n<p><a href=\"https://www.zxgj.cn/g/unix\">时间戳转换工具</a></p>\n<p><a href=\"http://www.fly63.com/tool/unitable\">计量单位换算工具</a></p>\n<p><a href=\"http://www.json.cn/\">在线JSON解析</a></p>\n<p><a href=\"https://prettier.io/playground\">在线JS代码格式化工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/sqlformat\">SQL压缩&#x2F;格式化工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/jsonxml\">JSON和XML在线转换</a></p>\n<p><a href=\"http://www.fly63.com/tool/jsonyaml\">JSON&#x2F;YAML</a></p>\n<p><a href=\"http://www.fly63.com/tool/renmingbi\">人民币大小写转换工具</a></p>\n<p><strong>9、正则表达式工具</strong></p>\n\n<p><a href=\"https://regexr.com/\">正则表达式调试工具</a></p>\n<p><a href=\"https://jex.im/regulex\">正则表达式可视化工具</a></p>\n<p><strong>10、网络工具</strong></p>\n\n<p><a href=\"https://www.ip138.com/\">IP地址归属地查询</a></p>\n<p><a href=\"https://www.ipip.net/ip.html\">IP地址查询</a></p>\n<p><a href=\"http://www.fly63.com/php/http\">HTTP在线接口测试工具</a></p>\n<p><strong>11、在线编译运行工具</strong></p>\n\n<p><a href=\"https://rextester.com/\">C#在线编译运行</a></p>\n<p><a href=\"https://www.onlinegdb.com/\">C&#x2F;C++在线编译调试</a></p>\n<p><a href=\"https://c.runoob.com/\">在线编译工具套装</a></p>\n<p><strong>12、可视化/格式化工具</strong></p>\n\n<p><a href=\"https://codepen.io/\">在线前端编辑器</a></p>\n<p><a href=\"https://flourish.studio/\">在线数据可视化</a></p>\n<p><a href=\"https://enjoycss.com/\">在线CSS代码可视化工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/xmlformat\">XML格式化工具</a></p>\n<p><strong>13、在线生成器</strong></p>\n\n<p><a href=\"https://www.zxgj.cn/g/uuid\">UUID在线生成器</a></p>\n<p><a href=\"https://www.zxgj.cn/g/suijishu\">随机数生成器</a></p>\n<p><strong>14、其他常用工具</strong></p>\n\n<p><a href=\"https://nginxconfig.io/\">在线Nginx配置工具</a></p>\n<p><a href=\"http://www.fly63.com/tool/textdiff\">在线对比工具</a></p>\n<p><a href=\"https://www.crx4chrome.com/\">在线Chrome浏览器插件</a></p>\n<p><a href=\"http://www.docway.net/\">在线接口文档管理工具</a></p>\n<p><strong>15、在线素材工具</strong></p>\n\n<p><a href=\"http://pngimg.com/\">免费透明背景图片素材</a></p>\n<p><a href=\"https://emoji.svend.cc/\">Emoji表情搜索</a></p>\n<p><a href=\"https://emojiisland.com/\">Emoji表情包下载</a></p>\n<p><a href=\"https://feathericons.com/\">open source icons</a></p>\n<p><a href=\"https://www.iconfont.cn/\">阿里巴巴矢量图标库</a></p>\n<p><a href=\"https://fabiaoqing.com/\">表情包在线网站</a></p>\n<p><a href=\"https://pluspng.com/\">免费PNG图片库</a></p>\n<p><a href=\"https://www.iconfinder.com/\">ICON图标在线下载</a></p>\n<p><a href=\"https://bz.zzzmh.cn/\">极简壁纸</a></p>\n<p><a href=\"https://wall.alphacoders.com/\">Wallpaper Abyss壁纸</a></p>\n<p><a href=\"https://pixabay.com/zh\">Pixabay图片素材库</a></p>\n<p><a href=\"https://unsplash.com/\">Unsplash图片素材库</a></p>\n<p><a href=\"http://www.pexels.com/\">Pexels图片素材库</a></p>\n<p><a href=\"https://images.nasa.gov/\">NASA图片视频素材库</a></p>\n<p><strong>16、设计制作类工具</strong></p>\n\n<p><a href=\"https://www.uupoop.com/\">在线PS</a></p>\n<p><a href=\"https://www.weixinsyt.com/\">在线音频剪辑</a></p>\n<p><a href=\"https://www.kapwing.com/\">在线视频剪辑</a></p>\n<p><a href=\"http://www.uugai.com/\">免费logo在线制作</a></p>\n<p><a href=\"https://www.qt86.com/\">艺术字体在线生成</a></p>\n<p><a href=\"https://tableconvert.com/\">在线表格转换工具</a></p>\n<p><a href=\"https://www.designcap.com/\">在线海报设计工具</a></p>\n<p><a href=\"https://bigjpg.com/\">图片智能放大工具</a></p>\n<p><a href=\"https://mh.cli.im/\">二维码美化器</a></p>\n<p><a href=\"https://carbon.now.sh/\">在线代码截图工具</a></p>\n<p><a href=\"https://www.remove.bg/zh\">在线抠图工具</a></p>\n<p><a href=\"http://www.fly63.com/php/ico\">ICO图标在线生成</a></p>\n<p><a href=\"http://www.fly63.com/tool/svg2img\">SVG转PNG工具</a></p>\n<p><a href=\"http://www.fly63.com/tool/giftxt\">视频转GIF工具</a></p>\n<p><a href=\"http://www.fly63.com/tool/ewm\">二维码在线生成器</a></p>\n<p><a href=\"http://www.fly63.com/php/decoder\">二维码在线解码</a></p>\n<p><strong>17、写作辅助工具</strong></p>\n\n<p><a href=\"https://www.eteste.com/\">在线字数统计</a></p>\n<p><a href=\"https://mdnice.com/\">mdnice markdown排版工具</a></p>\n<p><a href=\"http://md.aclickall.com/\">md2all markdown排版工具</a></p>\n<p><a href=\"https://picx.xpoet.cn/\">在线图床神器</a></p>\n<p><a href=\"https://sm.ms/\">在线免费图床</a></p>\n<p><a href=\"https://imgkr.com/\">图壳图床</a></p>\n<p><a href=\"https://carbon.now.sh/\">在线代码截图工具</a></p>\n<p><a href=\"https://urlify.cn/\">在线短链接工具</a></p>\n<p><a href=\"http://www.fly63.com/tool/textreplace\">在线文本替换</a></p>\n<p><strong>18、在线办公工具</strong></p>\n\n<p><a href=\"https://smallpdf.com/cn/pdf-tools\">pdf在线处理工具1</a></p>\n<p><a href=\"https://tools.pdf24.org/zh\">pdf在线处理工具2</a></p>\n<p><a href=\"https://www.pdftoword.com/\">pdf转word在线工具</a></p>\n<p><a href=\"https://cn.office-converter.com/\">在线多媒体转换器合集</a></p>\n<p><a href=\"https://ocr.wdku.net/\">在线文字识别工具</a></p>\n<p><a href=\"https://docsmall.com/\">在线文件压缩工具</a></p>\n<p><strong>19、文档笔记工具</strong></p>\n\n<p><a href=\"https://www.yinxiang.com/\">印象笔记</a></p>\n<p><a href=\"https://note.youdao.com/\">有道笔记</a></p>\n<p><a href=\"https://www.onenote.com/\">OneNote</a></p>\n<p><a href=\"https://mubu.com/\">幕布</a></p>\n<p><a href=\"https://www.wiz.cn/\">为知笔记</a></p>\n<p><a href=\"https://shimo.im/\">石墨文档</a></p>\n<p><a href=\"https://simplenote.com/\">Simplenote</a></p>\n<p><a href=\"https://www.yuque.com/\">语雀</a></p>\n<p><strong>20、编程学习网</strong></p>\n\n<p><a href=\"https://www.bilibili.com/\">哔哩哔哩</a></p>\n<p><a href=\"https://www.dotcpp.com/\">C语言网</a></p>\n<p><a href=\"http://zh.cppreference.com/\">cppreference</a></p>\n<p><a href=\"https://www.icourse163.org/\">中国大学MOOC</a></p>\n<p><a href=\"www.nowcoder.com\">牛客网</a></p>\n<p><a href=\"open.163.com\">网易公开课</a></p>\n<p><a href=\"https://codegym.cc/\">CodeGym</a></p>\n<p><a href=\"https://beginnersbook.com/\">BeginnersBook</a></p>\n<p><a href=\"http://www.javased.com/\">JavaSED</a></p>\n<p><a href=\"https://www.codecademy.com/\">codecademy</a></p>\n<p><a href=\"https://www.coursera.org/\">Coursera</a></p>\n<p><a href=\"https://stackoverflow.com/\">StackOverFlow</a></p>\n<p><a href=\"https://leetcode-cn.com/\">LeetCode</a></p>\n<p><a href=\"https://www.lintcode.com/\">LintCode</a></p>\n<p><strong>21、在线教程和文档</strong></p>\n\n<p><a href=\"https://git-scm.com/book/zh/v2\">Git中文教程</a></p>\n<p><a href=\"http://svnbook.red-bean.com/nightly/zh/index.html\">SVN中文手册</a></p>\n<p><a href=\"https://jquery.cuishifeng.cn/\">jQuery API中文文档</a></p>\n<p><a href=\"https://www.nginx.cn/doc/index.html\">Nginx中文文档</a></p>\n<p><a href=\"https://kafka.apachecn.org/\">Kafka中文文档</a></p>\n<p><a href=\"https://mybatis.org/mybatis-3/zh/index.html\">Mybatis中文文档</a></p>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework\">微信小程序官方文档</a></p>\n<p><a href=\"http://nodejs.cn/learn\">Nodejs中文教程文档</a></p>\n<p><a href=\"http://httpd.apache.org/docs\">Apache Web Server文档</a></p>\n<p><a href=\"https://www.springcloud.cc/spring-reference.html\">Spring文档中文版</a></p>\n<p><a href=\"https://studygolang.com/pkgdoc\">Golang标准库文档中文版</a></p>\n<p><a href=\"https://docs.oracle.com/javase/8/docs/api/index.html\">Java 8官方文档</a></p>\n<p><a href=\"http://maven.apache.org/guides\">Maven官方文档</a></p>\n<p><a href=\"http://tomcat.apache.org/tomcat-8.0-doc/index.html\">Tomcat 8官方文档</a></p>\n<p><a href=\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle\">Spring Boot官方文档</a></p>\n<p><a href=\"https://www.rabbitmq.com/documentation.html\">RabbitMQ官方文档</a></p>\n<p><a href=\"http://rocketmq.apache.org/docs/quick-start\">RocketMQ官方文档</a></p>\n<p><a href=\"https://dubbo.apache.org/zh/docs\">Dubbo中文文档</a></p>\n<p><a href=\"https://netty.io/wiki/index.html\">Netty官方文档</a></p>\n<p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html\">Elasticsearch官方文档</a></p>\n<p><a href=\"https://spring.io/projects/spring-cloud\">Spring Cloud官方文档</a></p>\n<p><a href=\"https://docs.docker.com/get-started\">Docker官方文档</a></p>\n<p><a href=\"https://kubernetes.io/zh/docs/home\">kubernetes中文文档</a></p>\n<p><a href=\"https://www.thymeleaf.org/documentation.html\">thymeleaf官方文档</a></p>\n<p><a href=\"https://cn.vuejs.org/v2/guide\">Vue.js中文文档</a></p>\n<p><a href=\"https://reactjs.org/docs/getting-started.html\">React.js官方文档</a></p>\n<p><a href=\"https://www.jenkins.io/zh/doc\">Jenkins中文文档</a></p>\n","excerpt":"","more":"<h1 id=\"一、好用工具\"><a href=\"#一、好用工具\" class=\"headerlink\" title=\"一、好用工具\"></a>一、好用工具</h1><p>&emsp;&emsp;经常看到一些好用的工具，但是总是没有好好收藏，结果再想用的时候就忘了。这里做一下汇总，并且以后遇到好用的东西就持续更新，加油，坚持，要变得更棒哦！</p>\n\n<p><strong>1、PDF在线文档合并</strong></p>\n\n<p><a href=\"https://www.ilovepdf.com/\">PDF在线文档合并</a></p>\n<p><strong>2、音频切割，格式转换工具</strong></p>\n\n<p><a href=\"http://down.pcgeshi.com/FormatFactory_setup.exe\">格式工厂</a></p>\n<p><strong>3、图片在线压缩</strong></p>\n\n<p><a href=\"https://docsmall.com/\">图片压缩工具</a></p>\n<p><a href=\"https://tinypng.com/\">图片压缩工具</a></p>\n<p><strong>4、截图、窗口置顶工具</strong></p>\n<p>Snipaste是一个很好用的截图工具，deskpins是一个很好的屏幕置顶工具，两个都没有链接，有要的小伙伴我可以发你，后面给上传到我的gitHub再附链接吧</p>\n\n<p><strong>5、桌面管理工具</strong></p>\n\n<p><a href=\"https://guanjia.qq.com/product/zmzl/\">桌面管理工具</a></p>\n<p><strong>6、录屏工具</strong></p>\n\n<p><a href=\"https://static.miaoji66.com/package/all_can_rec_9.3.3_bdtg1.exe\">全能录屏助手</a></p>\n<p><strong>7、在线画图工具</strong></p>\n\n<p><a href=\"https://www.processon.com/\">在线画图工具ProcessOn</a></p>\n<p><a href=\"https://app.diagrams.net/\">在线画图工具draw.io</a></p>\n<p><a href=\"http://www.mindline.cn/webapp\">在线思维导图工具</a></p>\n<p><strong>7、在线编码工具</strong></p>\n\n<p><a href=\"https://base64.supfree.net/\">BASE64编解码工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/md5\">MD5编码工具</a></p>\n<p><a href=\"http://www.fly63.com/tool/cipher\">AES&#x2F;DES加解密</a></p>\n<p><a href=\"http://jwt.calebb.net/\">JWT解码工具</a></p>\n<p><a href=\"https://www.matools.com/code-convert-ascii\">ASCII编解码工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/unicode\">Unicode编解码工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/utf8\">UTF-8编解码工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/enstring\">字符串编解码工具</a></p>\n<p><a href=\"http://tool.chinaz.com/tools/urlencode.aspx?jdfwkey=lbixz1\">URL编解码工具</a></p>\n<p><strong>8、在线转换工具</strong></p>\n\n<p><a href=\"http://www.fly63.com/tool/ascii\">在线ASCII码对照表</a></p>\n<p><a href=\"https://www.zxgj.cn/g/jinzhi\">通用进制转换工具</a></p>\n<p><a href=\"http://www.binaryconvert.com/\">在线浮点数十进制转换</a></p>\n<p><a href=\"https://www.zxgj.cn/g/yansezhi\">RGB颜色转换</a></p>\n<p><a href=\"https://www.zxgj.cn/g/unix\">时间戳转换工具</a></p>\n<p><a href=\"http://www.fly63.com/tool/unitable\">计量单位换算工具</a></p>\n<p><a href=\"http://www.json.cn/\">在线JSON解析</a></p>\n<p><a href=\"https://prettier.io/playground\">在线JS代码格式化工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/sqlformat\">SQL压缩&#x2F;格式化工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/jsonxml\">JSON和XML在线转换</a></p>\n<p><a href=\"http://www.fly63.com/tool/jsonyaml\">JSON&#x2F;YAML</a></p>\n<p><a href=\"http://www.fly63.com/tool/renmingbi\">人民币大小写转换工具</a></p>\n<p><strong>9、正则表达式工具</strong></p>\n\n<p><a href=\"https://regexr.com/\">正则表达式调试工具</a></p>\n<p><a href=\"https://jex.im/regulex\">正则表达式可视化工具</a></p>\n<p><strong>10、网络工具</strong></p>\n\n<p><a href=\"https://www.ip138.com/\">IP地址归属地查询</a></p>\n<p><a href=\"https://www.ipip.net/ip.html\">IP地址查询</a></p>\n<p><a href=\"http://www.fly63.com/php/http\">HTTP在线接口测试工具</a></p>\n<p><strong>11、在线编译运行工具</strong></p>\n\n<p><a href=\"https://rextester.com/\">C#在线编译运行</a></p>\n<p><a href=\"https://www.onlinegdb.com/\">C&#x2F;C++在线编译调试</a></p>\n<p><a href=\"https://c.runoob.com/\">在线编译工具套装</a></p>\n<p><strong>12、可视化/格式化工具</strong></p>\n\n<p><a href=\"https://codepen.io/\">在线前端编辑器</a></p>\n<p><a href=\"https://flourish.studio/\">在线数据可视化</a></p>\n<p><a href=\"https://enjoycss.com/\">在线CSS代码可视化工具</a></p>\n<p><a href=\"https://www.zxgj.cn/g/xmlformat\">XML格式化工具</a></p>\n<p><strong>13、在线生成器</strong></p>\n\n<p><a href=\"https://www.zxgj.cn/g/uuid\">UUID在线生成器</a></p>\n<p><a href=\"https://www.zxgj.cn/g/suijishu\">随机数生成器</a></p>\n<p><strong>14、其他常用工具</strong></p>\n\n<p><a href=\"https://nginxconfig.io/\">在线Nginx配置工具</a></p>\n<p><a href=\"http://www.fly63.com/tool/textdiff\">在线对比工具</a></p>\n<p><a href=\"https://www.crx4chrome.com/\">在线Chrome浏览器插件</a></p>\n<p><a href=\"http://www.docway.net/\">在线接口文档管理工具</a></p>\n<p><strong>15、在线素材工具</strong></p>\n\n<p><a href=\"http://pngimg.com/\">免费透明背景图片素材</a></p>\n<p><a href=\"https://emoji.svend.cc/\">Emoji表情搜索</a></p>\n<p><a href=\"https://emojiisland.com/\">Emoji表情包下载</a></p>\n<p><a href=\"https://feathericons.com/\">open source icons</a></p>\n<p><a href=\"https://www.iconfont.cn/\">阿里巴巴矢量图标库</a></p>\n<p><a href=\"https://fabiaoqing.com/\">表情包在线网站</a></p>\n<p><a href=\"https://pluspng.com/\">免费PNG图片库</a></p>\n<p><a href=\"https://www.iconfinder.com/\">ICON图标在线下载</a></p>\n<p><a href=\"https://bz.zzzmh.cn/\">极简壁纸</a></p>\n<p><a href=\"https://wall.alphacoders.com/\">Wallpaper Abyss壁纸</a></p>\n<p><a href=\"https://pixabay.com/zh\">Pixabay图片素材库</a></p>\n<p><a href=\"https://unsplash.com/\">Unsplash图片素材库</a></p>\n<p><a href=\"http://www.pexels.com/\">Pexels图片素材库</a></p>\n<p><a href=\"https://images.nasa.gov/\">NASA图片视频素材库</a></p>\n<p><strong>16、设计制作类工具</strong></p>\n\n<p><a href=\"https://www.uupoop.com/\">在线PS</a></p>\n<p><a href=\"https://www.weixinsyt.com/\">在线音频剪辑</a></p>\n<p><a href=\"https://www.kapwing.com/\">在线视频剪辑</a></p>\n<p><a href=\"http://www.uugai.com/\">免费logo在线制作</a></p>\n<p><a href=\"https://www.qt86.com/\">艺术字体在线生成</a></p>\n<p><a href=\"https://tableconvert.com/\">在线表格转换工具</a></p>\n<p><a href=\"https://www.designcap.com/\">在线海报设计工具</a></p>\n<p><a href=\"https://bigjpg.com/\">图片智能放大工具</a></p>\n<p><a href=\"https://mh.cli.im/\">二维码美化器</a></p>\n<p><a href=\"https://carbon.now.sh/\">在线代码截图工具</a></p>\n<p><a href=\"https://www.remove.bg/zh\">在线抠图工具</a></p>\n<p><a href=\"http://www.fly63.com/php/ico\">ICO图标在线生成</a></p>\n<p><a href=\"http://www.fly63.com/tool/svg2img\">SVG转PNG工具</a></p>\n<p><a href=\"http://www.fly63.com/tool/giftxt\">视频转GIF工具</a></p>\n<p><a href=\"http://www.fly63.com/tool/ewm\">二维码在线生成器</a></p>\n<p><a href=\"http://www.fly63.com/php/decoder\">二维码在线解码</a></p>\n<p><strong>17、写作辅助工具</strong></p>\n\n<p><a href=\"https://www.eteste.com/\">在线字数统计</a></p>\n<p><a href=\"https://mdnice.com/\">mdnice markdown排版工具</a></p>\n<p><a href=\"http://md.aclickall.com/\">md2all markdown排版工具</a></p>\n<p><a href=\"https://picx.xpoet.cn/\">在线图床神器</a></p>\n<p><a href=\"https://sm.ms/\">在线免费图床</a></p>\n<p><a href=\"https://imgkr.com/\">图壳图床</a></p>\n<p><a href=\"https://carbon.now.sh/\">在线代码截图工具</a></p>\n<p><a href=\"https://urlify.cn/\">在线短链接工具</a></p>\n<p><a href=\"http://www.fly63.com/tool/textreplace\">在线文本替换</a></p>\n<p><strong>18、在线办公工具</strong></p>\n\n<p><a href=\"https://smallpdf.com/cn/pdf-tools\">pdf在线处理工具1</a></p>\n<p><a href=\"https://tools.pdf24.org/zh\">pdf在线处理工具2</a></p>\n<p><a href=\"https://www.pdftoword.com/\">pdf转word在线工具</a></p>\n<p><a href=\"https://cn.office-converter.com/\">在线多媒体转换器合集</a></p>\n<p><a href=\"https://ocr.wdku.net/\">在线文字识别工具</a></p>\n<p><a href=\"https://docsmall.com/\">在线文件压缩工具</a></p>\n<p><strong>19、文档笔记工具</strong></p>\n\n<p><a href=\"https://www.yinxiang.com/\">印象笔记</a></p>\n<p><a href=\"https://note.youdao.com/\">有道笔记</a></p>\n<p><a href=\"https://www.onenote.com/\">OneNote</a></p>\n<p><a href=\"https://mubu.com/\">幕布</a></p>\n<p><a href=\"https://www.wiz.cn/\">为知笔记</a></p>\n<p><a href=\"https://shimo.im/\">石墨文档</a></p>\n<p><a href=\"https://simplenote.com/\">Simplenote</a></p>\n<p><a href=\"https://www.yuque.com/\">语雀</a></p>\n<p><strong>20、编程学习网</strong></p>\n\n<p><a href=\"https://www.bilibili.com/\">哔哩哔哩</a></p>\n<p><a href=\"https://www.dotcpp.com/\">C语言网</a></p>\n<p><a href=\"http://zh.cppreference.com/\">cppreference</a></p>\n<p><a href=\"https://www.icourse163.org/\">中国大学MOOC</a></p>\n<p><a href=\"www.nowcoder.com\">牛客网</a></p>\n<p><a href=\"open.163.com\">网易公开课</a></p>\n<p><a href=\"https://codegym.cc/\">CodeGym</a></p>\n<p><a href=\"https://beginnersbook.com/\">BeginnersBook</a></p>\n<p><a href=\"http://www.javased.com/\">JavaSED</a></p>\n<p><a href=\"https://www.codecademy.com/\">codecademy</a></p>\n<p><a href=\"https://www.coursera.org/\">Coursera</a></p>\n<p><a href=\"https://stackoverflow.com/\">StackOverFlow</a></p>\n<p><a href=\"https://leetcode-cn.com/\">LeetCode</a></p>\n<p><a href=\"https://www.lintcode.com/\">LintCode</a></p>\n<p><strong>21、在线教程和文档</strong></p>\n\n<p><a href=\"https://git-scm.com/book/zh/v2\">Git中文教程</a></p>\n<p><a href=\"http://svnbook.red-bean.com/nightly/zh/index.html\">SVN中文手册</a></p>\n<p><a href=\"https://jquery.cuishifeng.cn/\">jQuery API中文文档</a></p>\n<p><a href=\"https://www.nginx.cn/doc/index.html\">Nginx中文文档</a></p>\n<p><a href=\"https://kafka.apachecn.org/\">Kafka中文文档</a></p>\n<p><a href=\"https://mybatis.org/mybatis-3/zh/index.html\">Mybatis中文文档</a></p>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework\">微信小程序官方文档</a></p>\n<p><a href=\"http://nodejs.cn/learn\">Nodejs中文教程文档</a></p>\n<p><a href=\"http://httpd.apache.org/docs\">Apache Web Server文档</a></p>\n<p><a href=\"https://www.springcloud.cc/spring-reference.html\">Spring文档中文版</a></p>\n<p><a href=\"https://studygolang.com/pkgdoc\">Golang标准库文档中文版</a></p>\n<p><a href=\"https://docs.oracle.com/javase/8/docs/api/index.html\">Java 8官方文档</a></p>\n<p><a href=\"http://maven.apache.org/guides\">Maven官方文档</a></p>\n<p><a href=\"http://tomcat.apache.org/tomcat-8.0-doc/index.html\">Tomcat 8官方文档</a></p>\n<p><a href=\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle\">Spring Boot官方文档</a></p>\n<p><a href=\"https://www.rabbitmq.com/documentation.html\">RabbitMQ官方文档</a></p>\n<p><a href=\"http://rocketmq.apache.org/docs/quick-start\">RocketMQ官方文档</a></p>\n<p><a href=\"https://dubbo.apache.org/zh/docs\">Dubbo中文文档</a></p>\n<p><a href=\"https://netty.io/wiki/index.html\">Netty官方文档</a></p>\n<p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html\">Elasticsearch官方文档</a></p>\n<p><a href=\"https://spring.io/projects/spring-cloud\">Spring Cloud官方文档</a></p>\n<p><a href=\"https://docs.docker.com/get-started\">Docker官方文档</a></p>\n<p><a href=\"https://kubernetes.io/zh/docs/home\">kubernetes中文文档</a></p>\n<p><a href=\"https://www.thymeleaf.org/documentation.html\">thymeleaf官方文档</a></p>\n<p><a href=\"https://cn.vuejs.org/v2/guide\">Vue.js中文文档</a></p>\n<p><a href=\"https://reactjs.org/docs/getting-started.html\">React.js官方文档</a></p>\n<p><a href=\"https://www.jenkins.io/zh/doc\">Jenkins中文文档</a></p>\n"},{"title":"第一章、帝国的余辉之百年帝国","comments":1,"summary":"仅以此纪录属于我的TI世界，帝国的余辉、蓝色的巨人、\"八叛徒\"与硅谷.......跟着我一起从AT&T开始吧。。","_content":"\n![](/images/AT&T.png)\n\n## 1、百年帝国\n<p>&emsp;&emsp;在美国新泽西州，弗洛勒姆帕克占地十几平方公里，大多是芳草地和森林，在森林中央，是一片中等规模临湖的工业园—这可能是世界上最美丽的工业园了。在那里，每天都能看到天鹅在湖中悠闲地游荡，有时还能见到野鹿出没。这里原是石油巨头埃克森美孚（Exxon-Mobil）的地产，1997年，这里来了一个新主人—AT&T实验室。1996年，如日中天的AT&T公司重组，分离成AT&T、朗讯（Lucent Technologies）和NCR三家公司。AT&T旗下举世闻名的科研机构贝尔实验室也被一分为二。朗讯公司获得了一般的科研机构和贝尔实验室的名称。划归AT&T的一半研究室组成了AT&T实验室（后来更名为香农实验室，Shannon Labs）,从原来的默里山（Murray Hill）搬到了弗洛勒姆帕克。在那里，出过11位诺贝尔奖获得者的AT&T实验室，像一颗进入晚年的恒星，爆发出极强的、但也是最后的光辉，然后就迅速地暗淡下来。2005年，AT&T被SBC公司并购，而朗讯则于2006年被法国阿尔卡特（Alcatel）公司并购。2016年，阿尔卡特-朗讯又被诺基亚收购。</p>\n\n<p>&emsp;&emsp;1997年，在AT&T实验室，大家的情绪都很高，实验室的气氛很想10年后的Google和今天的Facebook。不少人的桌旁都放着实验室美丽的夕阳照。如今看来，它似乎预示着一个帝国的黄昏。</p>\n\n<p>&emsp;&emsp;说起美国电话电报公司，即AT&T公司，在美国乃至在世界上几乎无人不知，无人不晓。该公司由亚历山大·贝尔（Alexander Bell）创立于1877年，最初叫贝尔电话公司，1885年因为长途电话业务又设立了子公司AT&T，1994年反垄断拆分之后，公司的主体采用了AT&T的名称。在历史上贝尔电话公司和AT&T常常混用，为了避免以后混淆，我们这里统一采用AT&T的称呼。电话的发明和AT&T公司的建立，第一次实现了远程实时的交互通信（虽然电报比电话出现的早，但它不是实时交互通信），并且促进了社会的进步。</p>\n\n<p>&emsp;&emsp;AT&T自创立第一天起，就是龙头老大，直到它被收购的那一天。但是，AT&T起初的扩张速度远比我们想象地要慢。它用了15年（到1892年）才将生意从纽约地区扩张到美国中部的芝加哥地区（当时从纽约到芝加哥一分钟的通话费用是2美元，而当时1美元的购买力相当于现在的50美元。今天在美国打国际长途，也不过10美分一分钟）。38年后（1915年），它的生意扩展到全国（但是从纽约到旧金山得 电话费高达7美元一分钟）。50年后的1927年，AT&T的长途电话业务扩展到欧洲。</p>\n\n<p>&emsp;&emsp;1925年，AT&T公司成立了研发机构—贝尔实验室。贝尔实验室是历史上最大、最成功的实验室。AT&T从电信业获得了巨额的垄断利润，将销售额的3%用于贝尔实验室的研发工作。在很长一段时间里，贝尔实验室总是用“无须为经费发愁”这一条理由来吸引优秀的科学家到该实验室工作，这使得贝尔实验室不仅在通信领域长期执牛耳，而且在射电天文学、晶体管和半导体、计算机科学等领域也都领先于世界，其闻名于世的发明包括射电天文望远镜、晶体管、数字交换机、计算机的UNIX操作系统和C语言等。此外，贝尔实验室还发现了电子的波动性，提出了信息论，组织发射了第一颗商用通信卫星，铺设了第一条商用光纤。在相当长的时间里，贝尔实验室不仅仅是信息领域科学家最向往的地方，也是基础研究领域学者梦寐以求的地方。那个时代，能进入贝尔实验室是很幸运的。如果确有才华，他可以成为业界的领袖，甚至得到诺贝尔奖、香农奖或图灵奖。即使是一般的研究员和和工程师，也会有很好的收入、可靠的退休保障及受人尊重的社会地位。</p>\n\n<p>&emsp;&emsp;AT&T在很长的时间内通过北方电信垄断美国并且控制加拿大的电话业务。1984年，根据联邦反垄断法的要求，AT&T的市话业务被剥离，根据地区划分成8家小贝尔公司。这是贝尔电话公司才正式更名为AT&T公司。</p>\n\n<p>&emsp;&emsp;根据当年的划分原则，8家小贝尔公司从事市话业务，AT&T（被称为老祖母）从事长途电话业务和通信设备的制造。贝尔实验室划给了AT&T，并从贝尔实验室分出了一部分，被称为贝尔核心（Bell Core），划给8家小贝尔公司。不久，贝尔核心因为“8个和尚没水喝”，很快就退出了历史舞台，这当然是后话了。</p>\n\n<p>&emsp;&emsp;现在，大多数认为，这是AT&T走向衰落的开始。但我认为，AT&T并没有因此而伤筋动骨。事实上，在接下来的10年里，AT&T的业务得到了长足的发展。虽然丢掉了市话服务，但是，它作为一家通信设备供应商，依然是市话通信设备几乎唯一的供应商，在海外市场也依然是龙头老大。在长途电话业务中，虽然有MCI和Sprint两个竞争者，AT&T仍然控制着美国大部分市场，利润十分可观，足以维持贝尔实验室高额的研发费用，使得AT&T在通信和半导体技术上仍然领先全球。到1994年，他的营业额达到近700亿美元，大致等同于08年金融危机前它和SBC合并后的总营业额。</p>\n\n<p>&emsp;&emsp;这一年，贝尔实验室的总裁梅毅强博士率庞大的代表团访问中国，当时的国家主席江泽民亲自接见了他，国家主席接见一家公司下属机构的总裁，这可能是空前绝后的，足以说明对AT&T的重视。AT&T当时可以说是风光到了极点。</p>\n\n<p>&emsp;&emsp;既然1984年AT&T公司的那次分家并没有让公司伤筋动骨，那么AT&T的衰落又是什么原因造成的呢？</p>","source":"_posts/浪潮之巅/第一章、帝国的余辉之百年帝国.md","raw":"---\ntitle: 第一章、帝国的余辉之百年帝国\ntags: 浪潮之巅\ncategories: 我的IT世界观\ncomments: true\nsummary: 仅以此纪录属于我的TI世界，帝国的余辉、蓝色的巨人、\"八叛徒\"与硅谷.......跟着我一起从AT&T开始吧。。\n---\n\n![](/images/AT&T.png)\n\n## 1、百年帝国\n<p>&emsp;&emsp;在美国新泽西州，弗洛勒姆帕克占地十几平方公里，大多是芳草地和森林，在森林中央，是一片中等规模临湖的工业园—这可能是世界上最美丽的工业园了。在那里，每天都能看到天鹅在湖中悠闲地游荡，有时还能见到野鹿出没。这里原是石油巨头埃克森美孚（Exxon-Mobil）的地产，1997年，这里来了一个新主人—AT&T实验室。1996年，如日中天的AT&T公司重组，分离成AT&T、朗讯（Lucent Technologies）和NCR三家公司。AT&T旗下举世闻名的科研机构贝尔实验室也被一分为二。朗讯公司获得了一般的科研机构和贝尔实验室的名称。划归AT&T的一半研究室组成了AT&T实验室（后来更名为香农实验室，Shannon Labs）,从原来的默里山（Murray Hill）搬到了弗洛勒姆帕克。在那里，出过11位诺贝尔奖获得者的AT&T实验室，像一颗进入晚年的恒星，爆发出极强的、但也是最后的光辉，然后就迅速地暗淡下来。2005年，AT&T被SBC公司并购，而朗讯则于2006年被法国阿尔卡特（Alcatel）公司并购。2016年，阿尔卡特-朗讯又被诺基亚收购。</p>\n\n<p>&emsp;&emsp;1997年，在AT&T实验室，大家的情绪都很高，实验室的气氛很想10年后的Google和今天的Facebook。不少人的桌旁都放着实验室美丽的夕阳照。如今看来，它似乎预示着一个帝国的黄昏。</p>\n\n<p>&emsp;&emsp;说起美国电话电报公司，即AT&T公司，在美国乃至在世界上几乎无人不知，无人不晓。该公司由亚历山大·贝尔（Alexander Bell）创立于1877年，最初叫贝尔电话公司，1885年因为长途电话业务又设立了子公司AT&T，1994年反垄断拆分之后，公司的主体采用了AT&T的名称。在历史上贝尔电话公司和AT&T常常混用，为了避免以后混淆，我们这里统一采用AT&T的称呼。电话的发明和AT&T公司的建立，第一次实现了远程实时的交互通信（虽然电报比电话出现的早，但它不是实时交互通信），并且促进了社会的进步。</p>\n\n<p>&emsp;&emsp;AT&T自创立第一天起，就是龙头老大，直到它被收购的那一天。但是，AT&T起初的扩张速度远比我们想象地要慢。它用了15年（到1892年）才将生意从纽约地区扩张到美国中部的芝加哥地区（当时从纽约到芝加哥一分钟的通话费用是2美元，而当时1美元的购买力相当于现在的50美元。今天在美国打国际长途，也不过10美分一分钟）。38年后（1915年），它的生意扩展到全国（但是从纽约到旧金山得 电话费高达7美元一分钟）。50年后的1927年，AT&T的长途电话业务扩展到欧洲。</p>\n\n<p>&emsp;&emsp;1925年，AT&T公司成立了研发机构—贝尔实验室。贝尔实验室是历史上最大、最成功的实验室。AT&T从电信业获得了巨额的垄断利润，将销售额的3%用于贝尔实验室的研发工作。在很长一段时间里，贝尔实验室总是用“无须为经费发愁”这一条理由来吸引优秀的科学家到该实验室工作，这使得贝尔实验室不仅在通信领域长期执牛耳，而且在射电天文学、晶体管和半导体、计算机科学等领域也都领先于世界，其闻名于世的发明包括射电天文望远镜、晶体管、数字交换机、计算机的UNIX操作系统和C语言等。此外，贝尔实验室还发现了电子的波动性，提出了信息论，组织发射了第一颗商用通信卫星，铺设了第一条商用光纤。在相当长的时间里，贝尔实验室不仅仅是信息领域科学家最向往的地方，也是基础研究领域学者梦寐以求的地方。那个时代，能进入贝尔实验室是很幸运的。如果确有才华，他可以成为业界的领袖，甚至得到诺贝尔奖、香农奖或图灵奖。即使是一般的研究员和和工程师，也会有很好的收入、可靠的退休保障及受人尊重的社会地位。</p>\n\n<p>&emsp;&emsp;AT&T在很长的时间内通过北方电信垄断美国并且控制加拿大的电话业务。1984年，根据联邦反垄断法的要求，AT&T的市话业务被剥离，根据地区划分成8家小贝尔公司。这是贝尔电话公司才正式更名为AT&T公司。</p>\n\n<p>&emsp;&emsp;根据当年的划分原则，8家小贝尔公司从事市话业务，AT&T（被称为老祖母）从事长途电话业务和通信设备的制造。贝尔实验室划给了AT&T，并从贝尔实验室分出了一部分，被称为贝尔核心（Bell Core），划给8家小贝尔公司。不久，贝尔核心因为“8个和尚没水喝”，很快就退出了历史舞台，这当然是后话了。</p>\n\n<p>&emsp;&emsp;现在，大多数认为，这是AT&T走向衰落的开始。但我认为，AT&T并没有因此而伤筋动骨。事实上，在接下来的10年里，AT&T的业务得到了长足的发展。虽然丢掉了市话服务，但是，它作为一家通信设备供应商，依然是市话通信设备几乎唯一的供应商，在海外市场也依然是龙头老大。在长途电话业务中，虽然有MCI和Sprint两个竞争者，AT&T仍然控制着美国大部分市场，利润十分可观，足以维持贝尔实验室高额的研发费用，使得AT&T在通信和半导体技术上仍然领先全球。到1994年，他的营业额达到近700亿美元，大致等同于08年金融危机前它和SBC合并后的总营业额。</p>\n\n<p>&emsp;&emsp;这一年，贝尔实验室的总裁梅毅强博士率庞大的代表团访问中国，当时的国家主席江泽民亲自接见了他，国家主席接见一家公司下属机构的总裁，这可能是空前绝后的，足以说明对AT&T的重视。AT&T当时可以说是风光到了极点。</p>\n\n<p>&emsp;&emsp;既然1984年AT&T公司的那次分家并没有让公司伤筋动骨，那么AT&T的衰落又是什么原因造成的呢？</p>","slug":"浪潮之巅/第一章、帝国的余辉之百年帝国","published":1,"date":"2024-11-05T14:59:24.507Z","updated":"2023-05-07T13:12:08.397Z","layout":"post","photos":[],"_id":"cm42hwwuf0020ssnn889wg6xo","content":"<p><img src=\"/images/AT&T.png\"></p>\n<h2 id=\"1、百年帝国\"><a href=\"#1、百年帝国\" class=\"headerlink\" title=\"1、百年帝国\"></a>1、百年帝国</h2><p>&emsp;&emsp;在美国新泽西州，弗洛勒姆帕克占地十几平方公里，大多是芳草地和森林，在森林中央，是一片中等规模临湖的工业园—这可能是世界上最美丽的工业园了。在那里，每天都能看到天鹅在湖中悠闲地游荡，有时还能见到野鹿出没。这里原是石油巨头埃克森美孚（Exxon-Mobil）的地产，1997年，这里来了一个新主人—AT&T实验室。1996年，如日中天的AT&T公司重组，分离成AT&T、朗讯（Lucent Technologies）和NCR三家公司。AT&T旗下举世闻名的科研机构贝尔实验室也被一分为二。朗讯公司获得了一般的科研机构和贝尔实验室的名称。划归AT&T的一半研究室组成了AT&T实验室（后来更名为香农实验室，Shannon Labs）,从原来的默里山（Murray Hill）搬到了弗洛勒姆帕克。在那里，出过11位诺贝尔奖获得者的AT&T实验室，像一颗进入晚年的恒星，爆发出极强的、但也是最后的光辉，然后就迅速地暗淡下来。2005年，AT&T被SBC公司并购，而朗讯则于2006年被法国阿尔卡特（Alcatel）公司并购。2016年，阿尔卡特-朗讯又被诺基亚收购。</p>\n\n<p>&emsp;&emsp;1997年，在AT&T实验室，大家的情绪都很高，实验室的气氛很想10年后的Google和今天的Facebook。不少人的桌旁都放着实验室美丽的夕阳照。如今看来，它似乎预示着一个帝国的黄昏。</p>\n\n<p>&emsp;&emsp;说起美国电话电报公司，即AT&T公司，在美国乃至在世界上几乎无人不知，无人不晓。该公司由亚历山大·贝尔（Alexander Bell）创立于1877年，最初叫贝尔电话公司，1885年因为长途电话业务又设立了子公司AT&T，1994年反垄断拆分之后，公司的主体采用了AT&T的名称。在历史上贝尔电话公司和AT&T常常混用，为了避免以后混淆，我们这里统一采用AT&T的称呼。电话的发明和AT&T公司的建立，第一次实现了远程实时的交互通信（虽然电报比电话出现的早，但它不是实时交互通信），并且促进了社会的进步。</p>\n\n<p>&emsp;&emsp;AT&T自创立第一天起，就是龙头老大，直到它被收购的那一天。但是，AT&T起初的扩张速度远比我们想象地要慢。它用了15年（到1892年）才将生意从纽约地区扩张到美国中部的芝加哥地区（当时从纽约到芝加哥一分钟的通话费用是2美元，而当时1美元的购买力相当于现在的50美元。今天在美国打国际长途，也不过10美分一分钟）。38年后（1915年），它的生意扩展到全国（但是从纽约到旧金山得 电话费高达7美元一分钟）。50年后的1927年，AT&T的长途电话业务扩展到欧洲。</p>\n\n<p>&emsp;&emsp;1925年，AT&T公司成立了研发机构—贝尔实验室。贝尔实验室是历史上最大、最成功的实验室。AT&T从电信业获得了巨额的垄断利润，将销售额的3%用于贝尔实验室的研发工作。在很长一段时间里，贝尔实验室总是用“无须为经费发愁”这一条理由来吸引优秀的科学家到该实验室工作，这使得贝尔实验室不仅在通信领域长期执牛耳，而且在射电天文学、晶体管和半导体、计算机科学等领域也都领先于世界，其闻名于世的发明包括射电天文望远镜、晶体管、数字交换机、计算机的UNIX操作系统和C语言等。此外，贝尔实验室还发现了电子的波动性，提出了信息论，组织发射了第一颗商用通信卫星，铺设了第一条商用光纤。在相当长的时间里，贝尔实验室不仅仅是信息领域科学家最向往的地方，也是基础研究领域学者梦寐以求的地方。那个时代，能进入贝尔实验室是很幸运的。如果确有才华，他可以成为业界的领袖，甚至得到诺贝尔奖、香农奖或图灵奖。即使是一般的研究员和和工程师，也会有很好的收入、可靠的退休保障及受人尊重的社会地位。</p>\n\n<p>&emsp;&emsp;AT&T在很长的时间内通过北方电信垄断美国并且控制加拿大的电话业务。1984年，根据联邦反垄断法的要求，AT&T的市话业务被剥离，根据地区划分成8家小贝尔公司。这是贝尔电话公司才正式更名为AT&T公司。</p>\n\n<p>&emsp;&emsp;根据当年的划分原则，8家小贝尔公司从事市话业务，AT&T（被称为老祖母）从事长途电话业务和通信设备的制造。贝尔实验室划给了AT&T，并从贝尔实验室分出了一部分，被称为贝尔核心（Bell Core），划给8家小贝尔公司。不久，贝尔核心因为“8个和尚没水喝”，很快就退出了历史舞台，这当然是后话了。</p>\n\n<p>&emsp;&emsp;现在，大多数认为，这是AT&T走向衰落的开始。但我认为，AT&T并没有因此而伤筋动骨。事实上，在接下来的10年里，AT&T的业务得到了长足的发展。虽然丢掉了市话服务，但是，它作为一家通信设备供应商，依然是市话通信设备几乎唯一的供应商，在海外市场也依然是龙头老大。在长途电话业务中，虽然有MCI和Sprint两个竞争者，AT&T仍然控制着美国大部分市场，利润十分可观，足以维持贝尔实验室高额的研发费用，使得AT&T在通信和半导体技术上仍然领先全球。到1994年，他的营业额达到近700亿美元，大致等同于08年金融危机前它和SBC合并后的总营业额。</p>\n\n<p>&emsp;&emsp;这一年，贝尔实验室的总裁梅毅强博士率庞大的代表团访问中国，当时的国家主席江泽民亲自接见了他，国家主席接见一家公司下属机构的总裁，这可能是空前绝后的，足以说明对AT&T的重视。AT&T当时可以说是风光到了极点。</p>\n\n<p>&emsp;&emsp;既然1984年AT&T公司的那次分家并没有让公司伤筋动骨，那么AT&T的衰落又是什么原因造成的呢？</p>","excerpt":"","more":"<p><img src=\"/images/AT&T.png\"></p>\n<h2 id=\"1、百年帝国\"><a href=\"#1、百年帝国\" class=\"headerlink\" title=\"1、百年帝国\"></a>1、百年帝国</h2><p>&emsp;&emsp;在美国新泽西州，弗洛勒姆帕克占地十几平方公里，大多是芳草地和森林，在森林中央，是一片中等规模临湖的工业园—这可能是世界上最美丽的工业园了。在那里，每天都能看到天鹅在湖中悠闲地游荡，有时还能见到野鹿出没。这里原是石油巨头埃克森美孚（Exxon-Mobil）的地产，1997年，这里来了一个新主人—AT&T实验室。1996年，如日中天的AT&T公司重组，分离成AT&T、朗讯（Lucent Technologies）和NCR三家公司。AT&T旗下举世闻名的科研机构贝尔实验室也被一分为二。朗讯公司获得了一般的科研机构和贝尔实验室的名称。划归AT&T的一半研究室组成了AT&T实验室（后来更名为香农实验室，Shannon Labs）,从原来的默里山（Murray Hill）搬到了弗洛勒姆帕克。在那里，出过11位诺贝尔奖获得者的AT&T实验室，像一颗进入晚年的恒星，爆发出极强的、但也是最后的光辉，然后就迅速地暗淡下来。2005年，AT&T被SBC公司并购，而朗讯则于2006年被法国阿尔卡特（Alcatel）公司并购。2016年，阿尔卡特-朗讯又被诺基亚收购。</p>\n\n<p>&emsp;&emsp;1997年，在AT&T实验室，大家的情绪都很高，实验室的气氛很想10年后的Google和今天的Facebook。不少人的桌旁都放着实验室美丽的夕阳照。如今看来，它似乎预示着一个帝国的黄昏。</p>\n\n<p>&emsp;&emsp;说起美国电话电报公司，即AT&T公司，在美国乃至在世界上几乎无人不知，无人不晓。该公司由亚历山大·贝尔（Alexander Bell）创立于1877年，最初叫贝尔电话公司，1885年因为长途电话业务又设立了子公司AT&T，1994年反垄断拆分之后，公司的主体采用了AT&T的名称。在历史上贝尔电话公司和AT&T常常混用，为了避免以后混淆，我们这里统一采用AT&T的称呼。电话的发明和AT&T公司的建立，第一次实现了远程实时的交互通信（虽然电报比电话出现的早，但它不是实时交互通信），并且促进了社会的进步。</p>\n\n<p>&emsp;&emsp;AT&T自创立第一天起，就是龙头老大，直到它被收购的那一天。但是，AT&T起初的扩张速度远比我们想象地要慢。它用了15年（到1892年）才将生意从纽约地区扩张到美国中部的芝加哥地区（当时从纽约到芝加哥一分钟的通话费用是2美元，而当时1美元的购买力相当于现在的50美元。今天在美国打国际长途，也不过10美分一分钟）。38年后（1915年），它的生意扩展到全国（但是从纽约到旧金山得 电话费高达7美元一分钟）。50年后的1927年，AT&T的长途电话业务扩展到欧洲。</p>\n\n<p>&emsp;&emsp;1925年，AT&T公司成立了研发机构—贝尔实验室。贝尔实验室是历史上最大、最成功的实验室。AT&T从电信业获得了巨额的垄断利润，将销售额的3%用于贝尔实验室的研发工作。在很长一段时间里，贝尔实验室总是用“无须为经费发愁”这一条理由来吸引优秀的科学家到该实验室工作，这使得贝尔实验室不仅在通信领域长期执牛耳，而且在射电天文学、晶体管和半导体、计算机科学等领域也都领先于世界，其闻名于世的发明包括射电天文望远镜、晶体管、数字交换机、计算机的UNIX操作系统和C语言等。此外，贝尔实验室还发现了电子的波动性，提出了信息论，组织发射了第一颗商用通信卫星，铺设了第一条商用光纤。在相当长的时间里，贝尔实验室不仅仅是信息领域科学家最向往的地方，也是基础研究领域学者梦寐以求的地方。那个时代，能进入贝尔实验室是很幸运的。如果确有才华，他可以成为业界的领袖，甚至得到诺贝尔奖、香农奖或图灵奖。即使是一般的研究员和和工程师，也会有很好的收入、可靠的退休保障及受人尊重的社会地位。</p>\n\n<p>&emsp;&emsp;AT&T在很长的时间内通过北方电信垄断美国并且控制加拿大的电话业务。1984年，根据联邦反垄断法的要求，AT&T的市话业务被剥离，根据地区划分成8家小贝尔公司。这是贝尔电话公司才正式更名为AT&T公司。</p>\n\n<p>&emsp;&emsp;根据当年的划分原则，8家小贝尔公司从事市话业务，AT&T（被称为老祖母）从事长途电话业务和通信设备的制造。贝尔实验室划给了AT&T，并从贝尔实验室分出了一部分，被称为贝尔核心（Bell Core），划给8家小贝尔公司。不久，贝尔核心因为“8个和尚没水喝”，很快就退出了历史舞台，这当然是后话了。</p>\n\n<p>&emsp;&emsp;现在，大多数认为，这是AT&T走向衰落的开始。但我认为，AT&T并没有因此而伤筋动骨。事实上，在接下来的10年里，AT&T的业务得到了长足的发展。虽然丢掉了市话服务，但是，它作为一家通信设备供应商，依然是市话通信设备几乎唯一的供应商，在海外市场也依然是龙头老大。在长途电话业务中，虽然有MCI和Sprint两个竞争者，AT&T仍然控制着美国大部分市场，利润十分可观，足以维持贝尔实验室高额的研发费用，使得AT&T在通信和半导体技术上仍然领先全球。到1994年，他的营业额达到近700亿美元，大致等同于08年金融危机前它和SBC合并后的总营业额。</p>\n\n<p>&emsp;&emsp;这一年，贝尔实验室的总裁梅毅强博士率庞大的代表团访问中国，当时的国家主席江泽民亲自接见了他，国家主席接见一家公司下属机构的总裁，这可能是空前绝后的，足以说明对AT&T的重视。AT&T当时可以说是风光到了极点。</p>\n\n<p>&emsp;&emsp;既然1984年AT&T公司的那次分家并没有让公司伤筋动骨，那么AT&T的衰落又是什么原因造成的呢？</p>"},{"title":"三、audio标签的使用","comments":1,"summary":"今天用audio实现了一个功能。平常我们用audio的时候啊，都是一次性用到好几个，那么一个页面有好几个音频标签的时候，怎么控制单一音频的播放暂停呢？怎么控制每次点击是否从头播放呢？怎么协调所有音频的播放和暂停呢？","_content":"\n# 一、audio标签的使用\n## 1、简单介绍\n<p>&emsp;&emsp;我太牛了，我太牛了，我太牛了！！！！！！！！！！！！！！！！！！！！！！！！！！！今天用audio实现了一个功能。平常我们用audio的时候啊，都是一次性用到好几个，那么一个页面有好几个音频标签的时候，怎么控制单一音频的播放暂停呢？怎么控制每次点击是否从头播放呢？怎么协调所有音频的播放和暂停呢？？？？来来来，教学教学。那么音频的使用分为好几个部分，首先你得调用音频组件，其次你得上传音频给后端，再获取后端的音频地址，将地址赋值给audio标签的src属性，点击就可以播放音频啦。</p>\n\n### 1.1、上传音频\n<p>&emsp;&emsp;那我们从第一步开始，首先你想播放音频，必须得有音频，那么在实际工作中我们访问的音频一定是后端传过来的，那么后端的音频又是从哪里来的呢，要么本来就有默认的，要么就是用户自己导入的音频。那我们先来看怎么导入音频吧。xdm，上代码！！！</p>\n<p>&emsp;&emsp;上传首先要用到upload组件，而且考虑的比较细致的话，上传的过程还是比较复杂的，对了我这里用的是iview的组件库，关于upload不熟悉的可以去官网看啦，这里简单解释一下组件绑定的属性都是什么意思。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>action：</strong>那么这个呢就是我们上传的地址音频上传到哪里去（后端提供）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>multiple：</strong>这个是指是否支持上传多个文件。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>show-upload-list：</strong>是否显示已上传文件列表。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>accept：</strong>接受上传的文件类型有哪些（一般音频的话就是MP3, wov, Wav）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>format：</strong>支持的文件类型，与accept不同的是，format是识别文件的后缀名，accept为input标签原生的accept属性，会在选择文件时过滤，可以两者结合使用。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>max-size：</strong>文件大小限制，单位kb。</p>\n<p>&emsp;&emsp;好的，了解了基本属性后，那我们再来说一说这里面涉及到的很多的回调函数啊。</p>\n<p>&emsp;&emsp;<strong>1、on-exceeded-size：</strong>这个是文件大小校验失败的回调，文件超出指定大小限制时的钩子。</p>\n<p>&emsp;&emsp;<strong>2、on-format-error：</strong>文件格式验证失败时的钩子。</p>\n<p>&emsp;&emsp;<strong>3、handleSuccess：</strong>文件上传成功后的钩子，注意response返回值。</p>\n<p>&emsp;&emsp;<strong>4、on-error：</strong>文件上传失败后的钩子。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <Upload ref=\"audioUpload\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"()=>exceededSizeFun('audio')\" :on-format-error=\"()=>formatError('audio')\" :on-success=\"(response)=>handleSuccess(response,'audio',index,audioIndex)\" :on-error=\"handleError\">\n      <Button>导入音频</Button>\n    </Upload>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {}\n})\nexport default class TestCase extends Vue {\n\n  //upload属性参数\n  public get uploadObj (): {\n    action: string;\n    accept: string;\n    maxSize: number;\n    format: Array<string>;\n    data: any;\n    } {\n     return {\n       action: `/graphApi/word-card/word/${this.id}/uploadFile`,\n       accept: '.MP3,.wov,.Wav',\n       format: ['MP3', 'wov', 'Wav'],\n       maxSize: 1024 * 10,\n       data: {\n         id: this.id\n       }\n     }\n   }\n\n  //文件大小校验失败回调\n  public exceededSizeFun (type: string): void {\n    this.$Message.warning(\n      `文件大小不能超过${(this[type === 'audio' ? 'uploadObj' : 'imageUploadObj'] as any).maxSize / 1024}M`\n    );\n  }\n\n  // 文件格式不对回调\n  public formatError (type: string): void {\n    this.$Message.warning(\n      `只支持上传${(this[type === 'audio' ? 'uploadObj' : 'imageUploadObj'] as any).format.join('、')}格式的文件！`\n    );\n  }\n\n  // 上传成功的回调（这里的参数大家可能看不懂，我这里传参主要用到index和audioIndex，这跟我的数据结构有关，大家不用太关注，我拿到这两个索引是为了把数据改了）\n  //大家只要关注response就好了，这是我们上传成功后的返回值，这个后面播放音频是要用到的\n  public handleSuccess (response, type, index, audioIndex) {\n    if (response.status === 200) {\n      const { data } = response;\n      this.$set(this.data[index].audioMessage[audioIndex], 'audioPath', data);\n    }\n  }\n\n  // 上传失败\n  public handleError (): void {\n    this.$Message.error('上传失败，请重新上传！');\n  }\n}\n<script>\n```\n\n### 1.2、引用音频标签\n<p>&emsp;&emsp;通过上面的代码，我们已经实现了上传音频。那么接下俩我们使用音频这个标签呢？，直接看代码啊，我们对着代码来说啊。这里我们引用了audio标签，并且只给了src属性，这里调用了getPath方法，那么这个方法的参数其实就是handleSuccess的返回值response结构出来的data，通过getPath这个方法（里面做了一些判断，不用在意这个根据实际情况而定）我们会调用接口拿到这个音频的播放地址，这样就可以播放了（播放和暂停待会放在第三部分一起说）,对了音频有两个特别重要的属性，我在这里简单的说一下，就是currentTime和duration，分别是指当前音频播放的时常和当前音频的总时长，这两个在实际工作中对我们做一些判断是很有作用的。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <audio style=\"display:none\" :src=\"getPath(audioPath)\"></audio>\n    <Upload ref=\"audioUpload\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"()=>exceededSizeFun('audio')\" :on-format-error=\"()=>formatError('audio')\" :on-success=\"(response)=>handleSuccess(response,'audio',index,audioIndex)\" :on-error=\"handleError\">\n      <Button>导入音频</Button>\n    </Upload>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n\n  //获取音频播放路径\n  public getPath (path: string) {\n    let finalPath = '';\n    if (path) {\n      if (path.indexOf('https://') === 0 || path.indexOf('http://') === 0) {\n        finalPath = path;\n      } else {\n        //这里就是调用接口返回音频播放地址\n        finalPath = getFileResource(path.split('/')[1], path.split('/')[0]);\n      }\n    }\n    return finalPath;\n  }\n}\n<script>\n```\n\n### 1.3、协调播放\n<p>&emsp;&emsp;那么从第二部分我们拿到音频的播放地址了，就可以随意播放音频了，那么怎么播放呢。一般是给音频一个特定的ref，然后用this.$refs去访问音频元素，然后调用它的play（）和pause（）方法，也就是播放和暂停。我这里很有讲究的，直接把注释写代码里了，对着代码看，不然不容易解释。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <audio style=\"display:none\" :src=\"getPath(audioPath)\"></audio>\n    <Button type=\"primary\" @click=\"playAudio(index,audioIndex)\">播放音频</Button>\n    <Upload ref=\"audioUpload\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"()=>exceededSizeFun('audio')\" :on-format-error=\"()=>formatError('audio')\" :on-success=\"(response)=>handleSuccess(response,'audio',index,audioIndex)\" :on-error=\"handleError\">\n      <Button>导入音频</Button>\n    </Upload>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n\n  //用于判断当前音频是否处在播放状态\n  isPlaying = true;\n  //用于判断是否点击的是同意音频，用于协调不同音频的播放设置\n  tempAudio = '';\n\n  public playAudio(index, audioIndex) {\n    //首先我这里一个页面有好几个音频，所以在点击播放时先拿到所有的音频，依次遍历暂停，防止都在播放干扰\n    const audioAll = document.querySelectorAll('audio');\n    for (const i in audioAll) {\n      if ((typeof audioAll[i]) === 'object') {\n        audioAll[i].pause();\n      }\n    }\n    //利用传进来的两个参数，访问到当前被点击的音频\n    const currentAudio = document.getElementById('audio' + index + audioIndex);\n    if (currentAudio) {\n      //判断：如果这个音频是不是上一次点击的音频\n      if (this.tempAudio === index.toString() + audioIndex.toString()) {\n        //如果点击的是上一次点击的音频，我们要做判断，改音频是不是在播放（isPlaying）属性，如果是就暂停，如果不是就播放\n        if ((currentAudio as any).currentTime === 0 || this.isPlaying === false) {\n          //这里是播放，注意用了currentTime，这个是播放的时间，置为0就是从头播放\n          (currentAudio as any).currentTime = 0;\n          //播放\n          (currentAudio as any).play();\n          //播放的同时，我们给一个状态，表示当前有音频正在播放\n          this.isPlaying = true;\n        } else {\n          (currentAudio as any).pause()\n          //暂停的时候我们也给一个状态，说明当前没有音频在播放\n          this.isPlaying = false;\n        }\n      } else {\n        //如果不是上一次点击的音频，直接走else，那就是直接从头开始播放该音频\n        (currentAudio as any).play();\n        (currentAudio as any).currentTime = 0;\n        this.isPlaying = true;\n      }\n      //这里就是只要点击了音频，那我们就更新一下点击的是哪一个音频，用于与下一次点击时候做对比\n      this.tempAudio = index.toString() + audioIndex.toString()\n    }\n  }\n}\n<script>\n```\n\n<p>&emsp;&emsp;好啦，这里简单说一下协调播放后的效果是什么样的。当你点击任何一个音频的时候，其他正在播放的音频会暂停，被点击的音频会从头播放；当一个音频正在播放，我们点击它的时候它会暂停，暂停后你再点击，它会从头播放。当有一个音频在播放时，我们去点击另外一个音频，那么这个音频会暂停，那个被点击的音频会从头播放。</p>","source":"_posts/自定义组件封装/自定义组件封装-3、audio标签的使用.md","raw":"---\ntitle: 三、audio标签的使用\ntags: 自定义封装组件\ncategories: 组件封装\ncomments: true\nsummary: 今天用audio实现了一个功能。平常我们用audio的时候啊，都是一次性用到好几个，那么一个页面有好几个音频标签的时候，怎么控制单一音频的播放暂停呢？怎么控制每次点击是否从头播放呢？怎么协调所有音频的播放和暂停呢？\n---\n\n# 一、audio标签的使用\n## 1、简单介绍\n<p>&emsp;&emsp;我太牛了，我太牛了，我太牛了！！！！！！！！！！！！！！！！！！！！！！！！！！！今天用audio实现了一个功能。平常我们用audio的时候啊，都是一次性用到好几个，那么一个页面有好几个音频标签的时候，怎么控制单一音频的播放暂停呢？怎么控制每次点击是否从头播放呢？怎么协调所有音频的播放和暂停呢？？？？来来来，教学教学。那么音频的使用分为好几个部分，首先你得调用音频组件，其次你得上传音频给后端，再获取后端的音频地址，将地址赋值给audio标签的src属性，点击就可以播放音频啦。</p>\n\n### 1.1、上传音频\n<p>&emsp;&emsp;那我们从第一步开始，首先你想播放音频，必须得有音频，那么在实际工作中我们访问的音频一定是后端传过来的，那么后端的音频又是从哪里来的呢，要么本来就有默认的，要么就是用户自己导入的音频。那我们先来看怎么导入音频吧。xdm，上代码！！！</p>\n<p>&emsp;&emsp;上传首先要用到upload组件，而且考虑的比较细致的话，上传的过程还是比较复杂的，对了我这里用的是iview的组件库，关于upload不熟悉的可以去官网看啦，这里简单解释一下组件绑定的属性都是什么意思。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>action：</strong>那么这个呢就是我们上传的地址音频上传到哪里去（后端提供）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>multiple：</strong>这个是指是否支持上传多个文件。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>show-upload-list：</strong>是否显示已上传文件列表。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>accept：</strong>接受上传的文件类型有哪些（一般音频的话就是MP3, wov, Wav）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>format：</strong>支持的文件类型，与accept不同的是，format是识别文件的后缀名，accept为input标签原生的accept属性，会在选择文件时过滤，可以两者结合使用。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>max-size：</strong>文件大小限制，单位kb。</p>\n<p>&emsp;&emsp;好的，了解了基本属性后，那我们再来说一说这里面涉及到的很多的回调函数啊。</p>\n<p>&emsp;&emsp;<strong>1、on-exceeded-size：</strong>这个是文件大小校验失败的回调，文件超出指定大小限制时的钩子。</p>\n<p>&emsp;&emsp;<strong>2、on-format-error：</strong>文件格式验证失败时的钩子。</p>\n<p>&emsp;&emsp;<strong>3、handleSuccess：</strong>文件上传成功后的钩子，注意response返回值。</p>\n<p>&emsp;&emsp;<strong>4、on-error：</strong>文件上传失败后的钩子。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <Upload ref=\"audioUpload\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"()=>exceededSizeFun('audio')\" :on-format-error=\"()=>formatError('audio')\" :on-success=\"(response)=>handleSuccess(response,'audio',index,audioIndex)\" :on-error=\"handleError\">\n      <Button>导入音频</Button>\n    </Upload>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {}\n})\nexport default class TestCase extends Vue {\n\n  //upload属性参数\n  public get uploadObj (): {\n    action: string;\n    accept: string;\n    maxSize: number;\n    format: Array<string>;\n    data: any;\n    } {\n     return {\n       action: `/graphApi/word-card/word/${this.id}/uploadFile`,\n       accept: '.MP3,.wov,.Wav',\n       format: ['MP3', 'wov', 'Wav'],\n       maxSize: 1024 * 10,\n       data: {\n         id: this.id\n       }\n     }\n   }\n\n  //文件大小校验失败回调\n  public exceededSizeFun (type: string): void {\n    this.$Message.warning(\n      `文件大小不能超过${(this[type === 'audio' ? 'uploadObj' : 'imageUploadObj'] as any).maxSize / 1024}M`\n    );\n  }\n\n  // 文件格式不对回调\n  public formatError (type: string): void {\n    this.$Message.warning(\n      `只支持上传${(this[type === 'audio' ? 'uploadObj' : 'imageUploadObj'] as any).format.join('、')}格式的文件！`\n    );\n  }\n\n  // 上传成功的回调（这里的参数大家可能看不懂，我这里传参主要用到index和audioIndex，这跟我的数据结构有关，大家不用太关注，我拿到这两个索引是为了把数据改了）\n  //大家只要关注response就好了，这是我们上传成功后的返回值，这个后面播放音频是要用到的\n  public handleSuccess (response, type, index, audioIndex) {\n    if (response.status === 200) {\n      const { data } = response;\n      this.$set(this.data[index].audioMessage[audioIndex], 'audioPath', data);\n    }\n  }\n\n  // 上传失败\n  public handleError (): void {\n    this.$Message.error('上传失败，请重新上传！');\n  }\n}\n<script>\n```\n\n### 1.2、引用音频标签\n<p>&emsp;&emsp;通过上面的代码，我们已经实现了上传音频。那么接下俩我们使用音频这个标签呢？，直接看代码啊，我们对着代码来说啊。这里我们引用了audio标签，并且只给了src属性，这里调用了getPath方法，那么这个方法的参数其实就是handleSuccess的返回值response结构出来的data，通过getPath这个方法（里面做了一些判断，不用在意这个根据实际情况而定）我们会调用接口拿到这个音频的播放地址，这样就可以播放了（播放和暂停待会放在第三部分一起说）,对了音频有两个特别重要的属性，我在这里简单的说一下，就是currentTime和duration，分别是指当前音频播放的时常和当前音频的总时长，这两个在实际工作中对我们做一些判断是很有作用的。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <audio style=\"display:none\" :src=\"getPath(audioPath)\"></audio>\n    <Upload ref=\"audioUpload\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"()=>exceededSizeFun('audio')\" :on-format-error=\"()=>formatError('audio')\" :on-success=\"(response)=>handleSuccess(response,'audio',index,audioIndex)\" :on-error=\"handleError\">\n      <Button>导入音频</Button>\n    </Upload>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n\n  //获取音频播放路径\n  public getPath (path: string) {\n    let finalPath = '';\n    if (path) {\n      if (path.indexOf('https://') === 0 || path.indexOf('http://') === 0) {\n        finalPath = path;\n      } else {\n        //这里就是调用接口返回音频播放地址\n        finalPath = getFileResource(path.split('/')[1], path.split('/')[0]);\n      }\n    }\n    return finalPath;\n  }\n}\n<script>\n```\n\n### 1.3、协调播放\n<p>&emsp;&emsp;那么从第二部分我们拿到音频的播放地址了，就可以随意播放音频了，那么怎么播放呢。一般是给音频一个特定的ref，然后用this.$refs去访问音频元素，然后调用它的play（）和pause（）方法，也就是播放和暂停。我这里很有讲究的，直接把注释写代码里了，对着代码看，不然不容易解释。</p>\n\n```javascript\n<template>\n  <div class=\"container\">\n    <audio style=\"display:none\" :src=\"getPath(audioPath)\"></audio>\n    <Button type=\"primary\" @click=\"playAudio(index,audioIndex)\">播放音频</Button>\n    <Upload ref=\"audioUpload\" :action=\"uploadObj.action\" :multiple=\"false\" :show-upload-list=\"false\" :accept=\"uploadObj.accept\" :format=\"uploadObj.format\" :max-size=\"uploadObj.maxSize\" :on-exceeded-size=\"()=>exceededSizeFun('audio')\" :on-format-error=\"()=>formatError('audio')\" :on-success=\"(response)=>handleSuccess(response,'audio',index,audioIndex)\" :on-error=\"handleError\">\n      <Button>导入音频</Button>\n    </Upload>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { Vue, Component } from 'vue-property-decorator';\n\n@Component({\n  components: {\n\n  }\n})\nexport default class TestCase extends Vue {\n\n  //用于判断当前音频是否处在播放状态\n  isPlaying = true;\n  //用于判断是否点击的是同意音频，用于协调不同音频的播放设置\n  tempAudio = '';\n\n  public playAudio(index, audioIndex) {\n    //首先我这里一个页面有好几个音频，所以在点击播放时先拿到所有的音频，依次遍历暂停，防止都在播放干扰\n    const audioAll = document.querySelectorAll('audio');\n    for (const i in audioAll) {\n      if ((typeof audioAll[i]) === 'object') {\n        audioAll[i].pause();\n      }\n    }\n    //利用传进来的两个参数，访问到当前被点击的音频\n    const currentAudio = document.getElementById('audio' + index + audioIndex);\n    if (currentAudio) {\n      //判断：如果这个音频是不是上一次点击的音频\n      if (this.tempAudio === index.toString() + audioIndex.toString()) {\n        //如果点击的是上一次点击的音频，我们要做判断，改音频是不是在播放（isPlaying）属性，如果是就暂停，如果不是就播放\n        if ((currentAudio as any).currentTime === 0 || this.isPlaying === false) {\n          //这里是播放，注意用了currentTime，这个是播放的时间，置为0就是从头播放\n          (currentAudio as any).currentTime = 0;\n          //播放\n          (currentAudio as any).play();\n          //播放的同时，我们给一个状态，表示当前有音频正在播放\n          this.isPlaying = true;\n        } else {\n          (currentAudio as any).pause()\n          //暂停的时候我们也给一个状态，说明当前没有音频在播放\n          this.isPlaying = false;\n        }\n      } else {\n        //如果不是上一次点击的音频，直接走else，那就是直接从头开始播放该音频\n        (currentAudio as any).play();\n        (currentAudio as any).currentTime = 0;\n        this.isPlaying = true;\n      }\n      //这里就是只要点击了音频，那我们就更新一下点击的是哪一个音频，用于与下一次点击时候做对比\n      this.tempAudio = index.toString() + audioIndex.toString()\n    }\n  }\n}\n<script>\n```\n\n<p>&emsp;&emsp;好啦，这里简单说一下协调播放后的效果是什么样的。当你点击任何一个音频的时候，其他正在播放的音频会暂停，被点击的音频会从头播放；当一个音频正在播放，我们点击它的时候它会暂停，暂停后你再点击，它会从头播放。当有一个音频在播放时，我们去点击另外一个音频，那么这个音频会暂停，那个被点击的音频会从头播放。</p>","slug":"自定义组件封装/自定义组件封装-3、audio标签的使用","published":1,"date":"2024-11-05T14:59:24.517Z","updated":"2022-12-11T08:37:32.734Z","layout":"post","photos":[],"_id":"cm42hwwug0025ssnn1fo57xyt","content":"<h1 id=\"一、audio标签的使用\"><a href=\"#一、audio标签的使用\" class=\"headerlink\" title=\"一、audio标签的使用\"></a>一、audio标签的使用</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;我太牛了，我太牛了，我太牛了！！！！！！！！！！！！！！！！！！！！！！！！！！！今天用audio实现了一个功能。平常我们用audio的时候啊，都是一次性用到好几个，那么一个页面有好几个音频标签的时候，怎么控制单一音频的播放暂停呢？怎么控制每次点击是否从头播放呢？怎么协调所有音频的播放和暂停呢？？？？来来来，教学教学。那么音频的使用分为好几个部分，首先你得调用音频组件，其次你得上传音频给后端，再获取后端的音频地址，将地址赋值给audio标签的src属性，点击就可以播放音频啦。</p>\n\n<h3 id=\"1-1、上传音频\"><a href=\"#1-1、上传音频\" class=\"headerlink\" title=\"1.1、上传音频\"></a>1.1、上传音频</h3><p>&emsp;&emsp;那我们从第一步开始，首先你想播放音频，必须得有音频，那么在实际工作中我们访问的音频一定是后端传过来的，那么后端的音频又是从哪里来的呢，要么本来就有默认的，要么就是用户自己导入的音频。那我们先来看怎么导入音频吧。xdm，上代码！！！</p>\n<p>&emsp;&emsp;上传首先要用到upload组件，而且考虑的比较细致的话，上传的过程还是比较复杂的，对了我这里用的是iview的组件库，关于upload不熟悉的可以去官网看啦，这里简单解释一下组件绑定的属性都是什么意思。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>action：</strong>那么这个呢就是我们上传的地址音频上传到哪里去（后端提供）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>multiple：</strong>这个是指是否支持上传多个文件。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>show-upload-list：</strong>是否显示已上传文件列表。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>accept：</strong>接受上传的文件类型有哪些（一般音频的话就是MP3, wov, Wav）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>format：</strong>支持的文件类型，与accept不同的是，format是识别文件的后缀名，accept为input标签原生的accept属性，会在选择文件时过滤，可以两者结合使用。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>max-size：</strong>文件大小限制，单位kb。</p>\n<p>&emsp;&emsp;好的，了解了基本属性后，那我们再来说一说这里面涉及到的很多的回调函数啊。</p>\n<p>&emsp;&emsp;<strong>1、on-exceeded-size：</strong>这个是文件大小校验失败的回调，文件超出指定大小限制时的钩子。</p>\n<p>&emsp;&emsp;<strong>2、on-format-error：</strong>文件格式验证失败时的钩子。</p>\n<p>&emsp;&emsp;<strong>3、handleSuccess：</strong>文件上传成功后的钩子，注意response返回值。</p>\n<p>&emsp;&emsp;<strong>4、on-error：</strong>文件上传失败后的钩子。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"audioUpload\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"()=>exceededSizeFun('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"()=>formatError('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response,'audio',index,audioIndex)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">></span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">//upload属性参数</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">get</span> <span class=\"token function\">uploadObj</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/graphApi/word-card/word/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/uploadFile</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> <span class=\"token string\">'.MP3,.wov,.Wav'</span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'MP3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wov'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Wav'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id\n       <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">//文件大小校验失败回调</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">exceededSizeFun</span> <span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">文件大小不能超过</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'audio'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'uploadObj'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'imageUploadObj'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>maxSize <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">M</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 文件格式不对回调</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">formatError</span> <span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">只支持上传</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'audio'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'uploadObj'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'imageUploadObj'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'、'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">格式的文件！</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 上传成功的回调（这里的参数大家可能看不懂，我这里传参主要用到index和audioIndex，这跟我的数据结构有关，大家不用太关注，我拿到这两个索引是为了把数据改了）</span>\n  <span class=\"token comment\">//大家只要关注response就好了，这是我们上传成功后的返回值，这个后面播放音频是要用到的</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">handleSuccess</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> audioIndex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> data <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> response<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>audioMessage<span class=\"token punctuation\">[</span>audioIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'audioPath'</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 上传失败</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">handleError</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'上传失败，请重新上传！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-2、引用音频标签\"><a href=\"#1-2、引用音频标签\" class=\"headerlink\" title=\"1.2、引用音频标签\"></a>1.2、引用音频标签</h3><p>&emsp;&emsp;通过上面的代码，我们已经实现了上传音频。那么接下俩我们使用音频这个标签呢？，直接看代码啊，我们对着代码来说啊。这里我们引用了audio标签，并且只给了src属性，这里调用了getPath方法，那么这个方法的参数其实就是handleSuccess的返回值response结构出来的data，通过getPath这个方法（里面做了一些判断，不用在意这个根据实际情况而定）我们会调用接口拿到这个音频的播放地址，这样就可以播放了（播放和暂停待会放在第三部分一起说）,对了音频有两个特别重要的属性，我在这里简单的说一下，就是currentTime和duration，分别是指当前音频播放的时常和当前音频的总时长，这两个在实际工作中对我们做一些判断是很有作用的。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>audio style<span class=\"token operator\">=</span><span class=\"token string\">\"display:none\"</span> <span class=\"token operator\">:</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"getPath(audioPath)\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>audio<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"audioUpload\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"()=>exceededSizeFun('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"()=>formatError('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response,'audio',index,audioIndex)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">></span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">//获取音频播放路径</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getPath</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> finalPath <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        finalPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//这里就是调用接口返回音频播放地址</span>\n        finalPath <span class=\"token operator\">=</span> <span class=\"token function\">getFileResource</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> finalPath<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-3、协调播放\"><a href=\"#1-3、协调播放\" class=\"headerlink\" title=\"1.3、协调播放\"></a>1.3、协调播放</h3><p>&emsp;&emsp;那么从第二部分我们拿到音频的播放地址了，就可以随意播放音频了，那么怎么播放呢。一般是给音频一个特定的ref，然后用this.$refs去访问音频元素，然后调用它的play（）和pause（）方法，也就是播放和暂停。我这里很有讲究的，直接把注释写代码里了，对着代码看，不然不容易解释。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>audio style<span class=\"token operator\">=</span><span class=\"token string\">\"display:none\"</span> <span class=\"token operator\">:</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"getPath(audioPath)\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>audio<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"playAudio(index,audioIndex)\"</span><span class=\"token operator\">></span>播放音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"audioUpload\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"()=>exceededSizeFun('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"()=>formatError('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response,'audio',index,audioIndex)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">></span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">//用于判断当前音频是否处在播放状态</span>\n  isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//用于判断是否点击的是同意音频，用于协调不同音频的播放设置</span>\n  tempAudio <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">playAudio</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index<span class=\"token punctuation\">,</span> audioIndex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//首先我这里一个页面有好几个音频，所以在点击播放时先拿到所有的音频，依次遍历暂停，防止都在播放干扰</span>\n    <span class=\"token keyword\">const</span> audioAll <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> i <span class=\"token keyword\">in</span> audioAll<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> audioAll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        audioAll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//利用传进来的两个参数，访问到当前被点击的音频</span>\n    <span class=\"token keyword\">const</span> currentAudio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span> <span class=\"token operator\">+</span> index <span class=\"token operator\">+</span> audioIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentAudio<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//判断：如果这个音频是不是上一次点击的音频</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tempAudio <span class=\"token operator\">===</span> index<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> audioIndex<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//如果点击的是上一次点击的音频，我们要做判断，改音频是不是在播放（isPlaying）属性，如果是就暂停，如果不是就播放</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">===</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token comment\">//这里是播放，注意用了currentTime，这个是播放的时间，置为0就是从头播放</span>\n          <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">//播放</span>\n          <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">//播放的同时，我们给一个状态，表示当前有音频正在播放</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token comment\">//暂停的时候我们也给一个状态，说明当前没有音频在播放</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//如果不是上一次点击的音频，直接走else，那就是直接从头开始播放该音频</span>\n        <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token comment\">//这里就是只要点击了音频，那我们就更新一下点击的是哪一个音频，用于与下一次点击时候做对比</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tempAudio <span class=\"token operator\">=</span> index<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> audioIndex<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<p>&emsp;&emsp;好啦，这里简单说一下协调播放后的效果是什么样的。当你点击任何一个音频的时候，其他正在播放的音频会暂停，被点击的音频会从头播放；当一个音频正在播放，我们点击它的时候它会暂停，暂停后你再点击，它会从头播放。当有一个音频在播放时，我们去点击另外一个音频，那么这个音频会暂停，那个被点击的音频会从头播放。</p>","excerpt":"","more":"<h1 id=\"一、audio标签的使用\"><a href=\"#一、audio标签的使用\" class=\"headerlink\" title=\"一、audio标签的使用\"></a>一、audio标签的使用</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;我太牛了，我太牛了，我太牛了！！！！！！！！！！！！！！！！！！！！！！！！！！！今天用audio实现了一个功能。平常我们用audio的时候啊，都是一次性用到好几个，那么一个页面有好几个音频标签的时候，怎么控制单一音频的播放暂停呢？怎么控制每次点击是否从头播放呢？怎么协调所有音频的播放和暂停呢？？？？来来来，教学教学。那么音频的使用分为好几个部分，首先你得调用音频组件，其次你得上传音频给后端，再获取后端的音频地址，将地址赋值给audio标签的src属性，点击就可以播放音频啦。</p>\n\n<h3 id=\"1-1、上传音频\"><a href=\"#1-1、上传音频\" class=\"headerlink\" title=\"1.1、上传音频\"></a>1.1、上传音频</h3><p>&emsp;&emsp;那我们从第一步开始，首先你想播放音频，必须得有音频，那么在实际工作中我们访问的音频一定是后端传过来的，那么后端的音频又是从哪里来的呢，要么本来就有默认的，要么就是用户自己导入的音频。那我们先来看怎么导入音频吧。xdm，上代码！！！</p>\n<p>&emsp;&emsp;上传首先要用到upload组件，而且考虑的比较细致的话，上传的过程还是比较复杂的，对了我这里用的是iview的组件库，关于upload不熟悉的可以去官网看啦，这里简单解释一下组件绑定的属性都是什么意思。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>action：</strong>那么这个呢就是我们上传的地址音频上传到哪里去（后端提供）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>multiple：</strong>这个是指是否支持上传多个文件。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>show-upload-list：</strong>是否显示已上传文件列表。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>accept：</strong>接受上传的文件类型有哪些（一般音频的话就是MP3, wov, Wav）。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>format：</strong>支持的文件类型，与accept不同的是，format是识别文件的后缀名，accept为input标签原生的accept属性，会在选择文件时过滤，可以两者结合使用。</p>\n<p>&emsp;&emsp;&emsp;&emsp;<strong>max-size：</strong>文件大小限制，单位kb。</p>\n<p>&emsp;&emsp;好的，了解了基本属性后，那我们再来说一说这里面涉及到的很多的回调函数啊。</p>\n<p>&emsp;&emsp;<strong>1、on-exceeded-size：</strong>这个是文件大小校验失败的回调，文件超出指定大小限制时的钩子。</p>\n<p>&emsp;&emsp;<strong>2、on-format-error：</strong>文件格式验证失败时的钩子。</p>\n<p>&emsp;&emsp;<strong>3、handleSuccess：</strong>文件上传成功后的钩子，注意response返回值。</p>\n<p>&emsp;&emsp;<strong>4、on-error：</strong>文件上传失败后的钩子。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"audioUpload\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"()=>exceededSizeFun('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"()=>formatError('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response,'audio',index,audioIndex)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">></span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">//upload属性参数</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">get</span> <span class=\"token function\">uploadObj</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/graphApi/word-card/word/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/uploadFile</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">accept</span><span class=\"token operator\">:</span> <span class=\"token string\">'.MP3,.wov,.Wav'</span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'MP3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wov'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Wav'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">maxSize</span><span class=\"token operator\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n       <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id\n       <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">//文件大小校验失败回调</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">exceededSizeFun</span> <span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">文件大小不能超过</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'audio'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'uploadObj'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'imageUploadObj'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>maxSize <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">M</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 文件格式不对回调</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">formatError</span> <span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">只支持上传</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'audio'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'uploadObj'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'imageUploadObj'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'、'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">格式的文件！</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 上传成功的回调（这里的参数大家可能看不懂，我这里传参主要用到index和audioIndex，这跟我的数据结构有关，大家不用太关注，我拿到这两个索引是为了把数据改了）</span>\n  <span class=\"token comment\">//大家只要关注response就好了，这是我们上传成功后的返回值，这个后面播放音频是要用到的</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">handleSuccess</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> audioIndex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> data <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> response<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>audioMessage<span class=\"token punctuation\">[</span>audioIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'audioPath'</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 上传失败</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">handleError</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'上传失败，请重新上传！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-2、引用音频标签\"><a href=\"#1-2、引用音频标签\" class=\"headerlink\" title=\"1.2、引用音频标签\"></a>1.2、引用音频标签</h3><p>&emsp;&emsp;通过上面的代码，我们已经实现了上传音频。那么接下俩我们使用音频这个标签呢？，直接看代码啊，我们对着代码来说啊。这里我们引用了audio标签，并且只给了src属性，这里调用了getPath方法，那么这个方法的参数其实就是handleSuccess的返回值response结构出来的data，通过getPath这个方法（里面做了一些判断，不用在意这个根据实际情况而定）我们会调用接口拿到这个音频的播放地址，这样就可以播放了（播放和暂停待会放在第三部分一起说）,对了音频有两个特别重要的属性，我在这里简单的说一下，就是currentTime和duration，分别是指当前音频播放的时常和当前音频的总时长，这两个在实际工作中对我们做一些判断是很有作用的。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>audio style<span class=\"token operator\">=</span><span class=\"token string\">\"display:none\"</span> <span class=\"token operator\">:</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"getPath(audioPath)\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>audio<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"audioUpload\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"()=>exceededSizeFun('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"()=>formatError('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response,'audio',index,audioIndex)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">></span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">//获取音频播放路径</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getPath</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> finalPath <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        finalPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//这里就是调用接口返回音频播放地址</span>\n        finalPath <span class=\"token operator\">=</span> <span class=\"token function\">getFileResource</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> finalPath<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"1-3、协调播放\"><a href=\"#1-3、协调播放\" class=\"headerlink\" title=\"1.3、协调播放\"></a>1.3、协调播放</h3><p>&emsp;&emsp;那么从第二部分我们拿到音频的播放地址了，就可以随意播放音频了，那么怎么播放呢。一般是给音频一个特定的ref，然后用this.$refs去访问音频元素，然后调用它的play（）和pause（）方法，也就是播放和暂停。我这里很有讲究的，直接把注释写代码里了，对着代码看，不然不容易解释。</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>audio style<span class=\"token operator\">=</span><span class=\"token string\">\"display:none\"</span> <span class=\"token operator\">:</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"getPath(audioPath)\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>audio<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"playAudio(index,audioIndex)\"</span><span class=\"token operator\">></span>播放音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Upload ref<span class=\"token operator\">=</span><span class=\"token string\">\"audioUpload\"</span> <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.action\"</span> <span class=\"token operator\">:</span>multiple<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>show<span class=\"token operator\">-</span>upload<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span>accept<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.accept\"</span> <span class=\"token operator\">:</span>format<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.format\"</span> <span class=\"token operator\">:</span>max<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"uploadObj.maxSize\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceeded<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"()=>exceededSizeFun('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>format<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"()=>formatError('audio')\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"(response)=>handleSuccess(response,'audio',index,audioIndex)\"</span> <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>error<span class=\"token operator\">=</span><span class=\"token string\">\"handleError\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">></span>导入音频<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vue<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-property-decorator'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCase</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Vue</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">//用于判断当前音频是否处在播放状态</span>\n  isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//用于判断是否点击的是同意音频，用于协调不同音频的播放设置</span>\n  tempAudio <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">playAudio</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index<span class=\"token punctuation\">,</span> audioIndex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//首先我这里一个页面有好几个音频，所以在点击播放时先拿到所有的音频，依次遍历暂停，防止都在播放干扰</span>\n    <span class=\"token keyword\">const</span> audioAll <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> i <span class=\"token keyword\">in</span> audioAll<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> audioAll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        audioAll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//利用传进来的两个参数，访问到当前被点击的音频</span>\n    <span class=\"token keyword\">const</span> currentAudio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span> <span class=\"token operator\">+</span> index <span class=\"token operator\">+</span> audioIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentAudio<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//判断：如果这个音频是不是上一次点击的音频</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tempAudio <span class=\"token operator\">===</span> index<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> audioIndex<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//如果点击的是上一次点击的音频，我们要做判断，改音频是不是在播放（isPlaying）属性，如果是就暂停，如果不是就播放</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">===</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token comment\">//这里是播放，注意用了currentTime，这个是播放的时间，置为0就是从头播放</span>\n          <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">//播放</span>\n          <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">//播放的同时，我们给一个状态，表示当前有音频正在播放</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token comment\">//暂停的时候我们也给一个状态，说明当前没有音频在播放</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//如果不是上一次点击的音频，直接走else，那就是直接从头开始播放该音频</span>\n        <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span>currentAudio <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token comment\">//这里就是只要点击了音频，那我们就更新一下点击的是哪一个音频，用于与下一次点击时候做对比</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tempAudio <span class=\"token operator\">=</span> index<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> audioIndex<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre>\n\n<p>&emsp;&emsp;好啦，这里简单说一下协调播放后的效果是什么样的。当你点击任何一个音频的时候，其他正在播放的音频会暂停，被点击的音频会从头播放；当一个音频正在播放，我们点击它的时候它会暂停，暂停后你再点击，它会从头播放。当有一个音频在播放时，我们去点击另外一个音频，那么这个音频会暂停，那个被点击的音频会从头播放。</p>"},{"title":"四、基于wavesurfer，regions 封装的可视化音标标注控件","comments":1,"summary":"这个需求本来是要我做的，但是突发不幸，我的腿折了，后来就住院了，这个需求给新来的小伙伴做了。但是这个我很好奇，也不会做，就咨询了小伙伴，他给我讲了讲，这里记录一下的！！！","_content":"\n# 一、基于wavesurfer，regions封装的可视化音标标注控件\n\n## 1、简单介绍\n<p>&emsp;&emsp;基于wavesurfer，regions 封装的可视化音标标注控件。。。。这个案例是公司大佬写的博客，我抄过来，免得以后链接失效，哈哈哈哈哈啊哈。。。。</p>\n\n## 2、基本流程\n### 2.1、先简单看下效果\n<p>1、将一段声频以波形展示在页面上，支持播放/暂停、重放、停止、点击跳转播放</p>\n\n![](/images/wavesurfer_1.gif)\n\n<p>2、支持渲染区域，支持用户手动选择区域和删除区域，支持拖动区域和调整区域大小；当操作区域时，最好能实时循环播放区域</p>\n\n![](/images/wavesurfer_2.gif)\n\n<p>3、点击区域时循环播放本区域，点击区域外时正常播放至结束</p>\n\n![](/images/wavesurfer_3.gif)\n\n### 2.2、Vue实现\n\n```javascript\n<template>\n  <div>\n    <div ref=\"waveformRef\"></div>\n    <div ref=\"waveTimelineRef\"></div>\n    <el-button type=\"primary\" @click=\"wavesurfer.skip(-3)\">后退</el-button>\n    <el-button type=\"primary\" @click=\"wavesurfer.playPause()\">\n      <i class=\"el-icon-video-play\" />\n      播放 / 暂停\n    </el-button> <el-button type=\"primary\" @click=\"wavesurfer.skip(3)\">前进</el-button>\n    <el-button type=\"primary\" @click=\"rebroadcast\">重放</el-button>\n    <el-button type=\"primary\" @click=\"handleStop\">停止</el-button>\n    <el-button @click=\"getRegions\">打印区域</el-button>\n  </div>\n</template>\n \n<script>\nimport WaveSurfer from 'wavesurfer.js'\nimport Region from 'wavesurfer.js/dist/plugin/wavesurfer.regions'\nimport Cursor from 'wavesurfer.js/dist/plugin/wavesurfer.cursor'\nimport Timeline from 'wavesurfer.js/dist/plugin/wavesurfer.timeline'\n\nexport default {\n  props: ['voiceSrc'],\n  data() {\n    return { wavesurfer: null }\n  },\n  mounted() {\n    this.init()\n  },\n  beforeDestroy() {\n    this.wavesurfer && this.wavesurfer.destroy()\n    this.wavesurfer = null\n  },\n  methods: {\n    init() {\n      const container = this.$refs.waveformRef\n      container.addEventListener('click', () => {\n        console.log('点击容器')\n        this.clearLoop()\n      })\n      this.wavesurfer = WaveSurfer.create({\n        container, // 容器，唯一一个必须参数\n        cursorColor: 'red', // 音频光标颜色\n        waveColor: '#ddd', // 波形颜色\n        progressColor: '#bbb', // 已完成播放的波形颜色 当progressColor和waveColor相同时，完全不渲染进度波\n        backend: 'MediaElement',\n        autoCenter: false,\n        plugins: [\n          Region.create({\n            // regionsMinLength: 1.5,\n            regions: [\n              { start: 1, end: 3, color: 'hsla(400, 100%, 30%, 0.5)' },\n              { start: 5, end: 7, color: 'hsla(200, 50%, 70%, 0.4)' }\n            ],\n            dragSelection: true,\n          }),\n          Cursor.create({\n            showTime: true,\n            opacity: 1,\n            customShowTimeStyle: { 'background-color': '#000', color: '#fff', padding: '2px', 'font-size': '10px' }\n          }),\n          Timeline.create({ container: this.$refs.waveTimelineRef })\n        ]\n      })\n\n      this.wavesurfer.load(this.voiceSrc) // 加载音频url\n\n      // 点击区域\n      this.wavesurfer.on('region-click', (region) => {\n        const timer = setTimeout(() => {\n          console.log('定时器')\n          region.playLoop()\n        })\n        this.$once('hook:beforeDestroy', () => {\n          clearTimeout(timer)\n          timer = null\n        })\n      })\n\n      // 完成拖动或者完成大小调整时触发\n      this.wavesurfer.on('region-update-end', (region) => {\n        region.playLoop() // 循环播放选中区域\n        this.createDeleteButton(region)\n      })\n\n      this.wavesurfer.on('ready', () => {\n        // 为区域追加一个删除按钮\n        const regionList = Object.values(this.wavesurfer.regions.list)\n        for (const region of regionList) {\n          this.createDeleteButton(region)\n        }\n      })\n    },\n    // 格式化时间\n    formatTime(seconds) {\n      seconds = Number(seconds)\n      const minutes = Math.floor(seconds / 60)\n      seconds = seconds % 60\n      const secondsStr = Math.round(seconds).toString()\n      secondsStr = seconds.toFixed(2)\n      if (minutes > 0) {\n        return `${minutes < 10 ? '0' + minutes : minutes}:${seconds < 10 ? '0' + secondsStr : secondsStr}`\n      }\n      return `00:${seconds < 10 ? '0' + secondsStr : secondsStr}`\n    },\n    // 给区域创建删除按钮\n    createDeleteButton(region) {\n      if (!region.hasDeleteButton) {\n        const deleteButton = region.element.appendChild(document.createElement('button'))\n        deleteButton.innerText = '删除'\n        deleteButton.addEventListener('click', (e) => {\n          e.stopPropagation()\n          this.$confirm('确认删除此区域嘛?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => { region.remove() }).catch(() => { })\n        })\n        const css = { float: 'right', position: 'relative', cursor: 'pointer', color: 'red' }\n        region.style(deleteButton, css)\n        region.hasDeleteButton = true\n      }\n    },\n    // 获取区域列表\n    getRegions() {\n      const regionList = Object.values(this.wavesurfer.regions.list)\n      console.log(regionList)\n    },\n    // 重放\n    rebroadcast() {\n      this.clearLoop()\n      this.wavesurfer.play(0)\n    },\n    // 停止\n    handleStop() {\n      this.clearLoop()\n      this.wavesurfer.stop()\n    },\n    // 设置每个区域的loop为false\n    clearLoop() {\n      const regionList = Object.values(this.wavesurfer.regions.list)\n      for (const item of regionList) item.loop = false\n    }\n  }\n}\n</script>\n```\n\n### 2.3、重点描述\n#### 2.3.1、实例方法\n<p>&emsp;&emsp;playPause 暂停时播放，播放时暂停；play(0) 从0开始播放；stop() 停止；skip() 正数为前进，负数为后退！</p>\n\n#### 2.3.2、区域的删除按钮怎么添加的\n<p>&emsp;&emsp;createDeleteButton函数用于创建button按钮，region.element可以用来appendChild节点；监听ready事件，这里可以获取到已有的区域列表，循环添加按钮；新添加的区域，会触发region-update-end事件，回调函数的参数是region，这里可以再次调用createDeleteButton函数。</p>\n\n#### 2.3.3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\n<p>&emsp;&emsp;调用region.playLoop()即可！</p>\n\n#### 2.3.4、点击区域时循环播放本区域，点击区域外时正常播放至结束\n<p>&emsp;&emsp;clearLoop函数用于将每个区域中的loop设置为false，playLoop方法会将当前区域的loop设置为true；当点击区域外时，我在container的click事件回调中调用clearLoop，这样就可以正常播放至结束；当点击区域时，在定时器中调用playLoop方法，便又可以循环播放本区域。</p>\n\n### 2.4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\n#### 2.4.1、先看效果\n![](/images/wavesurfer_4.gif)\n\n#### 2.4.2、代码实现\n<p>&emsp;&emsp;还是在region-update-end事件中处理！</p>\n\n```javascript\n// 完成拖动或者完成大小调整时触发\nthis.wavesurfer.on('region-update-end', (region) => {\n  // region.playLoop() // 循环播放选中区域\n  this.createDeleteButton(region);\n\n  const { prevElement, nextElement, prevRegionId, nextRegionId } = this.getPrevAndNextElement(region) // 获取相邻的两个节点\n  if (prevElement && prevElement.className === 'wavesurfer-region') { // 和前一个dom对齐\n    const prevRegion = this.getRegion(prevRegionId)\n    if (region.start < prevRegion.end) {\n      prevRegion.update({ start: prevRegion.start, end: region.start })\n    }\n  }\n  \n  if (nextElement && nextElement.className === 'wavesurfer-region') { // 和后一个dom对齐\n    const nextRegion = this.getRegion(nextRegionId)\n    if (region.end > nextRegion.start) {\n      nextRegion.update({ start: region.end, end: nextRegion.end })\n    }\n  }\n})\n\n\n// 根据区域id，获取区域实例\ngetRegion(id) {\n  return this.wavesurfer.regions.list[id]\n},\n// 获取当前region的上一个region和下一个region\ngetPrevAndNextElement(currentRegion) {\n  const regionList = Object.entries(this.wavesurfer.regions.list)\n  const prevList = [], nextList = []\n  for (const [key, region] of regionList) {\n    if (key !== currentRegion.id) {\n      if (region.start < currentRegion.start) {\n        prevList.push({ key, val: currentRegion.start - region.start })\n      } else {\n        nextList.push({ key, val: region.end - currentRegion.end })\n      }\n    }\n  }\n  const prevListSort = this.sortArr(prevList, 'val'), nextListSort = this.sortArr(nextList, 'val') // 排序后的prevList和nextList\n  const prevRegionId = prevListSort ? prevListSort[0].key : null\n  const nextRegionId = nextListSort ? nextListSort[0].key : null\n  const regionDOMList = Array.from(document.querySelectorAll('.wavesurfer-region'))\n  const prevElement = regionDOMList.find(regionDOM => regionDOM.getAttribute('data-id') === prevRegionId)\n  const nextElement = regionDOMList.find(regionDOM => regionDOM.getAttribute('data-id') === nextRegionId)\n  return { prevRegionId, nextRegionId, prevElement, nextElement }\n},\n// 数组对象根据指定属性值进行升序排序\nsortArr(list, property) {\n  if (list.length) {\n    return [...list].sort((a, b) => a[property] - b[property])\n  } else {\n    return null\n  }\n},\n\n```\n\n### 注意：需要提前引入wavesurfer、wavesurfer.regions 两个文件","source":"_posts/自定义组件封装/自定义组件封装-4、基于wavesurfer，regions 封装的可视化音标标注控件.md","raw":"---\ntitle: 四、基于wavesurfer，regions 封装的可视化音标标注控件\ntags: 自定义封装组件\ncategories: 组件封装\ncomments: true\nsummary: 这个需求本来是要我做的，但是突发不幸，我的腿折了，后来就住院了，这个需求给新来的小伙伴做了。但是这个我很好奇，也不会做，就咨询了小伙伴，他给我讲了讲，这里记录一下的！！！\n---\n\n# 一、基于wavesurfer，regions封装的可视化音标标注控件\n\n## 1、简单介绍\n<p>&emsp;&emsp;基于wavesurfer，regions 封装的可视化音标标注控件。。。。这个案例是公司大佬写的博客，我抄过来，免得以后链接失效，哈哈哈哈哈啊哈。。。。</p>\n\n## 2、基本流程\n### 2.1、先简单看下效果\n<p>1、将一段声频以波形展示在页面上，支持播放/暂停、重放、停止、点击跳转播放</p>\n\n![](/images/wavesurfer_1.gif)\n\n<p>2、支持渲染区域，支持用户手动选择区域和删除区域，支持拖动区域和调整区域大小；当操作区域时，最好能实时循环播放区域</p>\n\n![](/images/wavesurfer_2.gif)\n\n<p>3、点击区域时循环播放本区域，点击区域外时正常播放至结束</p>\n\n![](/images/wavesurfer_3.gif)\n\n### 2.2、Vue实现\n\n```javascript\n<template>\n  <div>\n    <div ref=\"waveformRef\"></div>\n    <div ref=\"waveTimelineRef\"></div>\n    <el-button type=\"primary\" @click=\"wavesurfer.skip(-3)\">后退</el-button>\n    <el-button type=\"primary\" @click=\"wavesurfer.playPause()\">\n      <i class=\"el-icon-video-play\" />\n      播放 / 暂停\n    </el-button> <el-button type=\"primary\" @click=\"wavesurfer.skip(3)\">前进</el-button>\n    <el-button type=\"primary\" @click=\"rebroadcast\">重放</el-button>\n    <el-button type=\"primary\" @click=\"handleStop\">停止</el-button>\n    <el-button @click=\"getRegions\">打印区域</el-button>\n  </div>\n</template>\n \n<script>\nimport WaveSurfer from 'wavesurfer.js'\nimport Region from 'wavesurfer.js/dist/plugin/wavesurfer.regions'\nimport Cursor from 'wavesurfer.js/dist/plugin/wavesurfer.cursor'\nimport Timeline from 'wavesurfer.js/dist/plugin/wavesurfer.timeline'\n\nexport default {\n  props: ['voiceSrc'],\n  data() {\n    return { wavesurfer: null }\n  },\n  mounted() {\n    this.init()\n  },\n  beforeDestroy() {\n    this.wavesurfer && this.wavesurfer.destroy()\n    this.wavesurfer = null\n  },\n  methods: {\n    init() {\n      const container = this.$refs.waveformRef\n      container.addEventListener('click', () => {\n        console.log('点击容器')\n        this.clearLoop()\n      })\n      this.wavesurfer = WaveSurfer.create({\n        container, // 容器，唯一一个必须参数\n        cursorColor: 'red', // 音频光标颜色\n        waveColor: '#ddd', // 波形颜色\n        progressColor: '#bbb', // 已完成播放的波形颜色 当progressColor和waveColor相同时，完全不渲染进度波\n        backend: 'MediaElement',\n        autoCenter: false,\n        plugins: [\n          Region.create({\n            // regionsMinLength: 1.5,\n            regions: [\n              { start: 1, end: 3, color: 'hsla(400, 100%, 30%, 0.5)' },\n              { start: 5, end: 7, color: 'hsla(200, 50%, 70%, 0.4)' }\n            ],\n            dragSelection: true,\n          }),\n          Cursor.create({\n            showTime: true,\n            opacity: 1,\n            customShowTimeStyle: { 'background-color': '#000', color: '#fff', padding: '2px', 'font-size': '10px' }\n          }),\n          Timeline.create({ container: this.$refs.waveTimelineRef })\n        ]\n      })\n\n      this.wavesurfer.load(this.voiceSrc) // 加载音频url\n\n      // 点击区域\n      this.wavesurfer.on('region-click', (region) => {\n        const timer = setTimeout(() => {\n          console.log('定时器')\n          region.playLoop()\n        })\n        this.$once('hook:beforeDestroy', () => {\n          clearTimeout(timer)\n          timer = null\n        })\n      })\n\n      // 完成拖动或者完成大小调整时触发\n      this.wavesurfer.on('region-update-end', (region) => {\n        region.playLoop() // 循环播放选中区域\n        this.createDeleteButton(region)\n      })\n\n      this.wavesurfer.on('ready', () => {\n        // 为区域追加一个删除按钮\n        const regionList = Object.values(this.wavesurfer.regions.list)\n        for (const region of regionList) {\n          this.createDeleteButton(region)\n        }\n      })\n    },\n    // 格式化时间\n    formatTime(seconds) {\n      seconds = Number(seconds)\n      const minutes = Math.floor(seconds / 60)\n      seconds = seconds % 60\n      const secondsStr = Math.round(seconds).toString()\n      secondsStr = seconds.toFixed(2)\n      if (minutes > 0) {\n        return `${minutes < 10 ? '0' + minutes : minutes}:${seconds < 10 ? '0' + secondsStr : secondsStr}`\n      }\n      return `00:${seconds < 10 ? '0' + secondsStr : secondsStr}`\n    },\n    // 给区域创建删除按钮\n    createDeleteButton(region) {\n      if (!region.hasDeleteButton) {\n        const deleteButton = region.element.appendChild(document.createElement('button'))\n        deleteButton.innerText = '删除'\n        deleteButton.addEventListener('click', (e) => {\n          e.stopPropagation()\n          this.$confirm('确认删除此区域嘛?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => { region.remove() }).catch(() => { })\n        })\n        const css = { float: 'right', position: 'relative', cursor: 'pointer', color: 'red' }\n        region.style(deleteButton, css)\n        region.hasDeleteButton = true\n      }\n    },\n    // 获取区域列表\n    getRegions() {\n      const regionList = Object.values(this.wavesurfer.regions.list)\n      console.log(regionList)\n    },\n    // 重放\n    rebroadcast() {\n      this.clearLoop()\n      this.wavesurfer.play(0)\n    },\n    // 停止\n    handleStop() {\n      this.clearLoop()\n      this.wavesurfer.stop()\n    },\n    // 设置每个区域的loop为false\n    clearLoop() {\n      const regionList = Object.values(this.wavesurfer.regions.list)\n      for (const item of regionList) item.loop = false\n    }\n  }\n}\n</script>\n```\n\n### 2.3、重点描述\n#### 2.3.1、实例方法\n<p>&emsp;&emsp;playPause 暂停时播放，播放时暂停；play(0) 从0开始播放；stop() 停止；skip() 正数为前进，负数为后退！</p>\n\n#### 2.3.2、区域的删除按钮怎么添加的\n<p>&emsp;&emsp;createDeleteButton函数用于创建button按钮，region.element可以用来appendChild节点；监听ready事件，这里可以获取到已有的区域列表，循环添加按钮；新添加的区域，会触发region-update-end事件，回调函数的参数是region，这里可以再次调用createDeleteButton函数。</p>\n\n#### 2.3.3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\n<p>&emsp;&emsp;调用region.playLoop()即可！</p>\n\n#### 2.3.4、点击区域时循环播放本区域，点击区域外时正常播放至结束\n<p>&emsp;&emsp;clearLoop函数用于将每个区域中的loop设置为false，playLoop方法会将当前区域的loop设置为true；当点击区域外时，我在container的click事件回调中调用clearLoop，这样就可以正常播放至结束；当点击区域时，在定时器中调用playLoop方法，便又可以循环播放本区域。</p>\n\n### 2.4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\n#### 2.4.1、先看效果\n![](/images/wavesurfer_4.gif)\n\n#### 2.4.2、代码实现\n<p>&emsp;&emsp;还是在region-update-end事件中处理！</p>\n\n```javascript\n// 完成拖动或者完成大小调整时触发\nthis.wavesurfer.on('region-update-end', (region) => {\n  // region.playLoop() // 循环播放选中区域\n  this.createDeleteButton(region);\n\n  const { prevElement, nextElement, prevRegionId, nextRegionId } = this.getPrevAndNextElement(region) // 获取相邻的两个节点\n  if (prevElement && prevElement.className === 'wavesurfer-region') { // 和前一个dom对齐\n    const prevRegion = this.getRegion(prevRegionId)\n    if (region.start < prevRegion.end) {\n      prevRegion.update({ start: prevRegion.start, end: region.start })\n    }\n  }\n  \n  if (nextElement && nextElement.className === 'wavesurfer-region') { // 和后一个dom对齐\n    const nextRegion = this.getRegion(nextRegionId)\n    if (region.end > nextRegion.start) {\n      nextRegion.update({ start: region.end, end: nextRegion.end })\n    }\n  }\n})\n\n\n// 根据区域id，获取区域实例\ngetRegion(id) {\n  return this.wavesurfer.regions.list[id]\n},\n// 获取当前region的上一个region和下一个region\ngetPrevAndNextElement(currentRegion) {\n  const regionList = Object.entries(this.wavesurfer.regions.list)\n  const prevList = [], nextList = []\n  for (const [key, region] of regionList) {\n    if (key !== currentRegion.id) {\n      if (region.start < currentRegion.start) {\n        prevList.push({ key, val: currentRegion.start - region.start })\n      } else {\n        nextList.push({ key, val: region.end - currentRegion.end })\n      }\n    }\n  }\n  const prevListSort = this.sortArr(prevList, 'val'), nextListSort = this.sortArr(nextList, 'val') // 排序后的prevList和nextList\n  const prevRegionId = prevListSort ? prevListSort[0].key : null\n  const nextRegionId = nextListSort ? nextListSort[0].key : null\n  const regionDOMList = Array.from(document.querySelectorAll('.wavesurfer-region'))\n  const prevElement = regionDOMList.find(regionDOM => regionDOM.getAttribute('data-id') === prevRegionId)\n  const nextElement = regionDOMList.find(regionDOM => regionDOM.getAttribute('data-id') === nextRegionId)\n  return { prevRegionId, nextRegionId, prevElement, nextElement }\n},\n// 数组对象根据指定属性值进行升序排序\nsortArr(list, property) {\n  if (list.length) {\n    return [...list].sort((a, b) => a[property] - b[property])\n  } else {\n    return null\n  }\n},\n\n```\n\n### 注意：需要提前引入wavesurfer、wavesurfer.regions 两个文件","slug":"自定义组件封装/自定义组件封装-4、基于wavesurfer，regions 封装的可视化音标标注控件","published":1,"date":"2024-11-05T14:59:24.519Z","updated":"2023-05-07T14:22:11.287Z","layout":"post","photos":[],"_id":"cm42hwwuh0028ssnn97ekhywv","content":"<h1 id=\"一、基于wavesurfer，regions封装的可视化音标标注控件\"><a href=\"#一、基于wavesurfer，regions封装的可视化音标标注控件\" class=\"headerlink\" title=\"一、基于wavesurfer，regions封装的可视化音标标注控件\"></a>一、基于wavesurfer，regions封装的可视化音标标注控件</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;基于wavesurfer，regions 封装的可视化音标标注控件。。。。这个案例是公司大佬写的博客，我抄过来，免得以后链接失效，哈哈哈哈哈啊哈。。。。</p>\n\n<h2 id=\"2、基本流程\"><a href=\"#2、基本流程\" class=\"headerlink\" title=\"2、基本流程\"></a>2、基本流程</h2><h3 id=\"2-1、先简单看下效果\"><a href=\"#2-1、先简单看下效果\" class=\"headerlink\" title=\"2.1、先简单看下效果\"></a>2.1、先简单看下效果</h3><p>1、将一段声频以波形展示在页面上，支持播放/暂停、重放、停止、点击跳转播放</p>\n\n<p><img src=\"/images/wavesurfer_1.gif\"></p>\n<p>2、支持渲染区域，支持用户手动选择区域和删除区域，支持拖动区域和调整区域大小；当操作区域时，最好能实时循环播放区域</p>\n\n<p><img src=\"/images/wavesurfer_2.gif\"></p>\n<p>3、点击区域时循环播放本区域，点击区域外时正常播放至结束</p>\n\n<p><img src=\"/images/wavesurfer_3.gif\"></p>\n<h3 id=\"2-2、Vue实现\"><a href=\"#2-2、Vue实现\" class=\"headerlink\" title=\"2.2、Vue实现\"></a>2.2、Vue实现</h3><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div ref<span class=\"token operator\">=</span><span class=\"token string\">\"waveformRef\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div ref<span class=\"token operator\">=</span><span class=\"token string\">\"waveTimelineRef\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"wavesurfer.skip(-3)\"</span><span class=\"token operator\">></span>后退<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"wavesurfer.playPause()\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>i <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"el-icon-video-play\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      播放 <span class=\"token operator\">/</span> 暂停\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"wavesurfer.skip(3)\"</span><span class=\"token operator\">></span>前进<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"rebroadcast\"</span><span class=\"token operator\">></span>重放<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"handleStop\"</span><span class=\"token operator\">></span>停止<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"getRegions\"</span><span class=\"token operator\">></span>打印区域<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n \n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> WaveSurfer <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js'</span>\n<span class=\"token keyword\">import</span> Region <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js/dist/plugin/wavesurfer.regions'</span>\n<span class=\"token keyword\">import</span> Cursor <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js/dist/plugin/wavesurfer.cursor'</span>\n<span class=\"token keyword\">import</span> Timeline <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js/dist/plugin/wavesurfer.timeline'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'voiceSrc'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">wavesurfer</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">beforeDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>waveformRef\n      container<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'点击容器'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer <span class=\"token operator\">=</span> WaveSurfer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        container<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 容器，唯一一个必须参数</span>\n        <span class=\"token literal-property property\">cursorColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 音频光标颜色</span>\n        <span class=\"token literal-property property\">waveColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'#ddd'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 波形颜色</span>\n        <span class=\"token literal-property property\">progressColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'#bbb'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 已完成播放的波形颜色 当progressColor和waveColor相同时，完全不渲染进度波</span>\n        <span class=\"token literal-property property\">backend</span><span class=\"token operator\">:</span> <span class=\"token string\">'MediaElement'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">autoCenter</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          Region<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// regionsMinLength: 1.5,</span>\n            <span class=\"token literal-property property\">regions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'hsla(400, 100%, 30%, 0.5)'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'hsla(200, 50%, 70%, 0.4)'</span> <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">dragSelection</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          Cursor<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">showTime</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">customShowTimeStyle</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string-property property\">'background-color'</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token string\">'2px'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'font-size'</span><span class=\"token operator\">:</span> <span class=\"token string\">'10px'</span> <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          Timeline<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">container</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>waveTimelineRef <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>voiceSrc<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 加载音频url</span>\n\n      <span class=\"token comment\">// 点击区域</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'region-click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'定时器'</span><span class=\"token punctuation\">)</span>\n          region<span class=\"token punctuation\">.</span><span class=\"token function\">playLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hook:beforeDestroy'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span>\n          timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token comment\">// 完成拖动或者完成大小调整时触发</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'region-update-end'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        region<span class=\"token punctuation\">.</span><span class=\"token function\">playLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 循环播放选中区域</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ready'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 为区域追加一个删除按钮</span>\n        <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> region <span class=\"token keyword\">of</span> regionList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 格式化时间</span>\n    <span class=\"token function\">formatTime</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">seconds</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      seconds <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> minutes <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>seconds <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n      seconds <span class=\"token operator\">=</span> seconds <span class=\"token operator\">%</span> <span class=\"token number\">60</span>\n      <span class=\"token keyword\">const</span> secondsStr <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      secondsStr <span class=\"token operator\">=</span> seconds<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>minutes <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>minutes <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> minutes <span class=\"token operator\">:</span> minutes<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>seconds <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> secondsStr <span class=\"token operator\">:</span> secondsStr<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">00:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>seconds <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> secondsStr <span class=\"token operator\">:</span> secondsStr<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 给区域创建删除按钮</span>\n    <span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>region<span class=\"token punctuation\">.</span>hasDeleteButton<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> deleteButton <span class=\"token operator\">=</span> region<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        deleteButton<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token string\">'删除'</span>\n        deleteButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$confirm</span><span class=\"token punctuation\">(</span><span class=\"token string\">'确认删除此区域嘛?'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'提示'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">confirmButtonText</span><span class=\"token operator\">:</span> <span class=\"token string\">'确定'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">cancelButtonText</span><span class=\"token operator\">:</span> <span class=\"token string\">'取消'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'warning'</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> region<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> css <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">float</span><span class=\"token operator\">:</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> <span class=\"token string\">'relative'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">cursor</span><span class=\"token operator\">:</span> <span class=\"token string\">'pointer'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span> <span class=\"token punctuation\">&#125;</span>\n        region<span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span>deleteButton<span class=\"token punctuation\">,</span> css<span class=\"token punctuation\">)</span>\n        region<span class=\"token punctuation\">.</span>hasDeleteButton <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 获取区域列表</span>\n    <span class=\"token function\">getRegions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>regionList<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 重放</span>\n    <span class=\"token function\">rebroadcast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 停止</span>\n    <span class=\"token function\">handleStop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 设置每个区域的loop为false</span>\n    <span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> regionList<span class=\"token punctuation\">)</span> item<span class=\"token punctuation\">.</span>loop <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"2-3、重点描述\"><a href=\"#2-3、重点描述\" class=\"headerlink\" title=\"2.3、重点描述\"></a>2.3、重点描述</h3><h4 id=\"2-3-1、实例方法\"><a href=\"#2-3-1、实例方法\" class=\"headerlink\" title=\"2.3.1、实例方法\"></a>2.3.1、实例方法</h4><p>&emsp;&emsp;playPause 暂停时播放，播放时暂停；play(0) 从0开始播放；stop() 停止；skip() 正数为前进，负数为后退！</p>\n\n<h4 id=\"2-3-2、区域的删除按钮怎么添加的\"><a href=\"#2-3-2、区域的删除按钮怎么添加的\" class=\"headerlink\" title=\"2.3.2、区域的删除按钮怎么添加的\"></a>2.3.2、区域的删除按钮怎么添加的</h4><p>&emsp;&emsp;createDeleteButton函数用于创建button按钮，region.element可以用来appendChild节点；监听ready事件，这里可以获取到已有的区域列表，循环添加按钮；新添加的区域，会触发region-update-end事件，回调函数的参数是region，这里可以再次调用createDeleteButton函数。</p>\n\n<h4 id=\"2-3-3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\"><a href=\"#2-3-3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\" class=\"headerlink\" title=\"2.3.3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\"></a>2.3.3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放</h4><p>&emsp;&emsp;调用region.playLoop()即可！</p>\n\n<h4 id=\"2-3-4、点击区域时循环播放本区域，点击区域外时正常播放至结束\"><a href=\"#2-3-4、点击区域时循环播放本区域，点击区域外时正常播放至结束\" class=\"headerlink\" title=\"2.3.4、点击区域时循环播放本区域，点击区域外时正常播放至结束\"></a>2.3.4、点击区域时循环播放本区域，点击区域外时正常播放至结束</h4><p>&emsp;&emsp;clearLoop函数用于将每个区域中的loop设置为false，playLoop方法会将当前区域的loop设置为true；当点击区域外时，我在container的click事件回调中调用clearLoop，这样就可以正常播放至结束；当点击区域时，在定时器中调用playLoop方法，便又可以循环播放本区域。</p>\n\n<h3 id=\"2-4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\"><a href=\"#2-4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\" class=\"headerlink\" title=\"2.4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\"></a>2.4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附</h3><h4 id=\"2-4-1、先看效果\"><a href=\"#2-4-1、先看效果\" class=\"headerlink\" title=\"2.4.1、先看效果\"></a>2.4.1、先看效果</h4><p><img src=\"/images/wavesurfer_4.gif\"></p>\n<h4 id=\"2-4-2、代码实现\"><a href=\"#2-4-2、代码实现\" class=\"headerlink\" title=\"2.4.2、代码实现\"></a>2.4.2、代码实现</h4><p>&emsp;&emsp;还是在region-update-end事件中处理！</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 完成拖动或者完成大小调整时触发</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'region-update-end'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// region.playLoop() // 循环播放选中区域</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> prevElement<span class=\"token punctuation\">,</span> nextElement<span class=\"token punctuation\">,</span> prevRegionId<span class=\"token punctuation\">,</span> nextRegionId <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPrevAndNextElement</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获取相邻的两个节点</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevElement <span class=\"token operator\">&amp;&amp;</span> prevElement<span class=\"token punctuation\">.</span>className <span class=\"token operator\">===</span> <span class=\"token string\">'wavesurfer-region'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 和前一个dom对齐</span>\n    <span class=\"token keyword\">const</span> prevRegion <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span>prevRegionId<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">.</span>start <span class=\"token operator\">&lt;</span> prevRegion<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      prevRegion<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> prevRegion<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> region<span class=\"token punctuation\">.</span>start <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextElement <span class=\"token operator\">&amp;&amp;</span> nextElement<span class=\"token punctuation\">.</span>className <span class=\"token operator\">===</span> <span class=\"token string\">'wavesurfer-region'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 和后一个dom对齐</span>\n    <span class=\"token keyword\">const</span> nextRegion <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span>nextRegionId<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> nextRegion<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      nextRegion<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> region<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> nextRegion<span class=\"token punctuation\">.</span>end <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">// 根据区域id，获取区域实例</span>\n<span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 获取当前region的上一个region和下一个region</span>\n<span class=\"token function\">getPrevAndNextElement</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">currentRegion</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> prevList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nextList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> region<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> regionList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!==</span> currentRegion<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">.</span>start <span class=\"token operator\">&lt;</span> currentRegion<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        prevList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">val</span><span class=\"token operator\">:</span> currentRegion<span class=\"token punctuation\">.</span>start <span class=\"token operator\">-</span> region<span class=\"token punctuation\">.</span>start <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        nextList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">val</span><span class=\"token operator\">:</span> region<span class=\"token punctuation\">.</span>end <span class=\"token operator\">-</span> currentRegion<span class=\"token punctuation\">.</span>end <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">const</span> prevListSort <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sortArr</span><span class=\"token punctuation\">(</span>prevList<span class=\"token punctuation\">,</span> <span class=\"token string\">'val'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nextListSort <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sortArr</span><span class=\"token punctuation\">(</span>nextList<span class=\"token punctuation\">,</span> <span class=\"token string\">'val'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 排序后的prevList和nextList</span>\n  <span class=\"token keyword\">const</span> prevRegionId <span class=\"token operator\">=</span> prevListSort <span class=\"token operator\">?</span> prevListSort<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>key <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">const</span> nextRegionId <span class=\"token operator\">=</span> nextListSort <span class=\"token operator\">?</span> nextListSort<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>key <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">const</span> regionDOMList <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.wavesurfer-region'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> prevElement <span class=\"token operator\">=</span> regionDOMList<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">regionDOM</span> <span class=\"token operator\">=></span> regionDOM<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-id'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> prevRegionId<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> nextElement <span class=\"token operator\">=</span> regionDOMList<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">regionDOM</span> <span class=\"token operator\">=></span> regionDOM<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-id'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> nextRegionId<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> prevRegionId<span class=\"token punctuation\">,</span> nextRegionId<span class=\"token punctuation\">,</span> prevElement<span class=\"token punctuation\">,</span> nextElement <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 数组对象根据指定属性值进行升序排序</span>\n<span class=\"token function\">sortArr</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> property</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>list<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> b<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n</code></pre>\n\n<h3 id=\"注意：需要提前引入wavesurfer、wavesurfer-regions-两个文件\"><a href=\"#注意：需要提前引入wavesurfer、wavesurfer-regions-两个文件\" class=\"headerlink\" title=\"注意：需要提前引入wavesurfer、wavesurfer.regions 两个文件\"></a>注意：需要提前引入wavesurfer、wavesurfer.regions 两个文件</h3>","excerpt":"","more":"<h1 id=\"一、基于wavesurfer，regions封装的可视化音标标注控件\"><a href=\"#一、基于wavesurfer，regions封装的可视化音标标注控件\" class=\"headerlink\" title=\"一、基于wavesurfer，regions封装的可视化音标标注控件\"></a>一、基于wavesurfer，regions封装的可视化音标标注控件</h1><h2 id=\"1、简单介绍\"><a href=\"#1、简单介绍\" class=\"headerlink\" title=\"1、简单介绍\"></a>1、简单介绍</h2><p>&emsp;&emsp;基于wavesurfer，regions 封装的可视化音标标注控件。。。。这个案例是公司大佬写的博客，我抄过来，免得以后链接失效，哈哈哈哈哈啊哈。。。。</p>\n\n<h2 id=\"2、基本流程\"><a href=\"#2、基本流程\" class=\"headerlink\" title=\"2、基本流程\"></a>2、基本流程</h2><h3 id=\"2-1、先简单看下效果\"><a href=\"#2-1、先简单看下效果\" class=\"headerlink\" title=\"2.1、先简单看下效果\"></a>2.1、先简单看下效果</h3><p>1、将一段声频以波形展示在页面上，支持播放/暂停、重放、停止、点击跳转播放</p>\n\n<p><img src=\"/images/wavesurfer_1.gif\"></p>\n<p>2、支持渲染区域，支持用户手动选择区域和删除区域，支持拖动区域和调整区域大小；当操作区域时，最好能实时循环播放区域</p>\n\n<p><img src=\"/images/wavesurfer_2.gif\"></p>\n<p>3、点击区域时循环播放本区域，点击区域外时正常播放至结束</p>\n\n<p><img src=\"/images/wavesurfer_3.gif\"></p>\n<h3 id=\"2-2、Vue实现\"><a href=\"#2-2、Vue实现\" class=\"headerlink\" title=\"2.2、Vue实现\"></a>2.2、Vue实现</h3><pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div ref<span class=\"token operator\">=</span><span class=\"token string\">\"waveformRef\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div ref<span class=\"token operator\">=</span><span class=\"token string\">\"waveTimelineRef\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"wavesurfer.skip(-3)\"</span><span class=\"token operator\">></span>后退<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"wavesurfer.playPause()\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>i <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"el-icon-video-play\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      播放 <span class=\"token operator\">/</span> 暂停\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"wavesurfer.skip(3)\"</span><span class=\"token operator\">></span>前进<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"rebroadcast\"</span><span class=\"token operator\">></span>重放<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"handleStop\"</span><span class=\"token operator\">></span>停止<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"getRegions\"</span><span class=\"token operator\">></span>打印区域<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n \n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> WaveSurfer <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js'</span>\n<span class=\"token keyword\">import</span> Region <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js/dist/plugin/wavesurfer.regions'</span>\n<span class=\"token keyword\">import</span> Cursor <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js/dist/plugin/wavesurfer.cursor'</span>\n<span class=\"token keyword\">import</span> Timeline <span class=\"token keyword\">from</span> <span class=\"token string\">'wavesurfer.js/dist/plugin/wavesurfer.timeline'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'voiceSrc'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">wavesurfer</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">beforeDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>waveformRef\n      container<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'点击容器'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer <span class=\"token operator\">=</span> WaveSurfer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        container<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 容器，唯一一个必须参数</span>\n        <span class=\"token literal-property property\">cursorColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 音频光标颜色</span>\n        <span class=\"token literal-property property\">waveColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'#ddd'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 波形颜色</span>\n        <span class=\"token literal-property property\">progressColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'#bbb'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 已完成播放的波形颜色 当progressColor和waveColor相同时，完全不渲染进度波</span>\n        <span class=\"token literal-property property\">backend</span><span class=\"token operator\">:</span> <span class=\"token string\">'MediaElement'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">autoCenter</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          Region<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// regionsMinLength: 1.5,</span>\n            <span class=\"token literal-property property\">regions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'hsla(400, 100%, 30%, 0.5)'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'hsla(200, 50%, 70%, 0.4)'</span> <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">dragSelection</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          Cursor<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">showTime</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">customShowTimeStyle</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string-property property\">'background-color'</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token string\">'2px'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'font-size'</span><span class=\"token operator\">:</span> <span class=\"token string\">'10px'</span> <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          Timeline<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">container</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>waveTimelineRef <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>voiceSrc<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 加载音频url</span>\n\n      <span class=\"token comment\">// 点击区域</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'region-click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'定时器'</span><span class=\"token punctuation\">)</span>\n          region<span class=\"token punctuation\">.</span><span class=\"token function\">playLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hook:beforeDestroy'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span>\n          timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token comment\">// 完成拖动或者完成大小调整时触发</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'region-update-end'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        region<span class=\"token punctuation\">.</span><span class=\"token function\">playLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 循环播放选中区域</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ready'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 为区域追加一个删除按钮</span>\n        <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> region <span class=\"token keyword\">of</span> regionList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 格式化时间</span>\n    <span class=\"token function\">formatTime</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">seconds</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      seconds <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> minutes <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>seconds <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n      seconds <span class=\"token operator\">=</span> seconds <span class=\"token operator\">%</span> <span class=\"token number\">60</span>\n      <span class=\"token keyword\">const</span> secondsStr <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      secondsStr <span class=\"token operator\">=</span> seconds<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>minutes <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>minutes <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> minutes <span class=\"token operator\">:</span> minutes<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>seconds <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> secondsStr <span class=\"token operator\">:</span> secondsStr<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">00:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>seconds <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> secondsStr <span class=\"token operator\">:</span> secondsStr<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 给区域创建删除按钮</span>\n    <span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>region<span class=\"token punctuation\">.</span>hasDeleteButton<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> deleteButton <span class=\"token operator\">=</span> region<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        deleteButton<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token string\">'删除'</span>\n        deleteButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$confirm</span><span class=\"token punctuation\">(</span><span class=\"token string\">'确认删除此区域嘛?'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'提示'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">confirmButtonText</span><span class=\"token operator\">:</span> <span class=\"token string\">'确定'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">cancelButtonText</span><span class=\"token operator\">:</span> <span class=\"token string\">'取消'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'warning'</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> region<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> css <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">float</span><span class=\"token operator\">:</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> <span class=\"token string\">'relative'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">cursor</span><span class=\"token operator\">:</span> <span class=\"token string\">'pointer'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span> <span class=\"token punctuation\">&#125;</span>\n        region<span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span>deleteButton<span class=\"token punctuation\">,</span> css<span class=\"token punctuation\">)</span>\n        region<span class=\"token punctuation\">.</span>hasDeleteButton <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 获取区域列表</span>\n    <span class=\"token function\">getRegions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>regionList<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 重放</span>\n    <span class=\"token function\">rebroadcast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 停止</span>\n    <span class=\"token function\">handleStop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 设置每个区域的loop为false</span>\n    <span class=\"token function\">clearLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> regionList<span class=\"token punctuation\">)</span> item<span class=\"token punctuation\">.</span>loop <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n\n<h3 id=\"2-3、重点描述\"><a href=\"#2-3、重点描述\" class=\"headerlink\" title=\"2.3、重点描述\"></a>2.3、重点描述</h3><h4 id=\"2-3-1、实例方法\"><a href=\"#2-3-1、实例方法\" class=\"headerlink\" title=\"2.3.1、实例方法\"></a>2.3.1、实例方法</h4><p>&emsp;&emsp;playPause 暂停时播放，播放时暂停；play(0) 从0开始播放；stop() 停止；skip() 正数为前进，负数为后退！</p>\n\n<h4 id=\"2-3-2、区域的删除按钮怎么添加的\"><a href=\"#2-3-2、区域的删除按钮怎么添加的\" class=\"headerlink\" title=\"2.3.2、区域的删除按钮怎么添加的\"></a>2.3.2、区域的删除按钮怎么添加的</h4><p>&emsp;&emsp;createDeleteButton函数用于创建button按钮，region.element可以用来appendChild节点；监听ready事件，这里可以获取到已有的区域列表，循环添加按钮；新添加的区域，会触发region-update-end事件，回调函数的参数是region，这里可以再次调用createDeleteButton函数。</p>\n\n<h4 id=\"2-3-3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\"><a href=\"#2-3-3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\" class=\"headerlink\" title=\"2.3.3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放\"></a>2.3.3、点击区域进行循环播放，操作区域位置和大小时也会进行循环播放</h4><p>&emsp;&emsp;调用region.playLoop()即可！</p>\n\n<h4 id=\"2-3-4、点击区域时循环播放本区域，点击区域外时正常播放至结束\"><a href=\"#2-3-4、点击区域时循环播放本区域，点击区域外时正常播放至结束\" class=\"headerlink\" title=\"2.3.4、点击区域时循环播放本区域，点击区域外时正常播放至结束\"></a>2.3.4、点击区域时循环播放本区域，点击区域外时正常播放至结束</h4><p>&emsp;&emsp;clearLoop函数用于将每个区域中的loop设置为false，playLoop方法会将当前区域的loop设置为true；当点击区域外时，我在container的click事件回调中调用clearLoop，这样就可以正常播放至结束；当点击区域时，在定时器中调用playLoop方法，便又可以循环播放本区域。</p>\n\n<h3 id=\"2-4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\"><a href=\"#2-4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\" class=\"headerlink\" title=\"2.4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附\"></a>2.4、补充功能：当拖动区域或调整区域大小时，重叠部分自动吸附</h3><h4 id=\"2-4-1、先看效果\"><a href=\"#2-4-1、先看效果\" class=\"headerlink\" title=\"2.4.1、先看效果\"></a>2.4.1、先看效果</h4><p><img src=\"/images/wavesurfer_4.gif\"></p>\n<h4 id=\"2-4-2、代码实现\"><a href=\"#2-4-2、代码实现\" class=\"headerlink\" title=\"2.4.2、代码实现\"></a>2.4.2、代码实现</h4><p>&emsp;&emsp;还是在region-update-end事件中处理！</p>\n\n<pre class=\"language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 完成拖动或者完成大小调整时触发</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'region-update-end'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">region</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// region.playLoop() // 循环播放选中区域</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDeleteButton</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> prevElement<span class=\"token punctuation\">,</span> nextElement<span class=\"token punctuation\">,</span> prevRegionId<span class=\"token punctuation\">,</span> nextRegionId <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPrevAndNextElement</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获取相邻的两个节点</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevElement <span class=\"token operator\">&amp;&amp;</span> prevElement<span class=\"token punctuation\">.</span>className <span class=\"token operator\">===</span> <span class=\"token string\">'wavesurfer-region'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 和前一个dom对齐</span>\n    <span class=\"token keyword\">const</span> prevRegion <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span>prevRegionId<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">.</span>start <span class=\"token operator\">&lt;</span> prevRegion<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      prevRegion<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> prevRegion<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> region<span class=\"token punctuation\">.</span>start <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextElement <span class=\"token operator\">&amp;&amp;</span> nextElement<span class=\"token punctuation\">.</span>className <span class=\"token operator\">===</span> <span class=\"token string\">'wavesurfer-region'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 和后一个dom对齐</span>\n    <span class=\"token keyword\">const</span> nextRegion <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span>nextRegionId<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> nextRegion<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      nextRegion<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> region<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">end</span><span class=\"token operator\">:</span> nextRegion<span class=\"token punctuation\">.</span>end <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">// 根据区域id，获取区域实例</span>\n<span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 获取当前region的上一个region和下一个region</span>\n<span class=\"token function\">getPrevAndNextElement</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">currentRegion</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> regionList <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wavesurfer<span class=\"token punctuation\">.</span>regions<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> prevList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nextList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> region<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> regionList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!==</span> currentRegion<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">.</span>start <span class=\"token operator\">&lt;</span> currentRegion<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        prevList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">val</span><span class=\"token operator\">:</span> currentRegion<span class=\"token punctuation\">.</span>start <span class=\"token operator\">-</span> region<span class=\"token punctuation\">.</span>start <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        nextList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">val</span><span class=\"token operator\">:</span> region<span class=\"token punctuation\">.</span>end <span class=\"token operator\">-</span> currentRegion<span class=\"token punctuation\">.</span>end <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">const</span> prevListSort <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sortArr</span><span class=\"token punctuation\">(</span>prevList<span class=\"token punctuation\">,</span> <span class=\"token string\">'val'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nextListSort <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sortArr</span><span class=\"token punctuation\">(</span>nextList<span class=\"token punctuation\">,</span> <span class=\"token string\">'val'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 排序后的prevList和nextList</span>\n  <span class=\"token keyword\">const</span> prevRegionId <span class=\"token operator\">=</span> prevListSort <span class=\"token operator\">?</span> prevListSort<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>key <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">const</span> nextRegionId <span class=\"token operator\">=</span> nextListSort <span class=\"token operator\">?</span> nextListSort<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>key <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">const</span> regionDOMList <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.wavesurfer-region'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> prevElement <span class=\"token operator\">=</span> regionDOMList<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">regionDOM</span> <span class=\"token operator\">=></span> regionDOM<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-id'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> prevRegionId<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> nextElement <span class=\"token operator\">=</span> regionDOMList<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">regionDOM</span> <span class=\"token operator\">=></span> regionDOM<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-id'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> nextRegionId<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> prevRegionId<span class=\"token punctuation\">,</span> nextRegionId<span class=\"token punctuation\">,</span> prevElement<span class=\"token punctuation\">,</span> nextElement <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 数组对象根据指定属性值进行升序排序</span>\n<span class=\"token function\">sortArr</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> property</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>list<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> b<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n</code></pre>\n\n<h3 id=\"注意：需要提前引入wavesurfer、wavesurfer-regions-两个文件\"><a href=\"#注意：需要提前引入wavesurfer、wavesurfer-regions-两个文件\" class=\"headerlink\" title=\"注意：需要提前引入wavesurfer、wavesurfer.regions 两个文件\"></a>注意：需要提前引入wavesurfer、wavesurfer.regions 两个文件</h3>"},{"title":"第二章、帝国的余辉之几度繁荣","comments":1,"summary":"仅以此纪录属于我的TI世界，帝国的余辉、蓝色的巨人、\"八叛徒\"与硅谷.......跟着我一起从AT&T开始吧。。","_content":"\n![](/images/AT&T2.png)\n\n## 2、几度繁荣\n<p>&emsp;&emsp;1995年可以说是AT&T公司的顶峰，接下来短短的十年里，他便分崩离析，不复存在了。AT&T不紧不慢的向上走过了百年，才爬到顶点，走下坡路却只是短短的十年。今天我们看到的AT&T实际上是由当年的小贝尔公司之一的西南贝尔公司（SBC）几次以小吃大合并出的类似于水电公司的设施服务公司，这类公司在美国统称为资源服务公司，毫无技术可言，这在后面细讲。</p>\n\n<p>&emsp;&emsp;其实，从1995年起的这10年来年间，AT&T本来有两次绝佳的发展机会；2000年前后的网络革命和从20世纪90年代中期延续至今的无线通信的飞跃。可是，AT&T不仅没有利用好机会，反而在这两场变革中丢掉了性命。</p>\n\n<p>&emsp;&emsp;100多年来AT&T发展得非常健康。虽然他一直受着反垄断法的约束，但是美国政府的司法部门并没有正真要过他的命，每一次反垄断都是在帮助AT&T修枝剪叶，让他更好的发展。AT&T是美国仅有的两家被反垄断法拆分的公司之一（另一家是美孚石油公司），在介绍AT&T之前，我们先来看看它的垄断地位是怎样形成的。</p>\n\n<p>&emsp;&emsp;在AT&T成立时，它的电话技术受专利保护，因此，它前十几年的发展一直一帆风顺。但是，早在1895年，它的专利技术就无效了。一夜之间，美国冒出了6000多家电话公司。我们以后还会提到，上个世纪初，美国曾经有过无数的汽车公司。10年内美国的电话装机数量从200百万户增加到3000万户。这时，AT&T凭借领先的技术和成功的商业收购，很快扫平了所有的竞争对手。20世纪初，AT&T几乎垄断了美国的电信业，并且在海外有很多的业务。1916年，AT&T成为道琼斯20种工业指数中的一家公司。</p>\n\n<p>&emsp;&emsp;但是AT&T的麻烦也伴随着公司的发展而来，美国政府的司法部盯上了它。1913年，根据司法部的金斯堡协议，AT&T不得不收敛一下它的扩张。1925年它甚至将加拿大的电信业务分离，专注于美国市场。分离出的公司就是后来加拿大的公司北方电信。这次收缩歪打正着，使它成功的在1929-1933年的大萧条中存活下来。可以想象，如果当初AT&T的摊子铺得太大。则躲过经济危机的可能性会小很多。事实上，很多当时道琼斯工业指数中的公司都没有逃过那次经济危机。</p>\n\n<p>&emsp;&emsp;大萧条后，AT&T公司恢复的很快，第二次世界大战之后，美国的电话普及率达到50%，AT&T成为美国最挣钱的公司之一。它的贝尔实验室也是成果累累。最值得一提的是，在第二次世界大战期间，贝尔实验室的天才青年科学家香农提出了信息论。信息论是整个现代通信的基础，并于控制论、系统论一道，成为信息时代的科学基础。到了上个世纪50年代，AT&T又发展到美国司法部都不得不管一管的地步了。1956年，AT&T和司法部达成协议，协议再次限制了他的活动范围。反垄断法逼着AT&T靠科技进步来提升自己的实力。我在Google总部接待了很多中国政府的领导干部，他们都关心为什么美国小公司都很快能成为跨国公司，我认为其中一个原因就是反垄断法逼着这些公司追求技术进步。当一家公司开始垄断一个行业时，他会更多的倾向于利用自己的垄断资源，而不是继续依靠技术进步活得更多的利润，毕竟前者比后者容易的多。因此，AT&T巩固了自己在技术上的领先地位。1948年，AT&T实现了商用的微波通信；1962年，它发射了第一颗商用通信卫星。尽管存在一些小的竞争者。但他们无法撼动AT&T的根基。</p>\n\n<p>&emsp;&emsp;在整个20世纪直到90年代末的很长时间里，美国国际长途的电话价钱不是由市场决定的，而是由AT&T和美国联邦通信委员会谈判决定的，定价是3美元一分钟。AT&T计算加钱的方法听起来很合理-铺设光缆和电缆需要多少钱，购买设备需要多少钱，研发需要多少钱，雇接线员需要多少钱等，所以只有一分钟3美元才能不亏损。但事实上，到2002年，当国际长途电话费降到平均一分钟只需要30美分的时候，AT&T仍然有1/3的毛利润。</p>\n\n<p>&emsp;&emsp;到了20世纪80年代，美国司法部再次对AT&T公司提起反垄断诉讼。这次，美国政府终于打赢了这场旷日持久的官司，这才导致了1984年AT&T的第一次分家。这次反垄断的官司，不过是替AT&T这颗大树剪剪枝。剪完枝后，AT&T公司反而发展的更健康。10年后，AT&T又如日中天了。当时，AT&T不仅在传统的电话业务上，而且在新兴的网络和移动通信方面，都处于世界领先地位。</p>","source":"_posts/浪潮之巅/第二章、帝国的余辉之几度繁荣.md","raw":"---\ntitle: 第二章、帝国的余辉之几度繁荣\ntags: 浪潮之巅\ncategories: 我的IT世界观\ncomments: true\nsummary: 仅以此纪录属于我的TI世界，帝国的余辉、蓝色的巨人、\"八叛徒\"与硅谷.......跟着我一起从AT&T开始吧。。\n---\n\n![](/images/AT&T2.png)\n\n## 2、几度繁荣\n<p>&emsp;&emsp;1995年可以说是AT&T公司的顶峰，接下来短短的十年里，他便分崩离析，不复存在了。AT&T不紧不慢的向上走过了百年，才爬到顶点，走下坡路却只是短短的十年。今天我们看到的AT&T实际上是由当年的小贝尔公司之一的西南贝尔公司（SBC）几次以小吃大合并出的类似于水电公司的设施服务公司，这类公司在美国统称为资源服务公司，毫无技术可言，这在后面细讲。</p>\n\n<p>&emsp;&emsp;其实，从1995年起的这10年来年间，AT&T本来有两次绝佳的发展机会；2000年前后的网络革命和从20世纪90年代中期延续至今的无线通信的飞跃。可是，AT&T不仅没有利用好机会，反而在这两场变革中丢掉了性命。</p>\n\n<p>&emsp;&emsp;100多年来AT&T发展得非常健康。虽然他一直受着反垄断法的约束，但是美国政府的司法部门并没有正真要过他的命，每一次反垄断都是在帮助AT&T修枝剪叶，让他更好的发展。AT&T是美国仅有的两家被反垄断法拆分的公司之一（另一家是美孚石油公司），在介绍AT&T之前，我们先来看看它的垄断地位是怎样形成的。</p>\n\n<p>&emsp;&emsp;在AT&T成立时，它的电话技术受专利保护，因此，它前十几年的发展一直一帆风顺。但是，早在1895年，它的专利技术就无效了。一夜之间，美国冒出了6000多家电话公司。我们以后还会提到，上个世纪初，美国曾经有过无数的汽车公司。10年内美国的电话装机数量从200百万户增加到3000万户。这时，AT&T凭借领先的技术和成功的商业收购，很快扫平了所有的竞争对手。20世纪初，AT&T几乎垄断了美国的电信业，并且在海外有很多的业务。1916年，AT&T成为道琼斯20种工业指数中的一家公司。</p>\n\n<p>&emsp;&emsp;但是AT&T的麻烦也伴随着公司的发展而来，美国政府的司法部盯上了它。1913年，根据司法部的金斯堡协议，AT&T不得不收敛一下它的扩张。1925年它甚至将加拿大的电信业务分离，专注于美国市场。分离出的公司就是后来加拿大的公司北方电信。这次收缩歪打正着，使它成功的在1929-1933年的大萧条中存活下来。可以想象，如果当初AT&T的摊子铺得太大。则躲过经济危机的可能性会小很多。事实上，很多当时道琼斯工业指数中的公司都没有逃过那次经济危机。</p>\n\n<p>&emsp;&emsp;大萧条后，AT&T公司恢复的很快，第二次世界大战之后，美国的电话普及率达到50%，AT&T成为美国最挣钱的公司之一。它的贝尔实验室也是成果累累。最值得一提的是，在第二次世界大战期间，贝尔实验室的天才青年科学家香农提出了信息论。信息论是整个现代通信的基础，并于控制论、系统论一道，成为信息时代的科学基础。到了上个世纪50年代，AT&T又发展到美国司法部都不得不管一管的地步了。1956年，AT&T和司法部达成协议，协议再次限制了他的活动范围。反垄断法逼着AT&T靠科技进步来提升自己的实力。我在Google总部接待了很多中国政府的领导干部，他们都关心为什么美国小公司都很快能成为跨国公司，我认为其中一个原因就是反垄断法逼着这些公司追求技术进步。当一家公司开始垄断一个行业时，他会更多的倾向于利用自己的垄断资源，而不是继续依靠技术进步活得更多的利润，毕竟前者比后者容易的多。因此，AT&T巩固了自己在技术上的领先地位。1948年，AT&T实现了商用的微波通信；1962年，它发射了第一颗商用通信卫星。尽管存在一些小的竞争者。但他们无法撼动AT&T的根基。</p>\n\n<p>&emsp;&emsp;在整个20世纪直到90年代末的很长时间里，美国国际长途的电话价钱不是由市场决定的，而是由AT&T和美国联邦通信委员会谈判决定的，定价是3美元一分钟。AT&T计算加钱的方法听起来很合理-铺设光缆和电缆需要多少钱，购买设备需要多少钱，研发需要多少钱，雇接线员需要多少钱等，所以只有一分钟3美元才能不亏损。但事实上，到2002年，当国际长途电话费降到平均一分钟只需要30美分的时候，AT&T仍然有1/3的毛利润。</p>\n\n<p>&emsp;&emsp;到了20世纪80年代，美国司法部再次对AT&T公司提起反垄断诉讼。这次，美国政府终于打赢了这场旷日持久的官司，这才导致了1984年AT&T的第一次分家。这次反垄断的官司，不过是替AT&T这颗大树剪剪枝。剪完枝后，AT&T公司反而发展的更健康。10年后，AT&T又如日中天了。当时，AT&T不仅在传统的电话业务上，而且在新兴的网络和移动通信方面，都处于世界领先地位。</p>","slug":"浪潮之巅/第二章、帝国的余辉之几度繁荣","published":1,"date":"2024-11-05T14:59:24.509Z","updated":"2023-05-07T13:12:04.686Z","layout":"post","photos":[],"_id":"cm42hwwui002dssnnav0y34gf","content":"<p><img src=\"/images/AT&T2.png\"></p>\n<h2 id=\"2、几度繁荣\"><a href=\"#2、几度繁荣\" class=\"headerlink\" title=\"2、几度繁荣\"></a>2、几度繁荣</h2><p>&emsp;&emsp;1995年可以说是AT&T公司的顶峰，接下来短短的十年里，他便分崩离析，不复存在了。AT&T不紧不慢的向上走过了百年，才爬到顶点，走下坡路却只是短短的十年。今天我们看到的AT&T实际上是由当年的小贝尔公司之一的西南贝尔公司（SBC）几次以小吃大合并出的类似于水电公司的设施服务公司，这类公司在美国统称为资源服务公司，毫无技术可言，这在后面细讲。</p>\n\n<p>&emsp;&emsp;其实，从1995年起的这10年来年间，AT&T本来有两次绝佳的发展机会；2000年前后的网络革命和从20世纪90年代中期延续至今的无线通信的飞跃。可是，AT&T不仅没有利用好机会，反而在这两场变革中丢掉了性命。</p>\n\n<p>&emsp;&emsp;100多年来AT&T发展得非常健康。虽然他一直受着反垄断法的约束，但是美国政府的司法部门并没有正真要过他的命，每一次反垄断都是在帮助AT&T修枝剪叶，让他更好的发展。AT&T是美国仅有的两家被反垄断法拆分的公司之一（另一家是美孚石油公司），在介绍AT&T之前，我们先来看看它的垄断地位是怎样形成的。</p>\n\n<p>&emsp;&emsp;在AT&T成立时，它的电话技术受专利保护，因此，它前十几年的发展一直一帆风顺。但是，早在1895年，它的专利技术就无效了。一夜之间，美国冒出了6000多家电话公司。我们以后还会提到，上个世纪初，美国曾经有过无数的汽车公司。10年内美国的电话装机数量从200百万户增加到3000万户。这时，AT&T凭借领先的技术和成功的商业收购，很快扫平了所有的竞争对手。20世纪初，AT&T几乎垄断了美国的电信业，并且在海外有很多的业务。1916年，AT&T成为道琼斯20种工业指数中的一家公司。</p>\n\n<p>&emsp;&emsp;但是AT&T的麻烦也伴随着公司的发展而来，美国政府的司法部盯上了它。1913年，根据司法部的金斯堡协议，AT&T不得不收敛一下它的扩张。1925年它甚至将加拿大的电信业务分离，专注于美国市场。分离出的公司就是后来加拿大的公司北方电信。这次收缩歪打正着，使它成功的在1929-1933年的大萧条中存活下来。可以想象，如果当初AT&T的摊子铺得太大。则躲过经济危机的可能性会小很多。事实上，很多当时道琼斯工业指数中的公司都没有逃过那次经济危机。</p>\n\n<p>&emsp;&emsp;大萧条后，AT&T公司恢复的很快，第二次世界大战之后，美国的电话普及率达到50%，AT&T成为美国最挣钱的公司之一。它的贝尔实验室也是成果累累。最值得一提的是，在第二次世界大战期间，贝尔实验室的天才青年科学家香农提出了信息论。信息论是整个现代通信的基础，并于控制论、系统论一道，成为信息时代的科学基础。到了上个世纪50年代，AT&T又发展到美国司法部都不得不管一管的地步了。1956年，AT&T和司法部达成协议，协议再次限制了他的活动范围。反垄断法逼着AT&T靠科技进步来提升自己的实力。我在Google总部接待了很多中国政府的领导干部，他们都关心为什么美国小公司都很快能成为跨国公司，我认为其中一个原因就是反垄断法逼着这些公司追求技术进步。当一家公司开始垄断一个行业时，他会更多的倾向于利用自己的垄断资源，而不是继续依靠技术进步活得更多的利润，毕竟前者比后者容易的多。因此，AT&T巩固了自己在技术上的领先地位。1948年，AT&T实现了商用的微波通信；1962年，它发射了第一颗商用通信卫星。尽管存在一些小的竞争者。但他们无法撼动AT&T的根基。</p>\n\n<p>&emsp;&emsp;在整个20世纪直到90年代末的很长时间里，美国国际长途的电话价钱不是由市场决定的，而是由AT&T和美国联邦通信委员会谈判决定的，定价是3美元一分钟。AT&T计算加钱的方法听起来很合理-铺设光缆和电缆需要多少钱，购买设备需要多少钱，研发需要多少钱，雇接线员需要多少钱等，所以只有一分钟3美元才能不亏损。但事实上，到2002年，当国际长途电话费降到平均一分钟只需要30美分的时候，AT&T仍然有1/3的毛利润。</p>\n\n<p>&emsp;&emsp;到了20世纪80年代，美国司法部再次对AT&T公司提起反垄断诉讼。这次，美国政府终于打赢了这场旷日持久的官司，这才导致了1984年AT&T的第一次分家。这次反垄断的官司，不过是替AT&T这颗大树剪剪枝。剪完枝后，AT&T公司反而发展的更健康。10年后，AT&T又如日中天了。当时，AT&T不仅在传统的电话业务上，而且在新兴的网络和移动通信方面，都处于世界领先地位。</p>","excerpt":"","more":"<p><img src=\"/images/AT&T2.png\"></p>\n<h2 id=\"2、几度繁荣\"><a href=\"#2、几度繁荣\" class=\"headerlink\" title=\"2、几度繁荣\"></a>2、几度繁荣</h2><p>&emsp;&emsp;1995年可以说是AT&T公司的顶峰，接下来短短的十年里，他便分崩离析，不复存在了。AT&T不紧不慢的向上走过了百年，才爬到顶点，走下坡路却只是短短的十年。今天我们看到的AT&T实际上是由当年的小贝尔公司之一的西南贝尔公司（SBC）几次以小吃大合并出的类似于水电公司的设施服务公司，这类公司在美国统称为资源服务公司，毫无技术可言，这在后面细讲。</p>\n\n<p>&emsp;&emsp;其实，从1995年起的这10年来年间，AT&T本来有两次绝佳的发展机会；2000年前后的网络革命和从20世纪90年代中期延续至今的无线通信的飞跃。可是，AT&T不仅没有利用好机会，反而在这两场变革中丢掉了性命。</p>\n\n<p>&emsp;&emsp;100多年来AT&T发展得非常健康。虽然他一直受着反垄断法的约束，但是美国政府的司法部门并没有正真要过他的命，每一次反垄断都是在帮助AT&T修枝剪叶，让他更好的发展。AT&T是美国仅有的两家被反垄断法拆分的公司之一（另一家是美孚石油公司），在介绍AT&T之前，我们先来看看它的垄断地位是怎样形成的。</p>\n\n<p>&emsp;&emsp;在AT&T成立时，它的电话技术受专利保护，因此，它前十几年的发展一直一帆风顺。但是，早在1895年，它的专利技术就无效了。一夜之间，美国冒出了6000多家电话公司。我们以后还会提到，上个世纪初，美国曾经有过无数的汽车公司。10年内美国的电话装机数量从200百万户增加到3000万户。这时，AT&T凭借领先的技术和成功的商业收购，很快扫平了所有的竞争对手。20世纪初，AT&T几乎垄断了美国的电信业，并且在海外有很多的业务。1916年，AT&T成为道琼斯20种工业指数中的一家公司。</p>\n\n<p>&emsp;&emsp;但是AT&T的麻烦也伴随着公司的发展而来，美国政府的司法部盯上了它。1913年，根据司法部的金斯堡协议，AT&T不得不收敛一下它的扩张。1925年它甚至将加拿大的电信业务分离，专注于美国市场。分离出的公司就是后来加拿大的公司北方电信。这次收缩歪打正着，使它成功的在1929-1933年的大萧条中存活下来。可以想象，如果当初AT&T的摊子铺得太大。则躲过经济危机的可能性会小很多。事实上，很多当时道琼斯工业指数中的公司都没有逃过那次经济危机。</p>\n\n<p>&emsp;&emsp;大萧条后，AT&T公司恢复的很快，第二次世界大战之后，美国的电话普及率达到50%，AT&T成为美国最挣钱的公司之一。它的贝尔实验室也是成果累累。最值得一提的是，在第二次世界大战期间，贝尔实验室的天才青年科学家香农提出了信息论。信息论是整个现代通信的基础，并于控制论、系统论一道，成为信息时代的科学基础。到了上个世纪50年代，AT&T又发展到美国司法部都不得不管一管的地步了。1956年，AT&T和司法部达成协议，协议再次限制了他的活动范围。反垄断法逼着AT&T靠科技进步来提升自己的实力。我在Google总部接待了很多中国政府的领导干部，他们都关心为什么美国小公司都很快能成为跨国公司，我认为其中一个原因就是反垄断法逼着这些公司追求技术进步。当一家公司开始垄断一个行业时，他会更多的倾向于利用自己的垄断资源，而不是继续依靠技术进步活得更多的利润，毕竟前者比后者容易的多。因此，AT&T巩固了自己在技术上的领先地位。1948年，AT&T实现了商用的微波通信；1962年，它发射了第一颗商用通信卫星。尽管存在一些小的竞争者。但他们无法撼动AT&T的根基。</p>\n\n<p>&emsp;&emsp;在整个20世纪直到90年代末的很长时间里，美国国际长途的电话价钱不是由市场决定的，而是由AT&T和美国联邦通信委员会谈判决定的，定价是3美元一分钟。AT&T计算加钱的方法听起来很合理-铺设光缆和电缆需要多少钱，购买设备需要多少钱，研发需要多少钱，雇接线员需要多少钱等，所以只有一分钟3美元才能不亏损。但事实上，到2002年，当国际长途电话费降到平均一分钟只需要30美分的时候，AT&T仍然有1/3的毛利润。</p>\n\n<p>&emsp;&emsp;到了20世纪80年代，美国司法部再次对AT&T公司提起反垄断诉讼。这次，美国政府终于打赢了这场旷日持久的官司，这才导致了1984年AT&T的第一次分家。这次反垄断的官司，不过是替AT&T这颗大树剪剪枝。剪完枝后，AT&T公司反而发展的更健康。10年后，AT&T又如日中天了。当时，AT&T不仅在传统的电话业务上，而且在新兴的网络和移动通信方面，都处于世界领先地位。</p>"},{"title":"1、资源制作性能优化","comments":1,"summary":"资源制作流程卡顿，竟然连文本输入都卡，出手解决它，利用谷歌开发者工具的performance选项卡和summary选项卡排查问题......","_content":"\n# 1、性能优化\n### 1.1、富文本框的事件监听问题\n&emsp;&emsp;滚动页面时，发现页面卡顿，通过浏览器开发者工具的performance分析，发现鼠标在页面滑动的时候在不断的执行一个方法，找到对应的代码位置后发现这里写了一个mousemove。这种事件的触发频率非常之高，会导致使用不流畅，卡帧的现象。\n\n解决办法：\n+ 防抖节流，可以设置500ms执行一次\n+ 使用webAPI，IntersectionObserverAPI，元素与视口交叉执行\n+ 直接将mousemove替换成mouseenter，鼠标进入时触发\n\n```javascript\n<template>\n  <div  @mousemove.stop=\"changeToEdit\">\n    //....\n  </div>\n</template>\n\n public changeToEdit (e) {\n    if (!this.isEdit) {\n      this.isEdit = true;\n      this.setAudio();\n      if (this.type === 'richText') {\n        this.$nextTick(() => {\n          this.createEditorFun();\n        });\n      } else if (this.type === 'textarea' || this.type === 'text') {\n        this.$nextTick(() => {\n          this.createTextareaEditorFun();\n        });\n      }\n    }\n  }\n```\n\n\n\n### 1.2、js执行时间过长导致的页面书写卡顿问题（已完成）\n![](https://cdn.nlark.com/yuque/0/2024/png/35329855/1728973795705-573ce7c0-b02e-4747-8de8-f75c50a9348c.png)\n\n我们在使用的时候有着很明显的卡顿和卡帧问题，通过浏览器开发者工具的performance分析，发现我们在输入内容时在不断的执行一个函数watchMenuInfo，并且这个js函数执行周期比较长，那么一定是会影响页面渲染的。定位到代码位置分析，代码的逻辑是我们右边展示的数据都是存在左边侧边栏的，当我们输入内容或者做其他事情的时候，需要同步更新侧边栏。\n\n如下截取的一部分代码\n\n```javascript\n  @Watch('menuInfo', {\n    deep: true,\n    immediate: true\n  })\n  public watchMenuInfo (newValue, oldValue) {\n    this.menuList = deepClone(newValue);\n    this.total = this.menuList.length;\n  }\n\n  @Watch('menuList', {\n    deep: true,\n    immediate: true\n  })\n  public menuListChane (newValue, oldValue) {\n    if (JSON.stringify(newValue) === JSON.stringify(oldValue)) return\n    this.showList = this.setCurrentShowList()\n  }\n```\n\n代码中存在的两个问题\n\n+ 不必要的监听：vue组件之间传值，对与引用类型的数据是双向的，我们在更改右侧内容的时候侧边的数据是直接同步的，不需要做额外的监听操作。\n+ 大数据的深拷贝：侧边栏的数据一般是很大的，大体积的数据做深拷贝是很耗时的，这里实际上是不需要做深拷贝的，直接用即可\n\n解决以上两个问题，性能会有很大提升。\n\n但是以前这样的写法可能是出于一些其它考虑，所以在做更改的时候，需要小心谨慎，避免引出其它问题。\n\n### 1.3、完成后的效果对比\n**优化前后的对比**\n\n**图表：**\n\n![优化前](https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090778820-8218125c-701a-482c-ab45-c684c78f961a.png)\n\n优化前：由图可以看出，当素材数量在5以下时，看不出明显的时间变化，此时平台性能基本稳定。但是随着素材数量的增加，耗时情况越严重，平台的素材上限是15，此时首次进入到渲染完成需要接近20秒。\n\n![优化后](https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090552375-7178f62f-958d-4306-824f-f894fa256e78.png)\n\n优化后：由图可以看出，随着素材数量的增加，时间上的损耗无明显变化，平台性能基本稳定，始终维持在5秒左右，无论是首次进入的渲染还是切换素材以及输入内容，都比较平稳流畅。\n\n![前后对比](https://cdn.nlark.com/yuque/0/2024/png/35329855/1730091311242-51d3b08c-5fcd-4841-8caa-55343379b8ef.png)\n\n优化前后对比：由上图可以看出，随着素材数量的增加，优化效果会显著提升。当数量控制在5以下时，效果整体差别不大，但是数量为10、15的时候，优化前会变得异常卡顿，严重影响制作流程。优化后会有一个明显的性能提升的效果。\n\n**优化前（gif见附件）：**\n\n![](https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084678840-31894cd3-2ff9-4ce3-a421-ddff20e1d9f8.gif)\n\n**优化后（gif见附件）：**\n\n![](https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084697597-d049e30e-e02b-41fa-9c96-288c3ccb5e21.gif)\n\n### 1.4、同步课文设计存在的缺陷（未开始）\n+ 请求当前页的所有课文\n\n```javascript\n  public async getResouceQuestionList (reset = false) {\n    const postData = {...}\n    const res = await getWordList(postData);\n    if (res) {\n      this.getBatchStInfo(list, 'mounted');\n    }\n  }\n\n\n```\n\n+ 便利请求过来的数据，按顺序执行编译过程getBatchStInfo -->getTemplateData-->parseContent，说白了就是准备好所有的右侧需要展示的数据，这一步是一个极其耗时的过程，有着很长的数据处理流程，带来的体验就是首次进入课文包，首次加载很慢，同时涉及到请求侧边栏数据的操作都会耗时卡顿，比如切换页码，批量标签，批量标注后返回的主页面都会卡顿。\n\n\n\n解决办法：不需要一次性处理侧边栏所有的数据，而是只处理第一条数据，后续切换素材的时候切换的哪个素材就做哪个素材的数据处理，可以大大优化卡顿问题。\n\n```javascript\n  public getBatchStInfo (data, type?, reset?) {\n    data.forEach((item, index) => {\n      if (template) {\n        getTemplateData(template, this.$route.query.identifier as string, (returnObj) => {\n          this.setTempObj(tempObj, !reset ? length + index : index, type);\n        })\n      }\n    })\n  }\n\n\n  public setTempObj (newVlaue: any, index?, type?) {\n    const parseTempObj = parseContent(newVlaue, newVlaue.isMultPaper);\n  }\n\n```\n\n### 1.5、依赖分析（未开始）\nnpm包：depCheck\n\ndepcheck 是一款用于检测项目中未使用依赖项的工具，特别适用于前端和Node.js项目。它的主要目的是帮助开发者识别并移除那些在项目中未被实际引用的依赖，从而优化项目结构，减少不必要的依赖，提高项目的运行效率和安全性。\n\n```javascript\nnpm install -g depcheck\n// 根目录\ndepcheck\n```\n\n执行后，depcheck会输出三个主要部分的结果：\n\n未使用的依赖：列出项目中未使用的依赖项。\n\n缺失的依赖：列出项目中实际使用但未在`package.json`中声明的依赖项。\n\n无用的文件：列出项目中未使用的文件。\n\n![](https://cdn.nlark.com/yuque/0/2024/png/35329855/1728961532523-b1d9c875-b2c8-4105-96f6-a04e70b75a97.png)\n\n这个不可以完全相信，但是可以作为分析依赖的依据，基本可以排查荣誉的依赖，这些依赖的存在占用体积，去除这些无用的包，或者利用率比较小的包可以加快打包速度，减小打包体积，以获得更好的体验。\n\n### 1.6、打包优化（未开始）\n插件：webpack-bundle-analyzer\n\nwebpack-bundle-analyzer 是一个用于分析和可视化Webpack打包结果的工具。它能够生成一个交互式的可缩放树状图，展示每个模块在打包文件中的大小，帮助开发者识别和优化不必要的依赖和代码，从而减小最终打包文件的体积。\n\n```javascript\nnpm install --save-dev webpack-bundle-analyzer\n\nconst BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\n\nconfig.plugins = [\n  new BundleAnalyzerPlugin()\n]\n```\n\n资源平台项目打包后的视图如下\n\n![](https://cdn.nlark.com/yuque/0/2024/png/35329855/1728972087296-19131b20-4999-424d-9509-651434ec8909.png)\n\n从这里可以看出平台的打包分的还是比较细致的，而且第三方库和业务代码是分开的，这样的好处就是第三方代码可以完全利用http缓存，不需要多次请求资源，只需要请求变更后的业务代码即可。\n\n在第三方模块里发现了很多可以改进的地方，比如第三方库中的monaco-editor占用了很大的体积，我们查看后发现这个包并没有被使用，这个是可以删除的，此外向jquery这种落后的第三方完全可以删掉，不再使用。除此之外像其它第三方库比如e-charts，element-ui可以用按需导入，减小体积。\n\n在业务模块里，发现很多没有用上的大体积的文件，比如stJson.ts引入了根本用不上。这张是完全可以删除的，以此类推可以排查出很多大体积打包文件，提升构建速度和用户体验。\n\n\n\n\n\n\n\n\n","source":"_posts/工作记录/工作记录-1：资源制作性能优化方案.md","raw":"---\ntitle: 1、资源制作性能优化\ntags: 工作记录\ncategories: 工作记录\ncomments: true\nsummary: 资源制作流程卡顿，竟然连文本输入都卡，出手解决它，利用谷歌开发者工具的performance选项卡和summary选项卡排查问题......\n---\n\n# 1、性能优化\n### 1.1、富文本框的事件监听问题\n&emsp;&emsp;滚动页面时，发现页面卡顿，通过浏览器开发者工具的performance分析，发现鼠标在页面滑动的时候在不断的执行一个方法，找到对应的代码位置后发现这里写了一个mousemove。这种事件的触发频率非常之高，会导致使用不流畅，卡帧的现象。\n\n解决办法：\n+ 防抖节流，可以设置500ms执行一次\n+ 使用webAPI，IntersectionObserverAPI，元素与视口交叉执行\n+ 直接将mousemove替换成mouseenter，鼠标进入时触发\n\n```javascript\n<template>\n  <div  @mousemove.stop=\"changeToEdit\">\n    //....\n  </div>\n</template>\n\n public changeToEdit (e) {\n    if (!this.isEdit) {\n      this.isEdit = true;\n      this.setAudio();\n      if (this.type === 'richText') {\n        this.$nextTick(() => {\n          this.createEditorFun();\n        });\n      } else if (this.type === 'textarea' || this.type === 'text') {\n        this.$nextTick(() => {\n          this.createTextareaEditorFun();\n        });\n      }\n    }\n  }\n```\n\n\n\n### 1.2、js执行时间过长导致的页面书写卡顿问题（已完成）\n![](https://cdn.nlark.com/yuque/0/2024/png/35329855/1728973795705-573ce7c0-b02e-4747-8de8-f75c50a9348c.png)\n\n我们在使用的时候有着很明显的卡顿和卡帧问题，通过浏览器开发者工具的performance分析，发现我们在输入内容时在不断的执行一个函数watchMenuInfo，并且这个js函数执行周期比较长，那么一定是会影响页面渲染的。定位到代码位置分析，代码的逻辑是我们右边展示的数据都是存在左边侧边栏的，当我们输入内容或者做其他事情的时候，需要同步更新侧边栏。\n\n如下截取的一部分代码\n\n```javascript\n  @Watch('menuInfo', {\n    deep: true,\n    immediate: true\n  })\n  public watchMenuInfo (newValue, oldValue) {\n    this.menuList = deepClone(newValue);\n    this.total = this.menuList.length;\n  }\n\n  @Watch('menuList', {\n    deep: true,\n    immediate: true\n  })\n  public menuListChane (newValue, oldValue) {\n    if (JSON.stringify(newValue) === JSON.stringify(oldValue)) return\n    this.showList = this.setCurrentShowList()\n  }\n```\n\n代码中存在的两个问题\n\n+ 不必要的监听：vue组件之间传值，对与引用类型的数据是双向的，我们在更改右侧内容的时候侧边的数据是直接同步的，不需要做额外的监听操作。\n+ 大数据的深拷贝：侧边栏的数据一般是很大的，大体积的数据做深拷贝是很耗时的，这里实际上是不需要做深拷贝的，直接用即可\n\n解决以上两个问题，性能会有很大提升。\n\n但是以前这样的写法可能是出于一些其它考虑，所以在做更改的时候，需要小心谨慎，避免引出其它问题。\n\n### 1.3、完成后的效果对比\n**优化前后的对比**\n\n**图表：**\n\n![优化前](https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090778820-8218125c-701a-482c-ab45-c684c78f961a.png)\n\n优化前：由图可以看出，当素材数量在5以下时，看不出明显的时间变化，此时平台性能基本稳定。但是随着素材数量的增加，耗时情况越严重，平台的素材上限是15，此时首次进入到渲染完成需要接近20秒。\n\n![优化后](https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090552375-7178f62f-958d-4306-824f-f894fa256e78.png)\n\n优化后：由图可以看出，随着素材数量的增加，时间上的损耗无明显变化，平台性能基本稳定，始终维持在5秒左右，无论是首次进入的渲染还是切换素材以及输入内容，都比较平稳流畅。\n\n![前后对比](https://cdn.nlark.com/yuque/0/2024/png/35329855/1730091311242-51d3b08c-5fcd-4841-8caa-55343379b8ef.png)\n\n优化前后对比：由上图可以看出，随着素材数量的增加，优化效果会显著提升。当数量控制在5以下时，效果整体差别不大，但是数量为10、15的时候，优化前会变得异常卡顿，严重影响制作流程。优化后会有一个明显的性能提升的效果。\n\n**优化前（gif见附件）：**\n\n![](https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084678840-31894cd3-2ff9-4ce3-a421-ddff20e1d9f8.gif)\n\n**优化后（gif见附件）：**\n\n![](https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084697597-d049e30e-e02b-41fa-9c96-288c3ccb5e21.gif)\n\n### 1.4、同步课文设计存在的缺陷（未开始）\n+ 请求当前页的所有课文\n\n```javascript\n  public async getResouceQuestionList (reset = false) {\n    const postData = {...}\n    const res = await getWordList(postData);\n    if (res) {\n      this.getBatchStInfo(list, 'mounted');\n    }\n  }\n\n\n```\n\n+ 便利请求过来的数据，按顺序执行编译过程getBatchStInfo -->getTemplateData-->parseContent，说白了就是准备好所有的右侧需要展示的数据，这一步是一个极其耗时的过程，有着很长的数据处理流程，带来的体验就是首次进入课文包，首次加载很慢，同时涉及到请求侧边栏数据的操作都会耗时卡顿，比如切换页码，批量标签，批量标注后返回的主页面都会卡顿。\n\n\n\n解决办法：不需要一次性处理侧边栏所有的数据，而是只处理第一条数据，后续切换素材的时候切换的哪个素材就做哪个素材的数据处理，可以大大优化卡顿问题。\n\n```javascript\n  public getBatchStInfo (data, type?, reset?) {\n    data.forEach((item, index) => {\n      if (template) {\n        getTemplateData(template, this.$route.query.identifier as string, (returnObj) => {\n          this.setTempObj(tempObj, !reset ? length + index : index, type);\n        })\n      }\n    })\n  }\n\n\n  public setTempObj (newVlaue: any, index?, type?) {\n    const parseTempObj = parseContent(newVlaue, newVlaue.isMultPaper);\n  }\n\n```\n\n### 1.5、依赖分析（未开始）\nnpm包：depCheck\n\ndepcheck 是一款用于检测项目中未使用依赖项的工具，特别适用于前端和Node.js项目。它的主要目的是帮助开发者识别并移除那些在项目中未被实际引用的依赖，从而优化项目结构，减少不必要的依赖，提高项目的运行效率和安全性。\n\n```javascript\nnpm install -g depcheck\n// 根目录\ndepcheck\n```\n\n执行后，depcheck会输出三个主要部分的结果：\n\n未使用的依赖：列出项目中未使用的依赖项。\n\n缺失的依赖：列出项目中实际使用但未在`package.json`中声明的依赖项。\n\n无用的文件：列出项目中未使用的文件。\n\n![](https://cdn.nlark.com/yuque/0/2024/png/35329855/1728961532523-b1d9c875-b2c8-4105-96f6-a04e70b75a97.png)\n\n这个不可以完全相信，但是可以作为分析依赖的依据，基本可以排查荣誉的依赖，这些依赖的存在占用体积，去除这些无用的包，或者利用率比较小的包可以加快打包速度，减小打包体积，以获得更好的体验。\n\n### 1.6、打包优化（未开始）\n插件：webpack-bundle-analyzer\n\nwebpack-bundle-analyzer 是一个用于分析和可视化Webpack打包结果的工具。它能够生成一个交互式的可缩放树状图，展示每个模块在打包文件中的大小，帮助开发者识别和优化不必要的依赖和代码，从而减小最终打包文件的体积。\n\n```javascript\nnpm install --save-dev webpack-bundle-analyzer\n\nconst BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\n\nconfig.plugins = [\n  new BundleAnalyzerPlugin()\n]\n```\n\n资源平台项目打包后的视图如下\n\n![](https://cdn.nlark.com/yuque/0/2024/png/35329855/1728972087296-19131b20-4999-424d-9509-651434ec8909.png)\n\n从这里可以看出平台的打包分的还是比较细致的，而且第三方库和业务代码是分开的，这样的好处就是第三方代码可以完全利用http缓存，不需要多次请求资源，只需要请求变更后的业务代码即可。\n\n在第三方模块里发现了很多可以改进的地方，比如第三方库中的monaco-editor占用了很大的体积，我们查看后发现这个包并没有被使用，这个是可以删除的，此外向jquery这种落后的第三方完全可以删掉，不再使用。除此之外像其它第三方库比如e-charts，element-ui可以用按需导入，减小体积。\n\n在业务模块里，发现很多没有用上的大体积的文件，比如stJson.ts引入了根本用不上。这张是完全可以删除的，以此类推可以排查出很多大体积打包文件，提升构建速度和用户体验。\n\n\n\n\n\n\n\n\n","slug":"工作记录/工作记录-1：资源制作性能优化方案","published":1,"date":"2024-11-29T07:36:31.158Z","updated":"2024-11-29T08:50:49.128Z","_id":"cm42hwwuj002gssnngzxpg7h6","layout":"post","photos":[],"content":"<h1 id=\"1、性能优化\"><a href=\"#1、性能优化\" class=\"headerlink\" title=\"1、性能优化\"></a>1、性能优化</h1><h3 id=\"1-1、富文本框的事件监听问题\"><a href=\"#1-1、富文本框的事件监听问题\" class=\"headerlink\" title=\"1.1、富文本框的事件监听问题\"></a>1.1、富文本框的事件监听问题</h3><p>&emsp;&emsp;滚动页面时，发现页面卡顿，通过浏览器开发者工具的performance分析，发现鼠标在页面滑动的时候在不断的执行一个方法，找到对应的代码位置后发现这里写了一个mousemove。这种事件的触发频率非常之高，会导致使用不流畅，卡帧的现象。</p>\n<p>解决办法：</p>\n<ul>\n<li>防抖节流，可以设置500ms执行一次</li>\n<li>使用webAPI，IntersectionObserverAPI，元素与视口交叉执行</li>\n<li>直接将mousemove替换成mouseenter，鼠标进入时触发</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div  @mousemove<span class=\"token punctuation\">.</span>stop<span class=\"token operator\">=</span><span class=\"token string\">\"changeToEdit\"</span><span class=\"token operator\">></span>\n    <span class=\"token comment\">//....</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n <span class=\"token keyword\">public</span> <span class=\"token function\">changeToEdit</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isEdit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isEdit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAudio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'richText'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createEditorFun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'textarea'</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTextareaEditorFun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"1-2、js执行时间过长导致的页面书写卡顿问题（已完成）\"><a href=\"#1-2、js执行时间过长导致的页面书写卡顿问题（已完成）\" class=\"headerlink\" title=\"1.2、js执行时间过长导致的页面书写卡顿问题（已完成）\"></a>1.2、js执行时间过长导致的页面书写卡顿问题（已完成）</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1728973795705-573ce7c0-b02e-4747-8de8-f75c50a9348c.png\"></p>\n<p>我们在使用的时候有着很明显的卡顿和卡帧问题，通过浏览器开发者工具的performance分析，发现我们在输入内容时在不断的执行一个函数watchMenuInfo，并且这个js函数执行周期比较长，那么一定是会影响页面渲染的。定位到代码位置分析，代码的逻辑是我们右边展示的数据都是存在左边侧边栏的，当我们输入内容或者做其他事情的时候，需要同步更新侧边栏。</p>\n<p>如下截取的一部分代码</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">@<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menuInfo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token function\">watchMenuInfo</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span> oldValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>menuList <span class=\"token operator\">=</span> <span class=\"token function\">deepClone</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>total <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>menuList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n@<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menuList'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token function\">menuListChane</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span> oldValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>oldValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>showList <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCurrentShowList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>代码中存在的两个问题</p>\n<ul>\n<li>不必要的监听：vue组件之间传值，对与引用类型的数据是双向的，我们在更改右侧内容的时候侧边的数据是直接同步的，不需要做额外的监听操作。</li>\n<li>大数据的深拷贝：侧边栏的数据一般是很大的，大体积的数据做深拷贝是很耗时的，这里实际上是不需要做深拷贝的，直接用即可</li>\n</ul>\n<p>解决以上两个问题，性能会有很大提升。</p>\n<p>但是以前这样的写法可能是出于一些其它考虑，所以在做更改的时候，需要小心谨慎，避免引出其它问题。</p>\n<h3 id=\"1-3、完成后的效果对比\"><a href=\"#1-3、完成后的效果对比\" class=\"headerlink\" title=\"1.3、完成后的效果对比\"></a>1.3、完成后的效果对比</h3><p><strong>优化前后的对比</strong></p>\n<p><strong>图表：</strong></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090778820-8218125c-701a-482c-ab45-c684c78f961a.png\" alt=\"优化前\"></p>\n<p>优化前：由图可以看出，当素材数量在5以下时，看不出明显的时间变化，此时平台性能基本稳定。但是随着素材数量的增加，耗时情况越严重，平台的素材上限是15，此时首次进入到渲染完成需要接近20秒。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090552375-7178f62f-958d-4306-824f-f894fa256e78.png\" alt=\"优化后\"></p>\n<p>优化后：由图可以看出，随着素材数量的增加，时间上的损耗无明显变化，平台性能基本稳定，始终维持在5秒左右，无论是首次进入的渲染还是切换素材以及输入内容，都比较平稳流畅。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1730091311242-51d3b08c-5fcd-4841-8caa-55343379b8ef.png\" alt=\"前后对比\"></p>\n<p>优化前后对比：由上图可以看出，随着素材数量的增加，优化效果会显著提升。当数量控制在5以下时，效果整体差别不大，但是数量为10、15的时候，优化前会变得异常卡顿，严重影响制作流程。优化后会有一个明显的性能提升的效果。</p>\n<p><strong>优化前（gif见附件）：</strong></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084678840-31894cd3-2ff9-4ce3-a421-ddff20e1d9f8.gif\"></p>\n<p><strong>优化后（gif见附件）：</strong></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084697597-d049e30e-e02b-41fa-9c96-288c3ccb5e21.gif\"></p>\n<h3 id=\"1-4、同步课文设计存在的缺陷（未开始）\"><a href=\"#1-4、同步课文设计存在的缺陷（未开始）\" class=\"headerlink\" title=\"1.4、同步课文设计存在的缺陷（未开始）\"></a>1.4、同步课文设计存在的缺陷（未开始）</h3><ul>\n<li>请求当前页的所有课文</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">getResouceQuestionList</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">reset <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> postData <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token operator\">...</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getWordList</span><span class=\"token punctuation\">(</span>postData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBatchStInfo</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> <span class=\"token string\">'mounted'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>便利请求过来的数据，按顺序执行编译过程getBatchStInfo –&gt;getTemplateData–&gt;parseContent，说白了就是准备好所有的右侧需要展示的数据，这一步是一个极其耗时的过程，有着很长的数据处理流程，带来的体验就是首次进入课文包，首次加载很慢，同时涉及到请求侧边栏数据的操作都会耗时卡顿，比如切换页码，批量标签，批量标注后返回的主页面都会卡顿。</li>\n</ul>\n<p>解决办法：不需要一次性处理侧边栏所有的数据，而是只处理第一条数据，后续切换素材的时候切换的哪个素材就做哪个素材的数据处理，可以大大优化卡顿问题。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">public</span> <span class=\"token function\">getBatchStInfo</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span> type<span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> reset<span class=\"token operator\">?</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  data<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">getTemplateData</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>identifier <span class=\"token keyword\">as</span> string<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">returnObj</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setTempObj</span><span class=\"token punctuation\">(</span>tempObj<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span>reset <span class=\"token operator\">?</span> length <span class=\"token operator\">+</span> index <span class=\"token operator\">:</span> index<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token function\">setTempObj</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">newVlaue</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> index<span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">?</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> parseTempObj <span class=\"token operator\">=</span> <span class=\"token function\">parseContent</span><span class=\"token punctuation\">(</span>newVlaue<span class=\"token punctuation\">,</span> newVlaue<span class=\"token punctuation\">.</span>isMultPaper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-5、依赖分析（未开始）\"><a href=\"#1-5、依赖分析（未开始）\" class=\"headerlink\" title=\"1.5、依赖分析（未开始）\"></a>1.5、依赖分析（未开始）</h3><p>npm包：depCheck</p>\n<p>depcheck 是一款用于检测项目中未使用依赖项的工具，特别适用于前端和Node.js项目。它的主要目的是帮助开发者识别并移除那些在项目中未被实际引用的依赖，从而优化项目结构，减少不必要的依赖，提高项目的运行效率和安全性。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install <span class=\"token operator\">-</span>g depcheck\n<span class=\"token comment\">// 根目录</span>\ndepcheck<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>执行后，depcheck会输出三个主要部分的结果：</p>\n<p>未使用的依赖：列出项目中未使用的依赖项。</p>\n<p>缺失的依赖：列出项目中实际使用但未在<code>package.json</code>中声明的依赖项。</p>\n<p>无用的文件：列出项目中未使用的文件。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1728961532523-b1d9c875-b2c8-4105-96f6-a04e70b75a97.png\"></p>\n<p>这个不可以完全相信，但是可以作为分析依赖的依据，基本可以排查荣誉的依赖，这些依赖的存在占用体积，去除这些无用的包，或者利用率比较小的包可以加快打包速度，减小打包体积，以获得更好的体验。</p>\n<h3 id=\"1-6、打包优化（未开始）\"><a href=\"#1-6、打包优化（未开始）\" class=\"headerlink\" title=\"1.6、打包优化（未开始）\"></a>1.6、打包优化（未开始）</h3><p>插件：webpack-bundle-analyzer</p>\n<p>webpack-bundle-analyzer 是一个用于分析和可视化Webpack打包结果的工具。它能够生成一个交互式的可缩放树状图，展示每个模块在打包文件中的大小，帮助开发者识别和优化不必要的依赖和代码，从而减小最终打包文件的体积。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev webpack<span class=\"token operator\">-</span>bundle<span class=\"token operator\">-</span>analyzer\n\n<span class=\"token keyword\">const</span> BundleAnalyzerPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack-bundle-analyzer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>BundleAnalyzerPlugin<span class=\"token punctuation\">;</span>\n\nconfig<span class=\"token punctuation\">.</span>plugins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">BundleAnalyzerPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>资源平台项目打包后的视图如下</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1728972087296-19131b20-4999-424d-9509-651434ec8909.png\"></p>\n<p>从这里可以看出平台的打包分的还是比较细致的，而且第三方库和业务代码是分开的，这样的好处就是第三方代码可以完全利用http缓存，不需要多次请求资源，只需要请求变更后的业务代码即可。</p>\n<p>在第三方模块里发现了很多可以改进的地方，比如第三方库中的monaco-editor占用了很大的体积，我们查看后发现这个包并没有被使用，这个是可以删除的，此外向jquery这种落后的第三方完全可以删掉，不再使用。除此之外像其它第三方库比如e-charts，element-ui可以用按需导入，减小体积。</p>\n<p>在业务模块里，发现很多没有用上的大体积的文件，比如stJson.ts引入了根本用不上。这张是完全可以删除的，以此类推可以排查出很多大体积打包文件，提升构建速度和用户体验。</p>\n","excerpt":"","more":"<h1 id=\"1、性能优化\"><a href=\"#1、性能优化\" class=\"headerlink\" title=\"1、性能优化\"></a>1、性能优化</h1><h3 id=\"1-1、富文本框的事件监听问题\"><a href=\"#1-1、富文本框的事件监听问题\" class=\"headerlink\" title=\"1.1、富文本框的事件监听问题\"></a>1.1、富文本框的事件监听问题</h3><p>&emsp;&emsp;滚动页面时，发现页面卡顿，通过浏览器开发者工具的performance分析，发现鼠标在页面滑动的时候在不断的执行一个方法，找到对应的代码位置后发现这里写了一个mousemove。这种事件的触发频率非常之高，会导致使用不流畅，卡帧的现象。</p>\n<p>解决办法：</p>\n<ul>\n<li>防抖节流，可以设置500ms执行一次</li>\n<li>使用webAPI，IntersectionObserverAPI，元素与视口交叉执行</li>\n<li>直接将mousemove替换成mouseenter，鼠标进入时触发</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div  @mousemove<span class=\"token punctuation\">.</span>stop<span class=\"token operator\">=</span><span class=\"token string\">\"changeToEdit\"</span><span class=\"token operator\">></span>\n    <span class=\"token comment\">//....</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n <span class=\"token keyword\">public</span> <span class=\"token function\">changeToEdit</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isEdit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isEdit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAudio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'richText'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createEditorFun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'textarea'</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTextareaEditorFun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"1-2、js执行时间过长导致的页面书写卡顿问题（已完成）\"><a href=\"#1-2、js执行时间过长导致的页面书写卡顿问题（已完成）\" class=\"headerlink\" title=\"1.2、js执行时间过长导致的页面书写卡顿问题（已完成）\"></a>1.2、js执行时间过长导致的页面书写卡顿问题（已完成）</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1728973795705-573ce7c0-b02e-4747-8de8-f75c50a9348c.png\"></p>\n<p>我们在使用的时候有着很明显的卡顿和卡帧问题，通过浏览器开发者工具的performance分析，发现我们在输入内容时在不断的执行一个函数watchMenuInfo，并且这个js函数执行周期比较长，那么一定是会影响页面渲染的。定位到代码位置分析，代码的逻辑是我们右边展示的数据都是存在左边侧边栏的，当我们输入内容或者做其他事情的时候，需要同步更新侧边栏。</p>\n<p>如下截取的一部分代码</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">@<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menuInfo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token function\">watchMenuInfo</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span> oldValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>menuList <span class=\"token operator\">=</span> <span class=\"token function\">deepClone</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>total <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>menuList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n@<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menuList'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token function\">menuListChane</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span> oldValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>oldValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>showList <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCurrentShowList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>代码中存在的两个问题</p>\n<ul>\n<li>不必要的监听：vue组件之间传值，对与引用类型的数据是双向的，我们在更改右侧内容的时候侧边的数据是直接同步的，不需要做额外的监听操作。</li>\n<li>大数据的深拷贝：侧边栏的数据一般是很大的，大体积的数据做深拷贝是很耗时的，这里实际上是不需要做深拷贝的，直接用即可</li>\n</ul>\n<p>解决以上两个问题，性能会有很大提升。</p>\n<p>但是以前这样的写法可能是出于一些其它考虑，所以在做更改的时候，需要小心谨慎，避免引出其它问题。</p>\n<h3 id=\"1-3、完成后的效果对比\"><a href=\"#1-3、完成后的效果对比\" class=\"headerlink\" title=\"1.3、完成后的效果对比\"></a>1.3、完成后的效果对比</h3><p><strong>优化前后的对比</strong></p>\n<p><strong>图表：</strong></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090778820-8218125c-701a-482c-ab45-c684c78f961a.png\" alt=\"优化前\"></p>\n<p>优化前：由图可以看出，当素材数量在5以下时，看不出明显的时间变化，此时平台性能基本稳定。但是随着素材数量的增加，耗时情况越严重，平台的素材上限是15，此时首次进入到渲染完成需要接近20秒。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1730090552375-7178f62f-958d-4306-824f-f894fa256e78.png\" alt=\"优化后\"></p>\n<p>优化后：由图可以看出，随着素材数量的增加，时间上的损耗无明显变化，平台性能基本稳定，始终维持在5秒左右，无论是首次进入的渲染还是切换素材以及输入内容，都比较平稳流畅。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1730091311242-51d3b08c-5fcd-4841-8caa-55343379b8ef.png\" alt=\"前后对比\"></p>\n<p>优化前后对比：由上图可以看出，随着素材数量的增加，优化效果会显著提升。当数量控制在5以下时，效果整体差别不大，但是数量为10、15的时候，优化前会变得异常卡顿，严重影响制作流程。优化后会有一个明显的性能提升的效果。</p>\n<p><strong>优化前（gif见附件）：</strong></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084678840-31894cd3-2ff9-4ce3-a421-ddff20e1d9f8.gif\"></p>\n<p><strong>优化后（gif见附件）：</strong></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/gif/35329855/1730084697597-d049e30e-e02b-41fa-9c96-288c3ccb5e21.gif\"></p>\n<h3 id=\"1-4、同步课文设计存在的缺陷（未开始）\"><a href=\"#1-4、同步课文设计存在的缺陷（未开始）\" class=\"headerlink\" title=\"1.4、同步课文设计存在的缺陷（未开始）\"></a>1.4、同步课文设计存在的缺陷（未开始）</h3><ul>\n<li>请求当前页的所有课文</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">getResouceQuestionList</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">reset <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> postData <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token operator\">...</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getWordList</span><span class=\"token punctuation\">(</span>postData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBatchStInfo</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> <span class=\"token string\">'mounted'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>便利请求过来的数据，按顺序执行编译过程getBatchStInfo –&gt;getTemplateData–&gt;parseContent，说白了就是准备好所有的右侧需要展示的数据，这一步是一个极其耗时的过程，有着很长的数据处理流程，带来的体验就是首次进入课文包，首次加载很慢，同时涉及到请求侧边栏数据的操作都会耗时卡顿，比如切换页码，批量标签，批量标注后返回的主页面都会卡顿。</li>\n</ul>\n<p>解决办法：不需要一次性处理侧边栏所有的数据，而是只处理第一条数据，后续切换素材的时候切换的哪个素材就做哪个素材的数据处理，可以大大优化卡顿问题。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">public</span> <span class=\"token function\">getBatchStInfo</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span> type<span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> reset<span class=\"token operator\">?</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  data<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">getTemplateData</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>identifier <span class=\"token keyword\">as</span> string<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">returnObj</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setTempObj</span><span class=\"token punctuation\">(</span>tempObj<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span>reset <span class=\"token operator\">?</span> length <span class=\"token operator\">+</span> index <span class=\"token operator\">:</span> index<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token function\">setTempObj</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">newVlaue</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> index<span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">?</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> parseTempObj <span class=\"token operator\">=</span> <span class=\"token function\">parseContent</span><span class=\"token punctuation\">(</span>newVlaue<span class=\"token punctuation\">,</span> newVlaue<span class=\"token punctuation\">.</span>isMultPaper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-5、依赖分析（未开始）\"><a href=\"#1-5、依赖分析（未开始）\" class=\"headerlink\" title=\"1.5、依赖分析（未开始）\"></a>1.5、依赖分析（未开始）</h3><p>npm包：depCheck</p>\n<p>depcheck 是一款用于检测项目中未使用依赖项的工具，特别适用于前端和Node.js项目。它的主要目的是帮助开发者识别并移除那些在项目中未被实际引用的依赖，从而优化项目结构，减少不必要的依赖，提高项目的运行效率和安全性。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install <span class=\"token operator\">-</span>g depcheck\n<span class=\"token comment\">// 根目录</span>\ndepcheck<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>执行后，depcheck会输出三个主要部分的结果：</p>\n<p>未使用的依赖：列出项目中未使用的依赖项。</p>\n<p>缺失的依赖：列出项目中实际使用但未在<code>package.json</code>中声明的依赖项。</p>\n<p>无用的文件：列出项目中未使用的文件。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1728961532523-b1d9c875-b2c8-4105-96f6-a04e70b75a97.png\"></p>\n<p>这个不可以完全相信，但是可以作为分析依赖的依据，基本可以排查荣誉的依赖，这些依赖的存在占用体积，去除这些无用的包，或者利用率比较小的包可以加快打包速度，减小打包体积，以获得更好的体验。</p>\n<h3 id=\"1-6、打包优化（未开始）\"><a href=\"#1-6、打包优化（未开始）\" class=\"headerlink\" title=\"1.6、打包优化（未开始）\"></a>1.6、打包优化（未开始）</h3><p>插件：webpack-bundle-analyzer</p>\n<p>webpack-bundle-analyzer 是一个用于分析和可视化Webpack打包结果的工具。它能够生成一个交互式的可缩放树状图，展示每个模块在打包文件中的大小，帮助开发者识别和优化不必要的依赖和代码，从而减小最终打包文件的体积。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev webpack<span class=\"token operator\">-</span>bundle<span class=\"token operator\">-</span>analyzer\n\n<span class=\"token keyword\">const</span> BundleAnalyzerPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack-bundle-analyzer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>BundleAnalyzerPlugin<span class=\"token punctuation\">;</span>\n\nconfig<span class=\"token punctuation\">.</span>plugins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">BundleAnalyzerPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>资源平台项目打包后的视图如下</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/35329855/1728972087296-19131b20-4999-424d-9509-651434ec8909.png\"></p>\n<p>从这里可以看出平台的打包分的还是比较细致的，而且第三方库和业务代码是分开的，这样的好处就是第三方代码可以完全利用http缓存，不需要多次请求资源，只需要请求变更后的业务代码即可。</p>\n<p>在第三方模块里发现了很多可以改进的地方，比如第三方库中的monaco-editor占用了很大的体积，我们查看后发现这个包并没有被使用，这个是可以删除的，此外向jquery这种落后的第三方完全可以删掉，不再使用。除此之外像其它第三方库比如e-charts，element-ui可以用按需导入，减小体积。</p>\n<p>在业务模块里，发现很多没有用上的大体积的文件，比如stJson.ts引入了根本用不上。这张是完全可以删除的，以此类推可以排查出很多大体积打包文件，提升构建速度和用户体验。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm42hwwt40001ssnn60oq4rds","category_id":"cm42hwwtc0004ssnn7hmxdx91","_id":"cm42hwwtu000jssnn30d39sun"},{"post_id":"cm42hwwta0003ssnn6yxlcpud","category_id":"cm42hwwtc0004ssnn7hmxdx91","_id":"cm42hwwtw000ossnn4srs9c88"},{"post_id":"cm42hwwtl0007ssnn60xa3sch","category_id":"cm42hwwtt000issnnesgpewsd","_id":"cm42hwwtz000ussnn6p680gvx"},{"post_id":"cm42hwwtn0009ssnn425s9tyr","category_id":"cm42hwwtw000pssnn0ggbem23","_id":"cm42hwwu10011ssnn4oxf3gcm"},{"post_id":"cm42hwwto000bssnngbj0gtem","category_id":"cm42hwwtw000pssnn0ggbem23","_id":"cm42hwwu30016ssnn0mpv5645"},{"post_id":"cm42hwwu20013ssnn7ve31zuo","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwu7001dssnnai583kna"},{"post_id":"cm42hwwtr000gssnn0fzb8yul","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwu8001issnn5vdv08yr"},{"post_id":"cm42hwwu20015ssnn2tr61x7d","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwu9001lssnn844d1gnz"},{"post_id":"cm42hwwu5001assnn8nri58li","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwub001qssnnhyoz4koc"},{"post_id":"cm42hwwts000hssnn62cg431i","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwuc001tssnn26hl9525"},{"post_id":"cm42hwwu6001cssnnfu4m1qho","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwuf001yssnnglumh9c5"},{"post_id":"cm42hwwu7001hssnn84805u5o","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwug0021ssnn1ct994ej"},{"post_id":"cm42hwwtu000mssnnem57f3g9","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwuh0026ssnnefl8dwiy"},{"post_id":"cm42hwwu9001kssnn06pv13f1","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwui0029ssnnac8x3so9"},{"post_id":"cm42hwwtv000nssnngx4e2zv7","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwuj002essnn0uxzcrav"},{"post_id":"cm42hwwuc001xssnn5dwk2rda","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwuk002hssnn5m4k6sqc"},{"post_id":"cm42hwwtx000rssnn641geivv","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwul002kssnn1iqrczvz"},{"post_id":"cm42hwwty000tssnndd5celt7","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwul002mssnnde37fc5c"},{"post_id":"cm42hwwu0000xssnnd2u70vkf","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwum002pssnn87en5ecn"},{"post_id":"cm42hwwu0000zssnnbvvlg2pb","category_id":"cm42hwwu10010ssnn8y3g5r8o","_id":"cm42hwwum002rssnna6k0aum5"},{"post_id":"cm42hwwua001pssnnhoqa4gly","category_id":"cm42hwwul002nssnn1pkb6ofu","_id":"cm42hwwun002wssnncxwrc5jc"},{"post_id":"cm42hwwub001sssnndvzd6has","category_id":"cm42hwwul002nssnn1pkb6ofu","_id":"cm42hwwun002zssnn4uemfxh3"},{"post_id":"cm42hwwuf0020ssnn889wg6xo","category_id":"cm42hwwun002vssnnddcrca7q","_id":"cm42hwwuo0034ssnn10sj6lf3"},{"post_id":"cm42hwwug0025ssnn1fo57xyt","category_id":"cm42hwwul002nssnn1pkb6ofu","_id":"cm42hwwup0038ssnn4tpkafgt"},{"post_id":"cm42hwwuh0028ssnn97ekhywv","category_id":"cm42hwwul002nssnn1pkb6ofu","_id":"cm42hwwuq003cssnn323i1dna"},{"post_id":"cm42hwwui002dssnnav0y34gf","category_id":"cm42hwwun002vssnnddcrca7q","_id":"cm42hwwuq003fssnn82dya0h0"},{"post_id":"cm42hwwuj002gssnngzxpg7h6","category_id":"cm42hwwuq003bssnnctah7pkn","_id":"cm42hwwur003issnnfbz1caz2"}],"PostTag":[{"post_id":"cm42hwwt40001ssnn60oq4rds","tag_id":"cm42hwwtd0005ssnndkua1i6d","_id":"cm42hwwtq000essnn38nuf2bk"},{"post_id":"cm42hwwta0003ssnn6yxlcpud","tag_id":"cm42hwwtd0005ssnndkua1i6d","_id":"cm42hwwtu000lssnnhuvj80q4"},{"post_id":"cm42hwwtl0007ssnn60xa3sch","tag_id":"cm42hwwtu000kssnn8k781k0f","_id":"cm42hwwty000sssnnab3xfw3f"},{"post_id":"cm42hwwtn0009ssnn425s9tyr","tag_id":"cm42hwwtw000qssnnfsyyfshy","_id":"cm42hwwu0000yssnn6bp24jmr"},{"post_id":"cm42hwwto000bssnngbj0gtem","tag_id":"cm42hwwtw000qssnnfsyyfshy","_id":"cm42hwwu20014ssnneburcqg0"},{"post_id":"cm42hwwu20013ssnn7ve31zuo","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwu30017ssnn3mza5zrl"},{"post_id":"cm42hwwtr000gssnn0fzb8yul","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwu6001bssnndp387yqu"},{"post_id":"cm42hwwu20015ssnn2tr61x7d","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwu7001essnn1w7h3fbk"},{"post_id":"cm42hwwu5001assnn8nri58li","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwu8001jssnn4z42265e"},{"post_id":"cm42hwwts000hssnn62cg431i","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwu9001mssnn0edug9j6"},{"post_id":"cm42hwwu6001cssnnfu4m1qho","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwub001rssnn6dvg659k"},{"post_id":"cm42hwwu7001hssnn84805u5o","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwuc001ussnn65ihf57y"},{"post_id":"cm42hwwtu000mssnnem57f3g9","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwuf001zssnn4wzsafl5"},{"post_id":"cm42hwwu9001kssnn06pv13f1","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwug0022ssnn628qfyx3"},{"post_id":"cm42hwwtv000nssnngx4e2zv7","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwuh0027ssnn9yw8ahv2"},{"post_id":"cm42hwwtx000rssnn641geivv","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwui002assnn195jguge"},{"post_id":"cm42hwwty000tssnndd5celt7","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwuj002fssnn8qv2el04"},{"post_id":"cm42hwwu0000xssnnd2u70vkf","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwul002lssnndyh5e8su"},{"post_id":"cm42hwwu0000zssnnbvvlg2pb","tag_id":"cm42hwwu10012ssnnhjbbhgnr","_id":"cm42hwwum002qssnn1wcn7kxt"},{"post_id":"cm42hwwua001pssnnhoqa4gly","tag_id":"cm42hwwul002ossnndxlv6cd5","_id":"cm42hwwun002ussnnhukeeiy6"},{"post_id":"cm42hwwub001sssnndvzd6has","tag_id":"cm42hwwul002ossnndxlv6cd5","_id":"cm42hwwun002yssnnawyl8e5y"},{"post_id":"cm42hwwuc001xssnn5dwk2rda","tag_id":"cm42hwwun002xssnn7qimghse","_id":"cm42hwwuo0032ssnn5q7qbyms"},{"post_id":"cm42hwwuf0020ssnn889wg6xo","tag_id":"cm42hwwun0031ssnn8d2k9dd7","_id":"cm42hwwup0036ssnnc8mwbtzs"},{"post_id":"cm42hwwug0025ssnn1fo57xyt","tag_id":"cm42hwwul002ossnndxlv6cd5","_id":"cm42hwwuq003assnn8zoagy0z"},{"post_id":"cm42hwwuh0028ssnn97ekhywv","tag_id":"cm42hwwul002ossnndxlv6cd5","_id":"cm42hwwuq003essnn1tx4dejq"},{"post_id":"cm42hwwui002dssnnav0y34gf","tag_id":"cm42hwwun0031ssnn8d2k9dd7","_id":"cm42hwwur003hssnn3vz66y6f"},{"post_id":"cm42hwwuj002gssnngzxpg7h6","tag_id":"cm42hwwuq003gssnn1zfj1z0e","_id":"cm42hwwur003jssnnb3fx8is2"}],"Tag":[{"name":"凡人修Vue3传","_id":"cm42hwwtd0005ssnndkua1i6d"},{"name":"前端面试合集","_id":"cm42hwwtu000kssnn8k781k0f"},{"name":"党史学习","_id":"cm42hwwtw000qssnnfsyyfshy"},{"name":"工作知识总结","_id":"cm42hwwu10012ssnnhjbbhgnr"},{"name":"自定义封装组件","_id":"cm42hwwul002ossnndxlv6cd5"},{"name":"机智的我","_id":"cm42hwwun002xssnn7qimghse"},{"name":"浪潮之巅","_id":"cm42hwwun0031ssnn8d2k9dd7"},{"name":"工作记录","_id":"cm42hwwuq003gssnn1zfj1z0e"}]}}